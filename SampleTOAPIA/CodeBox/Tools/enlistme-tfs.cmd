:: ------------------------------------------------------------------
:: enlistme-tfs.cmd
:: ------------------------------------------------------------------
::
:: Enlist a developer in the source tree for the given TFS project.
::
:: PREREQUISITES:
:: It is assumed that this command is called by the "run.enlistme.cmd"
:: which is generated by the CodeBox "enlistmeTFS.hta" application file.
:: The application and command file will do the following:
::  1. verify that TFS is installed
::  2. get from the user the local enlistment folder
::  3. create a TFS workspace named <ComputerName>-<ProjectName>
::  4. map the TFS team project to the local enlistment folder
::  5. get the /Tools/* files that are used by the enlistment process
::  6. change directory to the local enlistment folder
::  7. lastly, call this command

:: ------------------------------------------------------------------
:: Turn echo off unless verbose is defined.
:: ------------------------------------------------------------------
@echo off
if defined Verbose echo on

@echo Running %~d0%~p0%~n0 ...

:: ------------------------------------------------------------------
:: Turn on setlocal to keep environment changes local to this script.
:: Turn on delayed environment variable expansion.
:: ------------------------------------------------------------------
setlocal enabledelayedexpansion

:: ------------------------------------------------------------------
:: Setup TFS environment
:: ------------------------------------------------------------------
set _VSTOOLS=%VS90COMNTOOLS%
if "%_VSTOOLS%"=="" set _VSTOOLS=%VS80COMNTOOLS%

call "%_VSTOOLS%vsvars32.bat"

:: ------------------------------------------------------------------
:: Check parameters
:: ------------------------------------------------------------------
if "%1"=="" goto :Usage

:ArgLoop

if "%1"=="" goto :ArgLoopDone

:: Go to Usage routine if first parameter contains a question mark or starts 
:: with a dash
for %%a in (./ .- .) do if ".%1." == "%%a?." goto :Usage

:: First argument sets branch
if "%Project%"=="" set Project=%1& shift& goto :ArgLoop

:ArgLoopDone

:: ------------------------------------------------------------------
:: Prepare %INETROOT%.
:: ------------------------------------------------------------------
:: Set INETROOT to the current directory which is the local enlistment folder
set INETROOT=%CD%

:: Verify that root directory has at least one backslash.
@echo %INETROOT% | findstr \\ >nul
if errorlevel 1 (
  @echo.
  @echo Error: The enlistment root path "%INETROOT%" must have at least one backslash in it.
  goto :EndOfScript
)

:: ------------------------------------------------------------------
:: Show starting messages to user
:: ------------------------------------------------------------------
:: Print out what this script will do
@echo This script will create a workspace for the Team Project: %Project%.
@echo Files will be created in the %INETROOT% directory.

:: ------------------------------------------------------------------
:: Get the project files; copy to the mapped enlistment folder
:: ------------------------------------------------------------------
tf get $/%_ProjectName% /force /recursive

:: ------------------------------------------------------------------
:: Register checkin policy if applicable for project
:: ------------------------------------------------------------------
if exist "%INETROOT%\CodeBox\CheckinApproval\UpdateCodeBoxCheckinPolicies.exe" (
  @echo.
  @echo on
  "%INETROOT%\CodeBox\CheckinApproval\UpdateCodeBoxCheckinPolicies.exe"
  @echo off
)

:: ------------------------------------------------------------------------------
:: Create a shortcut on the user's desktop.
::
:: _INETROOT_ icon path keyword is replaced with the startup path by shortcut.vbs
:: _CUR_DIR_ arguments keyword is replaced with %CD% by shortcut.vbs
:: ------------------------------------------------------------------------------
set ShortcutStartup=%INETROOT%
set ProjectIcon=_INETROOT_\codebox\tools\icon.ico
set "Args=/k set INETROOT=_CUR_DIR_&set CODEBOXPROJECT=%Project%&.\codebox\tools\runme-tfs.cmd"

set ShortcutName=CodeBox %Project%
set ShortcutNumber=0

:ShortCut_Next
if exist "%userprofile%\desktop\%shortcutname%*.lnk" (
  for /f "tokens=*" %%i in ( 'dir /b "%userprofile%\desktop\%shortcutname%*.lnk"' ) do (
    if "%ShortcutNumber%"=="0" (
      if /i "%%i"=="%shortcutname%.lnk" (
          set ShortcutNumber=1
          goto :ShortCut_Next
      )   
    ) else (
       if /i "%%i"=="%shortcutname% [%ShortcutNumber%].lnk" (
         set /a ShortcutNumber=%ShortcutNumber%+1
         goto :ShortCut_Next
       )
     )
  )
)

if not "%ShortcutNumber%"=="0" (
  set ShortcutName=%ShortcutName% [%ShortcutNumber%]
)

"%INETROOT%\codebox\tools\shortcut.vbs" /p:cmd.exe /n:"%ShortcutName%.lnk" /i:"%ProjectIcon%" /a:"%Args%" /d:"%ShortcutStartup%"

:: ------------------------------------------------------------------
:: Show completion message to user
:: ------------------------------------------------------------------
echo.
echo.
echo You are now enlisted in the %Project% sources
echo A shortcut for "CodeBox %Project%" has been placed on your desktop.

goto :EndOfScript

:: ------------------------------------------------------------------
:: Show usage information incase of missing parameter
:: ------------------------------------------------------------------
:NoTFS
@echo.
@echo Error! the VS80COMNTOOLS or VS90COMNTOOLS environment variable is not defined
@echo Team Foundation Server must be installed on this client
@echo.

goto :EndOfScript

:: ------------------------------------------------------------------
:: Show usage information incase of missing parameter
:: ------------------------------------------------------------------
:Usage

@echo CodeBox Enlistme :: Usage
@echo.
@echo %ScriptCmdName% [ProjectName]
@echo.
@echo Use this script to enlist in sources from the TFS server.
@echo.

goto :EndOfScript

:: ------------------------------------------------------------------
:: End of script
:: ------------------------------------------------------------------
:EndOfScript
endlocal
goto :EOF