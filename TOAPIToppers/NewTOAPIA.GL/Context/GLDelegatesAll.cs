using System;
using System.Runtime.InteropServices;
using System.Text;


namespace NewTOAPIA.GL
{
    public delegate void DglAccum_IF(int op, float value);

    public delegate void DglActiveStencilFaceEXT_I(int face);
    public delegate void DglActiveTexture_I(int texture);
    //public delegate void DglActiveTextureARB_I(int texture);
    public delegate void DglAddSwapHintRectWIN_IIII(int x, int y, int width, int height);
    public delegate void DglAlphaFragmentOp1ATI_IIIIII(int op, int dst, int dstMod, int arg1, int arg1Rep, int arg1Mod);
    public delegate void DglAlphaFragmentOp2ATI_IIIIIIIII(int op, int dst, int dstMod, int arg1, int arg1Rep, int arg1Mod, int arg2, int arg2Rep, int arg2Mod);
    public delegate void DglAlphaFragmentOp3ATI_IIIIIIIIIIII(int op, int dst, int dstMod, int arg1, int arg1Rep, int arg1Mod, int arg2, int arg2Rep, int arg2Mod, int arg3, int arg3Rep, int arg3Mod);
    public delegate void DglAlphaFunc_IF(int func, float fref);
    public delegate void DglApplyTextureEXT_I(int mode);
    public delegate byte DglAreProgramsResidentNV_IaIaB(int n, int[] programs, byte[] residences);
    public delegate byte DglAreProgramsResidentNV_IPP(int n, IntPtr programs, IntPtr residences);
    public delegate byte DglAreTexturesResident_IaIaB(int n, int[] textures, byte[] residences);
    public delegate byte DglAreTexturesResident_IPP(int n, IntPtr textures, IntPtr residences);
    public delegate byte DglAreTexturesResidentEXT_IaIaB(int n, int[] textures, byte[] residences);
    public delegate byte DglAreTexturesResidentEXT_IPP(int n, IntPtr textures, IntPtr residences);
    public delegate void DglArrayElement_I(int i);
    public delegate void DglArrayElementArrayEXT_IIaB(int mode, int count, byte[] pi);
    public delegate void DglArrayElementArrayEXT_IIP(int mode, int count, IntPtr pi);
    public delegate void DglArrayElementEXT_I(int i);
    public delegate void DglArrayObjectATI_IIIIII(int array, int size, int itype, int stride, int buffer, int offset);
    public delegate void DglAsyncMarkerSGIX_I(int marker);
    //public delegate void DglAttachObjectARB_II(int containerObj, int obj);
    public delegate void DglAttachShader_II(int program, int shader);
    public delegate void DglBegin_I(int mode);
    public delegate void DglBeginFragmentShaderATI_V();
    public delegate void DglBeginOcclusionQueryNV_I(int id);
    public delegate void DglBeginQuery_II(int target, int id);
    //public delegate void DglBeginQueryARB_II(int target, int id);
    public delegate void DglBeginVertexShaderEXT_V();
    public delegate void DglBindAttribLocation_IIS(int program, int index, String name);
    //public delegate void DglBindAttribLocationARB_IIS(int programObj, int index, String name);
    public delegate void DglBindBuffer(int target, int buffer);
    //public delegate void DglBindBufferARB_II(int target, uint buffer);
    public delegate void DglBindFragmentShaderATI_I(int id);
    public delegate void DglBindFramebufferEXT_II(int target, int framebuffer);
    public delegate int DglBindLightParameterEXT_II(int light, int value);
    public delegate int DglBindMaterialParameterEXT_II(int face, int value);
    public delegate int DglBindParameterEXT_I(int value);
    //public delegate void DglBindProgramARB_II(int target, int program);
    public delegate void DglBindProgramNV_II(int target, int id);
    public delegate void DglBindRenderbufferEXT_II(int target, int renderbuffer);
    public delegate int DglBindTexGenParameterEXT_III(int unit, int coord, int value);
    public delegate void DglBindTexture_II(int target, int texture);
    public delegate void DglBindTextureEXT_II(int target, int texture);
    public delegate int DglBindTextureUnitParameterEXT_II(int unit, int value);
    public delegate void DglBindVertexArrayAPPLE_I(int array);
    public delegate void DglBindVertexShaderEXT_I(int id);
    public delegate void DglBinormal3bEXT_BBB(byte bx, byte by, byte bz);
    public delegate void DglBinormal3bvEXT_aB(byte[] v);
    public delegate void DglBinormal3bvEXT_P(IntPtr v);
    public delegate void DglBinormal3dEXT_DDD(double bx, double by, double bz);
    public delegate void DglBinormal3dvEXT_aD(double[] v);
    public delegate void DglBinormal3dvEXT_P(IntPtr v);
    public delegate void DglBinormal3fEXT_FFF(float bx, float by, float bz);
    public delegate void DglBinormal3fvEXT_aF(float[] v);
    public delegate void DglBinormal3fvEXT_P(IntPtr v);
    public delegate void DglBinormal3iEXT_III(int bx, int by, int bz);
    public delegate void DglBinormal3ivEXT_aI(int[] v);
    public delegate void DglBinormal3ivEXT_P(IntPtr v);
    public delegate void DglBinormal3sEXT_HHH(short bx, short by, short bz);
    public delegate void DglBinormal3svEXT_aH(short[] v);
    public delegate void DglBinormal3svEXT_P(IntPtr v);
    public delegate void DglBinormalPointerEXT_IIaF(int itype, int stride, float[] pointer);
    public delegate void DglBinormalPointerEXT_IIP(int itype, int stride, IntPtr pointer);
    public delegate void DglBitmap_IIFFFFaB(int width, int height, float xorig, float yorig, float xmove, float ymove, byte[] bitmap);
    public delegate void DglBitmap_IIFFFFP(int width, int height, float xorig, float yorig, float xmove, float ymove, IntPtr bitmap);
    public delegate void DglBlendColor_FFFF(float red, float green, float blue, float alpha);
    public delegate void DglBlendColorEXT_FFFF(float red, float green, float blue, float alpha);
    public delegate void DglBlendEquation_I(int mode);
    public delegate void DglBlendEquationEXT_I(int mode);
    public delegate void DglBlendEquationSeparate_II(int modeRGB, int modeAlpha);
    public delegate void DglBlendEquationSeparateEXT_II(int modeRGB, int modeAlpha);
    public delegate void DglBlendFunc_II(int sfactor, int dfactor);
    public delegate void DglBlendFuncSeparate_IIII(int sfactorRGB, int dfactorRGB, int sfactorAlpha, int dfactorAlpha);
    public delegate void DglBlendFuncSeparateEXT_IIII(int sfactorRGB, int dfactorRGB, int sfactorAlpha, int dfactorAlpha);
    public delegate void DglBlendFuncSeparateINGR_IIII(int sfactorRGB, int dfactorRGB, int sfactorAlpha, int dfactorAlpha);

    public delegate void DglBufferData(int target, int size, IntPtr data, int usage);
    public delegate void DglBufferData_IIPI(int target, int size, IntPtr data, int usage);
    public delegate void DglBufferData_IIaBI(int target, int size, byte[] data, int usage);
    public delegate void DglBufferData_IIaFI(int target, int size, float[] data, int usage);
    public delegate void DglBufferData_IIaII(int target, int size, int[] data, int usage);
    //public delegate void DglBufferDataARB_IIaBI(int target, int size, byte[] data, int usage);
    //public delegate void DglBufferDataARB_IIPI(int target, int size, IntPtr data, int usage);

    public delegate void DglBufferSubData(int target, IntPtr offset, IntPtr size, IntPtr data);
    public delegate void DglBufferSubData_IIIP(int target, int offset, int size, IntPtr data);
    public delegate void DglBufferSubData_IIIaB(int target, int offset, int size, byte[] data);
    public delegate void DglBufferSubData_IIIaF(int target, int offset, int size, float[] data);
    public delegate void DglBufferSubData_IIIaI(int target, int offset, int size, int[] data);
    //public delegate void DglBufferSubDataARB_IIIaB(int target, int offset, int size, byte[] data);
    //public delegate void DglBufferSubDataARB_IIIP(int target, int offset, int size, IntPtr data);

    public delegate void DglCallList_I(int list);
    public delegate void DglCallLists_IIaB(int n, int itype, byte[] lists);
    public delegate void DglCallLists_IIaH(int n, int itype, short[] lists);
    public delegate void DglCallLists_IIaI(int n, int itype, int[] lists);
    public delegate void DglCallLists_IIaF(int n, int itype, float[] lists);
    public delegate void DglCallLists_IIP(int n, int itype, IntPtr lists);
    public delegate int DglCheckFramebufferStatusEXT_I(int target);
    //public delegate void DglClampColorARB_II(int target, int clamp);
    public delegate void DglClear_I(int mask);
    public delegate void DglClearAccum_FFFF(float red, float green, float blue, float alpha);
    public delegate void DglClearColor_FFFF(float red, float green, float blue, float alpha);
    public delegate void DglClearDepth_D(double depth);
    public delegate void DglClearIndex_F(float c);
    public delegate void DglClearStencil_I(int s);
    public delegate void DglClientActiveTexture_I(int texture);
    //public delegate void DglClientActiveTextureARB_I(int texture);
    public delegate void DglClientActiveVertexStreamATI_I(int stream);
    public delegate void DglClipPlane_IaD(int plane, double[] equation);
    public delegate void DglClipPlane_IP(int plane, IntPtr equation);
    public delegate void DglColor3b_BBB(byte red, byte green, byte blue);
    public delegate void DglColor3bv_aB(byte[] v);
    public delegate void DglColor3bv_P(IntPtr v);
    public delegate void DglColor3d_DDD(double red, double green, double blue);
    public delegate void DglColor3dv_aD(double[] v);
    public delegate void DglColor3dv_P(IntPtr v);
    public delegate void DglColor3f_FFF(float red, float green, float blue);
    public delegate void DglColor3fv_aF(float[] v);
    public delegate void DglColor3fv_P(IntPtr v);
    public delegate void DglColor3fVertex3fSUN_FFFFFF(float r, float g, float b, float x, float y, float z);
    public delegate void DglColor3fVertex3fvSUN_aFaF(float[] c, float[] v);
    public delegate void DglColor3fVertex3fvSUN_aFP(float[] c, IntPtr v);
    public delegate void DglColor3fVertex3fvSUN_PaF(IntPtr c, float[] v);
    public delegate void DglColor3fVertex3fvSUN_PP(IntPtr c, IntPtr v);
    public delegate void DglColor3hNV_HHH(short red, short green, short blue);
    public delegate void DglColor3hvNV_aH(short[] v);
    public delegate void DglColor3hvNV_P(IntPtr v);
    public delegate void DglColor3i_III(int red, int green, int blue);
    public delegate void DglColor3iv_aI(int[] v);
    public delegate void DglColor3iv_P(IntPtr v);
    public delegate void DglColor3s_HHH(short red, short green, short blue);
    public delegate void DglColor3sv_aH(short[] v);
    public delegate void DglColor3sv_P(IntPtr v);
    public delegate void DglColor3ub_BBB(byte red, byte green, byte blue);
    public delegate void DglColor3ubv_aB(byte[] v);
    public delegate void DglColor3ubv_P(IntPtr v);
    public delegate void DglColor3ui_III(int red, int green, int blue);
    public delegate void DglColor3uiv_aI(int[] v);
    public delegate void DglColor3uiv_P(IntPtr v);
    public delegate void DglColor3us_HHH(short red, short green, short blue);
    public delegate void DglColor3usv_aH(short[] v);
    public delegate void DglColor3usv_P(IntPtr v);
    public delegate void DglColor4b_BBBB(byte red, byte green, byte blue, byte alpha);
    public delegate void DglColor4bv_aB(byte[] v);
    public delegate void DglColor4bv_P(IntPtr v);
    public delegate void DglColor4d_DDDD(double red, double green, double blue, double alpha);
    public delegate void DglColor4dv_aD(double[] v);
    public delegate void DglColor4dv_P(IntPtr v);
    public delegate void DglColor4f_FFFF(float red, float green, float blue, float alpha);
    public delegate void DglColor4fNormal3fVertex3fSUN_FFFFFFFFFF(float r, float g, float b, float a, float nx, float ny, float nz, float x, float y, float z);
    public delegate void DglColor4fNormal3fVertex3fvSUN_aFaFaF(float[] c, float[] n, float[] v);
    public delegate void DglColor4fNormal3fVertex3fvSUN_PPP(IntPtr c, IntPtr n, IntPtr v);
    public delegate void DglColor4fv_aF(float[] v);
    public delegate void DglColor4fv_P(IntPtr v);
    public delegate void DglColor4hNV_HHHH(short red, short green, short blue, short alpha);
    public delegate void DglColor4hvNV_aH(short[] v);
    public delegate void DglColor4hvNV_P(IntPtr v);
    public delegate void DglColor4i_IIII(int red, int green, int blue, int alpha);
    public delegate void DglColor4iv_aI(int[] v);
    public delegate void DglColor4iv_P(IntPtr v);
    public delegate void DglColor4s_HHHH(short red, short green, short blue, short alpha);
    public delegate void DglColor4sv_aH(short[] v);
    public delegate void DglColor4sv_P(IntPtr v);
    public delegate void DglColor4ub_BBBB(byte red, byte green, byte blue, byte alpha);
    public delegate void DglColor4ubv_aB(byte[] v);
    public delegate void DglColor4ubv_P(IntPtr v);
    public delegate void DglColor4ubVertex2fSUN_BBBBFF(byte r, byte g, byte b, byte a, float x, float y);
    public delegate void DglColor4ubVertex2fvSUN_aBaF(byte[] c, float[] v);
    public delegate void DglColor4ubVertex2fvSUN_aBP(byte[] c, IntPtr v);
    public delegate void DglColor4ubVertex2fvSUN_PaF(IntPtr c, float[] v);
    public delegate void DglColor4ubVertex2fvSUN_PP(IntPtr c, IntPtr v);
    public delegate void DglColor4ubVertex3fSUN_BBBBFFF(byte r, byte g, byte b, byte a, float x, float y, float z);
    public delegate void DglColor4ubVertex3fvSUN_aBaF(byte[] c, float[] v);
    public delegate void DglColor4ubVertex3fvSUN_aBP(byte[] c, IntPtr v);
    public delegate void DglColor4ubVertex3fvSUN_PaF(IntPtr c, float[] v);
    public delegate void DglColor4ubVertex3fvSUN_PP(IntPtr c, IntPtr v);
    public delegate void DglColor4ui_IIII(int red, int green, int blue, int alpha);
    public delegate void DglColor4uiv_aI(int[] v);
    public delegate void DglColor4uiv_P(IntPtr v);
    public delegate void DglColor4us_HHHH(short red, short green, short blue, short alpha);
    public delegate void DglColor4usv_aH(short[] v);
    public delegate void DglColor4usv_P(IntPtr v);
    public delegate void DglColorFragmentOp1ATI_IIIIIII(int op, int dst, int dstMask, int dstMod, int arg1, int arg1Rep, int arg1Mod);
    public delegate void DglColorFragmentOp2ATI_IIIIIIIIII(int op, int dst, int dstMask, int dstMod, int arg1, int arg1Rep, int arg1Mod, int arg2, int arg2Rep, int arg2Mod);
    public delegate void DglColorFragmentOp3ATI_IIIIIIIIIIIII(int op, int dst, int dstMask, int dstMod, int arg1, int arg1Rep, int arg1Mod, int arg2, int arg2Rep, int arg2Mod, int arg3, int arg3Rep, int arg3Mod);
    public delegate void DglColorMask_BBBB(byte red, byte green, byte blue, byte alpha);
    public delegate void DglColorMaterial_II(int face, int mode);
    public delegate void DglColorPointer_IIIaB(int size, int itype, int stride, byte[] pointer);
    public delegate void DglColorPointer_IIIaH(int size, int itype, int stride, short[] pointer);
    public delegate void DglColorPointer_IIIaI(int size, int itype, int stride, int[] pointer);
    public delegate void DglColorPointer_IIIaF(int size, int itype, int stride, float[] pointer);
    public delegate void DglColorPointer_IIIaD(int size, int itype, int stride, double[] pointer);
    public delegate void DglColorPointer_IIIP(int size, int itype, int stride, IntPtr pointer);
    public delegate void DglColorPointerEXT_IIIIaB(int size, int itype, int stride, int count, byte[] pointer);
    public delegate void DglColorPointerEXT_IIIIaH(int size, int itype, int stride, int count, short[] pointer);
    public delegate void DglColorPointerEXT_IIIIaI(int size, int itype, int stride, int count, int[] pointer);
    public delegate void DglColorPointerEXT_IIIIaF(int size, int itype, int stride, int count, float[] pointer);
    public delegate void DglColorPointerEXT_IIIIaD(int size, int itype, int stride, int count, double[] pointer);
    public delegate void DglColorPointerEXT_IIIIP(int size, int itype, int stride, int count, IntPtr pointer);
    public delegate void DglColorPointerListIBM_IIIrPI(int size, int itype, int stride, ref IntPtr pointer, int ptrstride);
    public delegate void DglColorPointervINTEL_IIrP(int size, int itype, ref IntPtr pointer);
    public delegate void DglColorSubTable_IIIIIaB(int target, int start, int count, int format, int itype, byte[] data);
    public delegate void DglColorSubTable_IIIIIaH(int target, int start, int count, int format, int itype, short[] data);
    public delegate void DglColorSubTable_IIIIIaI(int target, int start, int count, int format, int itype, int[] data);
    public delegate void DglColorSubTable_IIIIIaF(int target, int start, int count, int format, int itype, float[] data);
    public delegate void DglColorSubTable_IIIIIP(int target, int start, int count, int format, int itype, IntPtr data);
    public delegate void DglColorSubTableEXT_IIIIIaB(int target, int start, int count, int format, int itype, byte[] data);
    public delegate void DglColorSubTableEXT_IIIIIaH(int target, int start, int count, int format, int itype, short[] data);
    public delegate void DglColorSubTableEXT_IIIIIaI(int target, int start, int count, int format, int itype, int[] data);
    public delegate void DglColorSubTableEXT_IIIIIaF(int target, int start, int count, int format, int itype, float[] data);
    public delegate void DglColorSubTableEXT_IIIIIP(int target, int start, int count, int format, int itype, IntPtr data);
    public delegate void DglColorTable_IIIIIaB(int target, int internalformat, int width, int format, int itype, byte[] table);
    public delegate void DglColorTable_IIIIIaH(int target, int internalformat, int width, int format, int itype, short[] table);
    public delegate void DglColorTable_IIIIIaI(int target, int internalformat, int width, int format, int itype, int[] table);
    public delegate void DglColorTable_IIIIIaF(int target, int internalformat, int width, int format, int itype, float[] table);
    public delegate void DglColorTable_IIIIIP(int target, int internalformat, int width, int format, int itype, IntPtr table);
    public delegate void DglColorTableEXT_IIIIIaB(int target, int internalFormat, int width, int format, int itype, byte[] table);
    public delegate void DglColorTableEXT_IIIIIaH(int target, int internalFormat, int width, int format, int itype, short[] table);
    public delegate void DglColorTableEXT_IIIIIaI(int target, int internalFormat, int width, int format, int itype, int[] table);
    public delegate void DglColorTableEXT_IIIIIaF(int target, int internalFormat, int width, int format, int itype, float[] table);
    public delegate void DglColorTableEXT_IIIIIP(int target, int internalFormat, int width, int format, int itype, IntPtr table);
    public delegate void DglColorTableParameterfv_IIaF(int target, int pname, float[] rfparams);
    public delegate void DglColorTableParameterfv_IIP(int target, int pname, IntPtr rfparams);
    public delegate void DglColorTableParameterfvSGI_IIaF(int target, int pname, float[] rfparams);
    public delegate void DglColorTableParameterfvSGI_IIP(int target, int pname, IntPtr rfparams);
    public delegate void DglColorTableParameteriv_IIaI(int target, int pname, int[] riparams);
    public delegate void DglColorTableParameteriv_IIP(int target, int pname, IntPtr riparams);
    public delegate void DglColorTableParameterivSGI_IIaI(int target, int pname, int[] riparams);
    public delegate void DglColorTableParameterivSGI_IIP(int target, int pname, IntPtr riparams);
    public delegate void DglColorTableSGI_IIIIIaB(int target, int internalformat, int width, int format, int itype, byte[] table);
    public delegate void DglColorTableSGI_IIIIIaH(int target, int internalformat, int width, int format, int itype, short[] table);
    public delegate void DglColorTableSGI_IIIIIaI(int target, int internalformat, int width, int format, int itype, int[] table);
    public delegate void DglColorTableSGI_IIIIIaF(int target, int internalformat, int width, int format, int itype, float[] table);
    public delegate void DglColorTableSGI_IIIIIP(int target, int internalformat, int width, int format, int itype, IntPtr table);
    public delegate void DglCombinerInputNV_IIIIII(int stage, int portion, int variable, int input, int mapping, int componentUsage);
    public delegate void DglCombinerOutputNV_IIIIIIIBBB(int stage, int portion, int abOutput, int cdOutput, int sumOutput, int scale, int bias, byte abDotProduct, byte cdDotProduct, byte muxSum);
    public delegate void DglCombinerParameterfNV_IF(int pname, float fparam);
    public delegate void DglCombinerParameterfvNV_IaF(int pname, float[] rfparams);
    public delegate void DglCombinerParameterfvNV_IP(int pname, IntPtr rfparams);
    public delegate void DglCombinerParameteriNV_II(int pname, int iparam);
    public delegate void DglCombinerParameterivNV_IaI(int pname, int[] riparams);
    public delegate void DglCombinerParameterivNV_IP(int pname, IntPtr riparams);
    public delegate void DglCombinerStageParameterfvNV_IIaF(int stage, int pname, float[] rfparams);
    public delegate void DglCombinerStageParameterfvNV_IIP(int stage, int pname, IntPtr rfparams);
    public delegate void DglCompileShader_I(int shader);
    //public delegate void DglCompileShaderARB_I(int shaderObj);
    public delegate void DglCompressedTexImage1D_IIIIIIaB(int target, int level, int internalformat, int width, int border, int imageSize, byte[] data);
    public delegate void DglCompressedTexImage1D_IIIIIIP(int target, int level, int internalformat, int width, int border, int imageSize, IntPtr data);
    //public delegate void DglCompressedTexImage1DARB_IIIIIIaB(int target, int level, int internalformat, int width, int border, int imageSize, byte[] data);
    //public delegate void DglCompressedTexImage1DARB_IIIIIIP(int target, int level, int internalformat, int width, int border, int imageSize, IntPtr data);
    public delegate void DglCompressedTexImage2D_IIIIIIIaB(int target, int level, int internalformat, int width, int height, int border, int imageSize, byte[] data);
    public delegate void DglCompressedTexImage2D_IIIIIIIP(int target, int level, int internalformat, int width, int height, int border, int imageSize, IntPtr data);
    //public delegate void DglCompressedTexImage2DARB_IIIIIIIaB(int target, int level, int internalformat, int width, int height, int border, int imageSize, byte[] data);
    //public delegate void DglCompressedTexImage2DARB_IIIIIIIP(int target, int level, int internalformat, int width, int height, int border, int imageSize, IntPtr data);
    public delegate void DglCompressedTexImage3D_IIIIIIIIaB(int target, int level, int internalformat, int width, int height, int depth, int border, int imageSize, byte[] data);
    public delegate void DglCompressedTexImage3D_IIIIIIIIP(int target, int level, int internalformat, int width, int height, int depth, int border, int imageSize, IntPtr data);
    //public delegate void DglCompressedTexImage3DARB_IIIIIIIIaB(int target, int level, int internalformat, int width, int height, int depth, int border, int imageSize, byte[] data);
    //public delegate void DglCompressedTexImage3DARB_IIIIIIIIP(int target, int level, int internalformat, int width, int height, int depth, int border, int imageSize, IntPtr data);
    public delegate void DglCompressedTexSubImage1D_IIIIIIaB(int target, int level, int xoffset, int width, int format, int imageSize, byte[] data);
    public delegate void DglCompressedTexSubImage1D_IIIIIIP(int target, int level, int xoffset, int width, int format, int imageSize, IntPtr data);
    //public delegate void DglCompressedTexSubImage1DARB_IIIIIIaB(int target, int level, int xoffset, int width, int format, int imageSize, byte[] data);
    //public delegate void DglCompressedTexSubImage1DARB_IIIIIIP(int target, int level, int xoffset, int width, int format, int imageSize, IntPtr data);
    public delegate void DglCompressedTexSubImage2D_IIIIIIIIaB(int target, int level, int xoffset, int yoffset, int width, int height, int format, int imageSize, byte[] data);
    public delegate void DglCompressedTexSubImage2D_IIIIIIIIP(int target, int level, int xoffset, int yoffset, int width, int height, int format, int imageSize, IntPtr data);
    //public delegate void DglCompressedTexSubImage2DARB_IIIIIIIIaB(int target, int level, int xoffset, int yoffset, int width, int height, int format, int imageSize, byte[] data);
    //public delegate void DglCompressedTexSubImage2DARB_IIIIIIIIP(int target, int level, int xoffset, int yoffset, int width, int height, int format, int imageSize, IntPtr data);
    public delegate void DglCompressedTexSubImage3D_IIIIIIIIIIaB(int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int imageSize, byte[] data);
    public delegate void DglCompressedTexSubImage3D_IIIIIIIIIIP(int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int imageSize, IntPtr data);
    //public delegate void DglCompressedTexSubImage3DARB_IIIIIIIIIIaB(int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int imageSize, byte[] data);
    //public delegate void DglCompressedTexSubImage3DARB_IIIIIIIIIIP(int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int imageSize, IntPtr data);
    public delegate void DglConvolutionFilter1D_IIIIIaB(int target, int internalformat, int width, int format, int itype, byte[] image);
    public delegate void DglConvolutionFilter1D_IIIIIaH(int target, int internalformat, int width, int format, int itype, short[] image);
    public delegate void DglConvolutionFilter1D_IIIIIaI(int target, int internalformat, int width, int format, int itype, int[] image);
    public delegate void DglConvolutionFilter1D_IIIIIaF(int target, int internalformat, int width, int format, int itype, float[] image);
    public delegate void DglConvolutionFilter1D_IIIIIP(int target, int internalformat, int width, int format, int itype, IntPtr image);
    public delegate void DglConvolutionFilter1DEXT_IIIIIaB(int target, int internalformat, int width, int format, int itype, byte[] image);
    public delegate void DglConvolutionFilter1DEXT_IIIIIaH(int target, int internalformat, int width, int format, int itype, short[] image);
    public delegate void DglConvolutionFilter1DEXT_IIIIIaI(int target, int internalformat, int width, int format, int itype, int[] image);
    public delegate void DglConvolutionFilter1DEXT_IIIIIaF(int target, int internalformat, int width, int format, int itype, float[] image);
    public delegate void DglConvolutionFilter1DEXT_IIIIIP(int target, int internalformat, int width, int format, int itype, IntPtr image);
    public delegate void DglConvolutionFilter2D_IIIIIIaB(int target, int internalformat, int width, int height, int format, int itype, byte[] image);
    public delegate void DglConvolutionFilter2D_IIIIIIaH(int target, int internalformat, int width, int height, int format, int itype, short[] image);
    public delegate void DglConvolutionFilter2D_IIIIIIaI(int target, int internalformat, int width, int height, int format, int itype, int[] image);
    public delegate void DglConvolutionFilter2D_IIIIIIaF(int target, int internalformat, int width, int height, int format, int itype, float[] image);
    public delegate void DglConvolutionFilter2D_IIIIIIP(int target, int internalformat, int width, int height, int format, int itype, IntPtr image);
    public delegate void DglConvolutionFilter2DEXT_IIIIIIaB(int target, int internalformat, int width, int height, int format, int itype, byte[] image);
    public delegate void DglConvolutionFilter2DEXT_IIIIIIaH(int target, int internalformat, int width, int height, int format, int itype, short[] image);
    public delegate void DglConvolutionFilter2DEXT_IIIIIIaI(int target, int internalformat, int width, int height, int format, int itype, int[] image);
    public delegate void DglConvolutionFilter2DEXT_IIIIIIaF(int target, int internalformat, int width, int height, int format, int itype, float[] image);
    public delegate void DglConvolutionFilter2DEXT_IIIIIIP(int target, int internalformat, int width, int height, int format, int itype, IntPtr image);
    public delegate void DglConvolutionParameterf_IIF(int target, int pname, float fparams);
    public delegate void DglConvolutionParameterfEXT_IIF(int target, int pname, float fparams);
    public delegate void DglConvolutionParameterfv_IIaF(int target, int pname, float[] rfparams);
    public delegate void DglConvolutionParameterfv_IIP(int target, int pname, IntPtr rfparams);
    public delegate void DglConvolutionParameterfvEXT_IIaF(int target, int pname, float[] rfparams);
    public delegate void DglConvolutionParameterfvEXT_IIP(int target, int pname, IntPtr rfparams);
    public delegate void DglConvolutionParameteri_III(int target, int pname, int iparams);
    public delegate void DglConvolutionParameteriEXT_III(int target, int pname, int iparams);
    public delegate void DglConvolutionParameteriv_IIaI(int target, int pname, int[] riparams);
    public delegate void DglConvolutionParameteriv_IIP(int target, int pname, IntPtr riparams);
    public delegate void DglConvolutionParameterivEXT_IIaI(int target, int pname, int[] riparams);
    public delegate void DglConvolutionParameterivEXT_IIP(int target, int pname, IntPtr riparams);
    public delegate void DglCopyColorSubTable_IIIII(int target, int start, int x, int y, int width);
    public delegate void DglCopyColorSubTableEXT_IIIII(int target, int start, int x, int y, int width);
    public delegate void DglCopyColorTable_IIIII(int target, int internalformat, int x, int y, int width);
    public delegate void DglCopyColorTableSGI_IIIII(int target, int internalformat, int x, int y, int width);
    public delegate void DglCopyConvolutionFilter1D_IIIII(int target, int internalformat, int x, int y, int width);
    public delegate void DglCopyConvolutionFilter1DEXT_IIIII(int target, int internalformat, int x, int y, int width);
    public delegate void DglCopyConvolutionFilter2D_IIIIII(int target, int internalformat, int x, int y, int width, int height);
    public delegate void DglCopyConvolutionFilter2DEXT_IIIIII(int target, int internalformat, int x, int y, int width, int height);
    public delegate void DglCopyPixels_IIIII(int x, int y, int width, int height, int itype);
    public delegate void DglCopyTexImage1D_IIIIIII(int target, int level, int internalFormat, int x, int y, int width, int border);
    public delegate void DglCopyTexImage1DEXT_IIIIIII(int target, int level, int internalformat, int x, int y, int width, int border);
    public delegate void DglCopyTexImage2D_IIIIIIII(int target, int level, int internalFormat, int x, int y, int width, int height, int border);
    public delegate void DglCopyTexImage2DEXT_IIIIIIII(int target, int level, int internalformat, int x, int y, int width, int height, int border);
    public delegate void DglCopyTexSubImage1D_IIIIII(int target, int level, int xoffset, int x, int y, int width);
    public delegate void DglCopyTexSubImage1DEXT_IIIIII(int target, int level, int xoffset, int x, int y, int width);
    public delegate void DglCopyTexSubImage2D_IIIIIIII(int target, int level, int xoffset, int yoffset, int x, int y, int width, int height);
    public delegate void DglCopyTexSubImage2DEXT_IIIIIIII(int target, int level, int xoffset, int yoffset, int x, int y, int width, int height);
    public delegate void DglCopyTexSubImage3D_IIIIIIIII(int target, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height);
    public delegate void DglCopyTexSubImage3DEXT_IIIIIIIII(int target, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height);
    public delegate int DglCreateProgram_V();
    //public delegate int DglCreateProgramObjectARB_V();
    public delegate int DglCreateShader(int itype);
    //public delegate int DglCreateShaderObjectARB_I(int shaderType);
    public delegate void DglCullFace_I(int mode);
    public delegate void DglCullParameterdvEXT_IaD(int pname, double[] rdparams);
    public delegate void DglCullParameterdvEXT_IP(int pname, IntPtr rdparams);
    public delegate void DglCullParameterfvEXT_IaF(int pname, float[] rfparams);
    public delegate void DglCullParameterfvEXT_IP(int pname, IntPtr rfparams);
    //public delegate void DglCurrentPaletteMatrixARB_I(int index);
    public delegate void DglDeformationMap3dSGIX_IDDIIDDIIDDIIaD(int target, double u1, double u2, int ustride, int uorder, double v1, double v2, int vstride, int vorder, double w1, double w2, int wstride, int worder, double[] points);
    public delegate void DglDeformationMap3dSGIX_IDDIIDDIIDDIIP(int target, double u1, double u2, int ustride, int uorder, double v1, double v2, int vstride, int vorder, double w1, double w2, int wstride, int worder, IntPtr points);
    public delegate void DglDeformationMap3fSGIX_IFFIIFFIIFFIIaF(int target, float u1, float u2, int ustride, int uorder, float v1, float v2, int vstride, int vorder, float w1, float w2, int wstride, int worder, float[] points);
    public delegate void DglDeformationMap3fSGIX_IFFIIFFIIFFIIP(int target, float u1, float u2, int ustride, int uorder, float v1, float v2, int vstride, int vorder, float w1, float w2, int wstride, int worder, IntPtr points);
    public delegate void DglDeformSGIX_I(int mask);
    public delegate void DglDeleteAsyncMarkersSGIX_II(int marker, int range);
    public delegate void DglDeleteBuffers_IaI(int n, int[] buffers);
    public delegate void DglDeleteBuffers_IP(int n, IntPtr buffers);
    //public delegate void DglDeleteBuffersARB_IaI(int n, uint[] buffers);
    //public delegate void DglDeleteBuffersARB_IP(int n, IntPtr buffers);
    public delegate void DglDeleteFencesAPPLE_IaI(int n, int[] fences);
    public delegate void DglDeleteFencesAPPLE_IP(int n, IntPtr fences);
    public delegate void DglDeleteFencesNV_IaI(int n, int[] fences);
    public delegate void DglDeleteFencesNV_IP(int n, IntPtr fences);
    public delegate void DglDeleteFragmentShaderATI_I(int id);
    public delegate void DglDeleteFramebuffersEXT_IaI(int n, int[] framebuffers);
    public delegate void DglDeleteFramebuffersEXT_IP(int n, IntPtr framebuffers);
    public delegate void DglDeleteLists_II(int list, int range);
    //public delegate void DglDeleteObjectARB_I(int obj);
    public delegate void DglDeleteOcclusionQueriesNV_IaI(int n, int[] ids);
    public delegate void DglDeleteOcclusionQueriesNV_IP(int n, IntPtr ids);
    public delegate void DglDeleteProgram_I(int program);
    //public delegate void DglDeleteProgramsARB_IaI(int n, int[] programs);
    //public delegate void DglDeleteProgramsARB_IP(int n, IntPtr programs);
    public delegate void DglDeleteProgramsNV_IaI(int n, int[] programs);
    public delegate void DglDeleteProgramsNV_IP(int n, IntPtr programs);
    public delegate void DglDeleteQueries_IaI(int n, int[] ids);
    public delegate void DglDeleteQueries_IP(int n, IntPtr ids);
    //public delegate void DglDeleteQueriesARB_IaI(int n, int[] ids);
    //public delegate void DglDeleteQueriesARB_IP(int n, IntPtr ids);
    public delegate void DglDeleteRenderbuffersEXT_IaI(int n, int[] renderbuffers);
    public delegate void DglDeleteRenderbuffersEXT_IP(int n, IntPtr renderbuffers);
    public delegate void DglDeleteShader_I(int shader);
    public delegate void DglDeleteTextures_IaI(int n, int[] textures);
    public delegate void DglDeleteTextures_IP(int n, IntPtr textures);
    public delegate void DglDeleteTexturesEXT_IaI(int n, int[] textures);
    public delegate void DglDeleteTexturesEXT_IP(int n, IntPtr textures);
    public delegate void DglDeleteVertexArraysAPPLE_IaI(int n, int[] arrays);
    public delegate void DglDeleteVertexArraysAPPLE_IP(int n, IntPtr arrays);
    public delegate void DglDeleteVertexShaderEXT_I(int id);
    public delegate void DglDepthBoundsEXT_DD(double zmin, double zmax);
    public delegate void DglDepthFunc_I(int func);
    public delegate void DglDepthMask_B(byte flag);
    public delegate void DglDepthRange_DD(double zNear, double zFar);
    //public delegate void DglDetachObjectARB_II(int containerObj, int attachedObj);
    public delegate void DglDetachShader_II(int program, int shader);
    public delegate void DglDetailTexFuncSGIS_IIaF(int target, int n, float[] points);
    public delegate void DglDetailTexFuncSGIS_IIP(int target, int n, IntPtr points);
    public delegate void DglDisable_I(int cap);
    public delegate void DglDisableClientState_I(int array);
    public delegate void DglDisableVariantClientStateEXT_I(int id);
    public delegate void DglDisableVertexAttribArray_I(int index);
    //public delegate void DglDisableVertexAttribArrayARB_I(int index);
    public delegate void DglDrawArrays_III(int mode, int first, int count);
    public delegate void DglDrawArraysEXT_III(int mode, int first, int count);
    public delegate void DglDrawBuffer_I(int mode);
    public delegate void DglDrawBuffers_IaI(int n, int[] bufs);
    public delegate void DglDrawBuffers_IP(int n, IntPtr bufs);
    //public delegate void DglDrawBuffersARB_IaI(int n, int[] bufs);
    //public delegate void DglDrawBuffersARB_IP(int n, IntPtr bufs);
    public delegate void DglDrawBuffersATI_IaI(int n, int[] bufs);
    public delegate void DglDrawBuffersATI_IP(int n, IntPtr bufs);
    public delegate void DglDrawElementArrayAPPLE_III(int mode, int first, int count);
    public delegate void DglDrawElementArrayATI_II(int mode, int count);
    public delegate void DglDrawElements_IIIaB(int mode, int count, int itype, byte[] indices);
    public delegate void DglDrawElements_IIIaH(int mode, int count, int itype, short[] indices);
    public delegate void DglDrawElements_IIIaI(int mode, int count, int itype, int[] indices);
    public delegate void DglDrawElements_IIIP(int mode, int count, int itype, IntPtr indices);
    public delegate void DglDrawMeshArraysSUN_IIII(int mode, int first, int count, int width);
    public delegate void DglDrawPixels_IIIIaB(int width, int height, int format, int itype, byte[] pixels);
    public delegate void DglDrawPixels_IIIIaH(int width, int height, int format, int itype, short[] pixels);
    public delegate void DglDrawPixels_IIIIaI(int width, int height, int format, int itype, int[] pixels);
    public delegate void DglDrawPixels_IIIIaF(int width, int height, int format, int itype, float[] pixels);
    public delegate void DglDrawPixels_IIIIP(int width, int height, int format, int itype, IntPtr pixels);
    public delegate void DglDrawRangeElementArrayAPPLE_IIIII(int mode, int start, int end, int first, int count);
    public delegate void DglDrawRangeElementArrayATI_IIII(int mode, int start, int end, int count);
    public delegate void DglDrawRangeElements_IIIIIaB(int mode, int start, int end, int count, int itype, byte[] indices);
    public delegate void DglDrawRangeElements_IIIIIaH(int mode, int start, int end, int count, int itype, short[] indices);
    public delegate void DglDrawRangeElements_IIIIIaI(int mode, int start, int end, int count, int itype, int[] indices);
    public delegate void DglDrawRangeElements_IIIIIP(int mode, int start, int end, int count, int itype, IntPtr indices);
    public delegate void DglDrawRangeElementsEXT_IIIIIaB(int mode, int start, int end, int count, int itype, byte[] indices);
    public delegate void DglDrawRangeElementsEXT_IIIIIaH(int mode, int start, int end, int count, int itype, short[] indices);
    public delegate void DglDrawRangeElementsEXT_IIIIIaI(int mode, int start, int end, int count, int itype, int[] indices);
    public delegate void DglDrawRangeElementsEXT_IIIIIP(int mode, int start, int end, int count, int itype, IntPtr indices);
    public delegate void DglDrawRangeElementsWIN_IIIIIaB(int mode, int start, int end, int count, int itype, byte[] indices);
    public delegate void DglDrawRangeElementsWIN_IIIIIaH(int mode, int start, int end, int count, int itype, short[] indices);
    public delegate void DglDrawRangeElementsWIN_IIIIIaI(int mode, int start, int end, int count, int itype, int[] indices);
    public delegate void DglDrawRangeElementsWIN_IIIIIP(int mode, int start, int end, int count, int itype, IntPtr indices);
    public delegate void DglEdgeFlag_B(byte flag);
    public delegate void DglEdgeFlagPointer_IaB(int stride, byte[] pointer);
    public delegate void DglEdgeFlagPointer_IP(int stride, IntPtr pointer);
    public delegate void DglEdgeFlagPointerEXT_IIaB(int stride, int count, byte[] pointer);
    public delegate void DglEdgeFlagPointerEXT_IIP(int stride, int count, IntPtr pointer);
    public delegate void DglEdgeFlagPointerListIBM_IrPI(int stride, ref IntPtr pointer, int ptrstride);
    public delegate void DglEdgeFlagv_aB(byte[] flag);
    public delegate void DglEdgeFlagv_P(IntPtr flag);
    public delegate void DglElementPointerAPPLE_IaB(int itype, byte[] pointer);
    public delegate void DglElementPointerAPPLE_IP(int itype, IntPtr pointer);
    public delegate void DglElementPointerATI_IaB(int itype, byte[] pointer);
    public delegate void DglElementPointerATI_IP(int itype, IntPtr pointer);
    public delegate void DglEnable_I(int cap);
    public delegate void DglEnableClientState_I(int array);
    public delegate void DglEnableVariantClientStateEXT_I(int id);
    public delegate void DglEnableVertexAttribArray_I(int index);
    public delegate void DglEnableVertexAttribArrayARB_I(int index);
    public delegate void DglEnd_V();
    public delegate void DglEndFragmentShaderATI_V();
    public delegate void DglEndList_V();
    public delegate void DglEndOcclusionQueryNV_V();
    public delegate void DglEndQuery_I(int target);
    //public delegate void DglEndQueryARB_I(int target);
    public delegate void DglEndVertexShaderEXT_V();
    public delegate void DglEvalCoord1d_D(double u);
    public delegate void DglEvalCoord1dv_aD(double[] u);
    public delegate void DglEvalCoord1dv_P(IntPtr u);
    public delegate void DglEvalCoord1f_F(float u);
    public delegate void DglEvalCoord1fv_aF(float[] u);
    public delegate void DglEvalCoord1fv_P(IntPtr u);
    public delegate void DglEvalCoord2d_DD(double u, double v);
    public delegate void DglEvalCoord2dv_aD(double[] u);
    public delegate void DglEvalCoord2dv_P(IntPtr u);
    public delegate void DglEvalCoord2f_FF(float u, float v);
    public delegate void DglEvalCoord2fv_aF(float[] u);
    public delegate void DglEvalCoord2fv_P(IntPtr u);
    public delegate void DglEvalMapsNV_II(int target, int mode);
    public delegate void DglEvalMesh1_III(int mode, int i1, int i2);
    public delegate void DglEvalMesh2_IIIII(int mode, int i1, int i2, int j1, int j2);
    public delegate void DglEvalPoint1_I(int i);
    public delegate void DglEvalPoint2_II(int i, int j);
    public delegate void DglExecuteProgramNV_IIaF(int target, int id, float[] rfparams);
    public delegate void DglExecuteProgramNV_IIP(int target, int id, IntPtr rfparams);
    public delegate void DglExtractComponentEXT_III(int res, int src, int num);
    public delegate void DglFeedbackBuffer_IIaF(int size, int itype, float[] buffer);
    public delegate void DglFeedbackBuffer_IIP(int size, int itype, IntPtr buffer);
    public delegate void DglFinalCombinerInputNV_IIII(int variable, int input, int mapping, int componentUsage);
    public delegate void DglFinish_V();
    public delegate int DglFinishAsyncSGIX_rI(ref int markerp);
    public delegate void DglFinishFenceAPPLE_I(int fence);
    public delegate void DglFinishFenceNV_I(int fence);
    public delegate void DglFinishObjectAPPLE_II(int iobject, int name);
    public delegate void DglFinishTextureSUNX_V();
    public delegate void DglFlush_V();
    public delegate void DglFlushPixelDataRangeNV_I(int target);
    public delegate void DglFlushRasterSGIX_V();
    public delegate void DglFlushVertexArrayRangeAPPLE_IaB(int length, byte[] pointer);
    public delegate void DglFlushVertexArrayRangeAPPLE_IP(int length, IntPtr pointer);
    public delegate void DglFlushVertexArrayRangeNV_V();
    public delegate void DglFogCoordd_D(double coord);
    public delegate void DglFogCoorddEXT_D(double coord);
    public delegate void DglFogCoorddv_aD(double[] coord);
    public delegate void DglFogCoorddv_P(IntPtr coord);
    public delegate void DglFogCoorddvEXT_aD(double[] coord);
    public delegate void DglFogCoorddvEXT_P(IntPtr coord);
    public delegate void DglFogCoordf_F(float coord);
    public delegate void DglFogCoordfEXT_F(float coord);
    public delegate void DglFogCoordfv_aF(float[] coord);
    public delegate void DglFogCoordfv_P(IntPtr coord);
    public delegate void DglFogCoordfvEXT_aF(float[] coord);
    public delegate void DglFogCoordfvEXT_P(IntPtr coord);
    public delegate void DglFogCoordhNV_H(short fog);
    public delegate void DglFogCoordhvNV_aH(short[] fog);
    public delegate void DglFogCoordhvNV_P(IntPtr fog);
    public delegate void DglFogCoordPointer_IIaF(int itype, int stride, float[] pointer);
    public delegate void DglFogCoordPointer_IIaD(int itype, int stride, double[] pointer);
    public delegate void DglFogCoordPointer_IIP(int itype, int stride, IntPtr pointer);
    public delegate void DglFogCoordPointerEXT_IIaF(int itype, int stride, float[] pointer);
    public delegate void DglFogCoordPointerEXT_IIaD(int itype, int stride, double[] pointer);
    public delegate void DglFogCoordPointerEXT_IIP(int itype, int stride, IntPtr pointer);
    public delegate void DglFogCoordPointerListIBM_IIrPI(int itype, int stride, ref IntPtr pointer, int ptrstride);
    public delegate void DglFogf_IF(int pname, float fparam);
    public delegate void DglFogFuncSGIS_IaF(int n, float[] points);
    public delegate void DglFogFuncSGIS_IP(int n, IntPtr points);
    public delegate void DglFogfv_IaF(int pname, float[] rfparams);
    public delegate void DglFogfv_IP(int pname, IntPtr rfparams);
    public delegate void DglFogi_II(int pname, int iparam);
    public delegate void DglFogiv_IaI(int pname, int[] riparams);
    public delegate void DglFogiv_IP(int pname, IntPtr riparams);
    public delegate void DglFragmentColorMaterialSGIX_II(int face, int mode);
    public delegate void DglFragmentLightfSGIX_IIF(int light, int pname, float fparam);
    public delegate void DglFragmentLightfvSGIX_IIaF(int light, int pname, float[] rfparams);
    public delegate void DglFragmentLightfvSGIX_IIP(int light, int pname, IntPtr rfparams);
    public delegate void DglFragmentLightiSGIX_III(int light, int pname, int iparam);
    public delegate void DglFragmentLightivSGIX_IIaI(int light, int pname, int[] riparams);
    public delegate void DglFragmentLightivSGIX_IIP(int light, int pname, IntPtr riparams);
    public delegate void DglFragmentLightModelfSGIX_IF(int pname, float fparam);
    public delegate void DglFragmentLightModelfvSGIX_IaF(int pname, float[] rfparams);
    public delegate void DglFragmentLightModelfvSGIX_IP(int pname, IntPtr rfparams);
    public delegate void DglFragmentLightModeliSGIX_II(int pname, int iparam);
    public delegate void DglFragmentLightModelivSGIX_IaI(int pname, int[] riparams);
    public delegate void DglFragmentLightModelivSGIX_IP(int pname, IntPtr riparams);
    public delegate void DglFragmentMaterialfSGIX_IIF(int face, int pname, float fparam);
    public delegate void DglFragmentMaterialfvSGIX_IIaF(int face, int pname, float[] rfparams);
    public delegate void DglFragmentMaterialfvSGIX_IIP(int face, int pname, IntPtr rfparams);
    public delegate void DglFragmentMaterialiSGIX_III(int face, int pname, int iparam);
    public delegate void DglFragmentMaterialivSGIX_IIaI(int face, int pname, int[] riparams);
    public delegate void DglFragmentMaterialivSGIX_IIP(int face, int pname, IntPtr riparams);
    public delegate void DglFramebufferRenderbufferEXT_IIII(int target, int attachment, int renderbuffertarget, int renderbuffer);
    public delegate void DglFramebufferTexture1DEXT_IIIII(int target, int attachment, int textarget, int texture, int level);
    public delegate void DglFramebufferTexture2DEXT_IIIII(int target, int attachment, int textarget, int texture, int level);
    public delegate void DglFramebufferTexture3DEXT_IIIIII(int target, int attachment, int textarget, int texture, int level, int zoffset);
    public delegate void DglFrameZoomSGIX_I(int factor);
    public delegate void DglFreeObjectBufferATI_I(int buffer);
    public delegate void DglFrontFace_I(int mode);
    public delegate void DglFrustum_DDDDDD(double left, double right, double bottom, double top, double zNear, double zFar);
    public delegate int DglGenAsyncMarkersSGIX_I(int range);

    public unsafe delegate void DglGenBuffers(Int32 n, [Out] UInt32* buffers);
    public delegate void DglGenBuffers_IaI(int n, int[] buffers);
    public delegate void DglGenBuffers_IP(int n, IntPtr buffers);
    //public delegate void DglGenBuffersARB_IaI(int n, int[] buffers);
    //public delegate void DglGenBuffersARB_IP(int n, IntPtr buffers);
    
    public delegate void DglGenerateMipmapEXT_I(int target);
    public delegate void DglGenFencesAPPLE_IaI(int n, int[] fences);
    public delegate void DglGenFencesAPPLE_IP(int n, IntPtr fences);
    public delegate void DglGenFencesNV_IaI(int n, int[] fences);
    public delegate void DglGenFencesNV_IP(int n, IntPtr fences);
    public delegate int DglGenFragmentShadersATI_I(int range);
    public delegate void DglGenFramebuffersEXT_IaI(int n, int[] framebuffers);
    public delegate void DglGenFramebuffersEXT_IP(int n, IntPtr framebuffers);
    public delegate int DglGenLists_I(int range);
    public delegate void DglGenOcclusionQueriesNV_IaI(int n, int[] ids);
    public delegate void DglGenOcclusionQueriesNV_IP(int n, IntPtr ids);
    //public delegate void DglGenProgramsARB_IaI(int n, int[] programs);
    //public delegate void DglGenProgramsARB_IP(int n, IntPtr programs);
    public delegate void DglGenProgramsNV_IaI(int n, int[] programs);
    public delegate void DglGenProgramsNV_IP(int n, IntPtr programs);
    public delegate void DglGenQueries_IaI(int n, int[] ids);
    public delegate void DglGenQueries_IP(int n, IntPtr ids);
    //public delegate void DglGenQueriesARB_IaI(int n, int[] ids);
    //public delegate void DglGenQueriesARB_IP(int n, IntPtr ids);
    public delegate void DglGenRenderbuffersEXT_IaI(int n, int[] renderbuffers);
    public delegate void DglGenRenderbuffersEXT_IP(int n, IntPtr renderbuffers);
    public delegate int DglGenSymbolsEXT_IIII(int datatype, int storagetype, int range, int components);
    public delegate void DglGenTextures_IaI(int n, int[] textures);
    public delegate void DglGenTextures_IP(int n, IntPtr textures);
    public delegate void DglGenTexturesEXT_IaI(int n, int[] textures);
    public delegate void DglGenTexturesEXT_IP(int n, IntPtr textures);
    public delegate void DglGenVertexArraysAPPLE_IaI(int n, int[] arrays);
    public delegate void DglGenVertexArraysAPPLE_IP(int n, IntPtr arrays);
    public delegate int DglGenVertexShadersEXT_I(int range);
    public delegate void DglGetActiveAttrib_IIIrIrIrIS(int program, int index, int bufSize, ref int length, ref int size, ref int ritype, StringBuilder name);
    //public delegate void DglGetActiveAttribARB_IIIrIrIrIS(int programObj, int index, int maxLength, ref int length, ref int size, ref int ritype, String name);
    public delegate void DglGetActiveUniform_IIIrIrIrIS(int program, int index, int bufSize, out int length, out int size, out int ritype, StringBuilder name);
    //public delegate void DglGetActiveUniformARB_IIIrIrIrIS(int programObj, int index, int maxLength, ref int length, ref int size, ref int ritype, String name);
    public delegate void DglGetArrayObjectfvATI_IIaF(int array, int pname, float[] rfparams);
    public delegate void DglGetArrayObjectfvATI_IIP(int array, int pname, IntPtr rfparams);
    public delegate void DglGetArrayObjectivATI_IIaI(int array, int pname, int[] riparams);
    public delegate void DglGetArrayObjectivATI_IIP(int array, int pname, IntPtr riparams);
    //public delegate void DglGetAttachedObjectsARB_IIrIrI(int containerObj, int maxCount, ref int count, ref int obj);
    public delegate void DglGetAttachedShaders_IIrIaI(int program, int maxCount, ref int count, int[] shaderIDs);
    public delegate int DglGetAttribLocation_IS(int program, String name);
    //public delegate int DglGetAttribLocationARB_IS(int programObj, String name);
    public delegate void DglGetBooleanv_IaB(int pname, byte[] rbparams);
    public delegate void DglGetBooleanv_IP(int pname, IntPtr rbparams);
    public delegate void DglGetBufferParameteriv_IIaI(int target, int pname, int[] riparams);
    public delegate void DglGetBufferParameteriv_IIP(int target, int pname, IntPtr riparams);
    //public delegate void DglGetBufferParameterivARB_IIaI(int target, int pname, int[] riparams);
    //public delegate void DglGetBufferParameterivARB_IIP(int target, int pname, IntPtr riparams);
    public delegate void DglGetBufferPointerv_IIrP(int target, int pname, ref IntPtr rvparams);
    //public delegate void DglGetBufferPointervARB_IIrP(int target, int pname, ref IntPtr rvparams);
    public delegate void DglGetBufferSubData_IIIaB(int target, int offset, int size, byte[] data);
    public delegate void DglGetBufferSubData_IIIP(int target, int offset, int size, IntPtr data);
    //public delegate void DglGetBufferSubDataARB_IIIaB(int target, int offset, int size, byte[] data);
    //public delegate void DglGetBufferSubDataARB_IIIP(int target, int offset, int size, IntPtr data);
    public delegate void DglGetClipPlane_IaD(int plane, double[] equation);
    public delegate void DglGetClipPlane_IP(int plane, IntPtr equation);
    public delegate void DglGetColorTable_IIIaB(int target, int format, int itype, byte[] table);
    public delegate void DglGetColorTable_IIIaH(int target, int format, int itype, short[] table);
    public delegate void DglGetColorTable_IIIaI(int target, int format, int itype, int[] table);
    public delegate void DglGetColorTable_IIIaF(int target, int format, int itype, float[] table);
    public delegate void DglGetColorTable_IIIP(int target, int format, int itype, IntPtr table);
    public delegate void DglGetColorTableEXT_IIIaB(int target, int format, int itype, byte[] data);
    public delegate void DglGetColorTableEXT_IIIaH(int target, int format, int itype, short[] data);
    public delegate void DglGetColorTableEXT_IIIaI(int target, int format, int itype, int[] data);
    public delegate void DglGetColorTableEXT_IIIaF(int target, int format, int itype, float[] data);
    public delegate void DglGetColorTableEXT_IIIP(int target, int format, int itype, IntPtr data);
    public delegate void DglGetColorTableParameterfv_IIaF(int target, int pname, float[] rfparams);
    public delegate void DglGetColorTableParameterfv_IIP(int target, int pname, IntPtr rfparams);
    public delegate void DglGetColorTableParameterfvEXT_IIaF(int target, int pname, float[] rfparams);
    public delegate void DglGetColorTableParameterfvEXT_IIP(int target, int pname, IntPtr rfparams);
    public delegate void DglGetColorTableParameterfvSGI_IIaF(int target, int pname, float[] rfparams);
    public delegate void DglGetColorTableParameterfvSGI_IIP(int target, int pname, IntPtr rfparams);
    public delegate void DglGetColorTableParameteriv_IIaI(int target, int pname, int[] riparams);
    public delegate void DglGetColorTableParameteriv_IIP(int target, int pname, IntPtr riparams);
    public delegate void DglGetColorTableParameterivEXT_IIaI(int target, int pname, int[] riparams);
    public delegate void DglGetColorTableParameterivEXT_IIP(int target, int pname, IntPtr riparams);
    public delegate void DglGetColorTableParameterivSGI_IIaI(int target, int pname, int[] riparams);
    public delegate void DglGetColorTableParameterivSGI_IIP(int target, int pname, IntPtr riparams);
    public delegate void DglGetColorTableSGI_IIIaB(int target, int format, int itype, byte[] table);
    public delegate void DglGetColorTableSGI_IIIaH(int target, int format, int itype, short[] table);
    public delegate void DglGetColorTableSGI_IIIaI(int target, int format, int itype, int[] table);
    public delegate void DglGetColorTableSGI_IIIaF(int target, int format, int itype, float[] table);
    public delegate void DglGetColorTableSGI_IIIP(int target, int format, int itype, IntPtr table);
    public delegate void DglGetCombinerInputParameterfvNV_IIIIaF(int stage, int portion, int variable, int pname, float[] rfparams);
    public delegate void DglGetCombinerInputParameterfvNV_IIIIP(int stage, int portion, int variable, int pname, IntPtr rfparams);
    public delegate void DglGetCombinerInputParameterivNV_IIIIaI(int stage, int portion, int variable, int pname, int[] riparams);
    public delegate void DglGetCombinerInputParameterivNV_IIIIP(int stage, int portion, int variable, int pname, IntPtr riparams);
    public delegate void DglGetCombinerOutputParameterfvNV_IIIaF(int stage, int portion, int pname, float[] rfparams);
    public delegate void DglGetCombinerOutputParameterfvNV_IIIP(int stage, int portion, int pname, IntPtr rfparams);
    public delegate void DglGetCombinerOutputParameterivNV_IIIaI(int stage, int portion, int pname, int[] riparams);
    public delegate void DglGetCombinerOutputParameterivNV_IIIP(int stage, int portion, int pname, IntPtr riparams);
    public delegate void DglGetCombinerStageParameterfvNV_IIaF(int stage, int pname, float[] rfparams);
    public delegate void DglGetCombinerStageParameterfvNV_IIP(int stage, int pname, IntPtr rfparams);
    public delegate void DglGetCompressedTexImage_IIaB(int target, int level, byte[] img);
    public delegate void DglGetCompressedTexImage_IIP(int target, int level, IntPtr img);
    //public delegate void DglGetCompressedTexImageARB_IIaB(int target, int level, byte[] img);
    //public delegate void DglGetCompressedTexImageARB_IIP(int target, int level, IntPtr img);
    public delegate void DglGetConvolutionFilter_IIIaB(int target, int format, int itype, byte[] image);
    public delegate void DglGetConvolutionFilter_IIIaH(int target, int format, int itype, short[] image);
    public delegate void DglGetConvolutionFilter_IIIaI(int target, int format, int itype, int[] image);
    public delegate void DglGetConvolutionFilter_IIIaF(int target, int format, int itype, float[] image);
    public delegate void DglGetConvolutionFilter_IIIP(int target, int format, int itype, IntPtr image);
    public delegate void DglGetConvolutionFilterEXT_IIIaB(int target, int format, int itype, byte[] image);
    public delegate void DglGetConvolutionFilterEXT_IIIaH(int target, int format, int itype, short[] image);
    public delegate void DglGetConvolutionFilterEXT_IIIaI(int target, int format, int itype, int[] image);
    public delegate void DglGetConvolutionFilterEXT_IIIaF(int target, int format, int itype, float[] image);
    public delegate void DglGetConvolutionFilterEXT_IIIP(int target, int format, int itype, IntPtr image);
    public delegate void DglGetConvolutionParameterfv_IIaF(int target, int pname, float[] rfparams);
    public delegate void DglGetConvolutionParameterfv_IIP(int target, int pname, IntPtr rfparams);
    public delegate void DglGetConvolutionParameterfvEXT_IIaF(int target, int pname, float[] rfparams);
    public delegate void DglGetConvolutionParameterfvEXT_IIP(int target, int pname, IntPtr rfparams);
    public delegate void DglGetConvolutionParameteriv_IIaI(int target, int pname, int[] riparams);
    public delegate void DglGetConvolutionParameteriv_IIP(int target, int pname, IntPtr riparams);
    public delegate void DglGetConvolutionParameterivEXT_IIaI(int target, int pname, int[] riparams);
    public delegate void DglGetConvolutionParameterivEXT_IIP(int target, int pname, IntPtr riparams);
    public delegate void DglGetDetailTexFuncSGIS_IaF(int target, float[] points);
    public delegate void DglGetDetailTexFuncSGIS_IP(int target, IntPtr points);
    public delegate void DglGetDoublev_IaD(int pname, double[] rdparams);
    public delegate void DglGetDoublev_IP(int pname, IntPtr rdparams);
    public delegate int DglGetError_V();
    public delegate void DglGetFenceivNV_IIaI(int fence, int pname, int[] riparams);
    public delegate void DglGetFenceivNV_IIP(int fence, int pname, IntPtr riparams);
    public delegate void DglGetFinalCombinerInputParameterfvNV_IIaF(int variable, int pname, float[] rfparams);
    public delegate void DglGetFinalCombinerInputParameterfvNV_IIP(int variable, int pname, IntPtr rfparams);
    public delegate void DglGetFinalCombinerInputParameterivNV_IIaI(int variable, int pname, int[] riparams);
    public delegate void DglGetFinalCombinerInputParameterivNV_IIP(int variable, int pname, IntPtr riparams);
    public delegate void DglGetFloatv_IaF(int pname, float[] rfparams);
    public delegate void DglGetFloatv_IP(int pname, IntPtr rfparams);
    public delegate void DglGetFogFuncSGIS_aF(float[] points);
    public delegate void DglGetFogFuncSGIS_P(IntPtr points);
    public delegate void DglGetFragmentLightfvSGIX_IIaF(int light, int pname, float[] rfparams);
    public delegate void DglGetFragmentLightfvSGIX_IIP(int light, int pname, IntPtr rfparams);
    public delegate void DglGetFragmentLightivSGIX_IIaI(int light, int pname, int[] riparams);
    public delegate void DglGetFragmentLightivSGIX_IIP(int light, int pname, IntPtr riparams);
    public delegate void DglGetFragmentMaterialfvSGIX_IIaF(int face, int pname, float[] rfparams);
    public delegate void DglGetFragmentMaterialfvSGIX_IIP(int face, int pname, IntPtr rfparams);
    public delegate void DglGetFragmentMaterialivSGIX_IIaI(int face, int pname, int[] riparams);
    public delegate void DglGetFragmentMaterialivSGIX_IIP(int face, int pname, IntPtr riparams);
    public delegate void DglGetFramebufferAttachmentParameterivEXT_IIIaI(int target, int attachment, int pname, int[] riparams);
    public delegate void DglGetFramebufferAttachmentParameterivEXT_IIIP(int target, int attachment, int pname, IntPtr riparams);
    //public delegate int DglGetHandleARB_I(int pname);
    public delegate void DglGetHistogram_IBIIaB(int target, byte reset, int format, int itype, byte[] values);
    public delegate void DglGetHistogram_IBIIaH(int target, byte reset, int format, int itype, short[] values);
    public delegate void DglGetHistogram_IBIIaI(int target, byte reset, int format, int itype, int[] values);
    public delegate void DglGetHistogram_IBIIaF(int target, byte reset, int format, int itype, float[] values);
    public delegate void DglGetHistogram_IBIIP(int target, byte reset, int format, int itype, IntPtr values);
    public delegate void DglGetHistogramEXT_IBIIaB(int target, byte reset, int format, int itype, byte[] values);
    public delegate void DglGetHistogramEXT_IBIIaH(int target, byte reset, int format, int itype, short[] values);
    public delegate void DglGetHistogramEXT_IBIIaI(int target, byte reset, int format, int itype, int[] values);
    public delegate void DglGetHistogramEXT_IBIIaF(int target, byte reset, int format, int itype, float[] values);
    public delegate void DglGetHistogramEXT_IBIIP(int target, byte reset, int format, int itype, IntPtr values);
    public delegate void DglGetHistogramParameterfv_IIaF(int target, int pname, float[] rfparams);
    public delegate void DglGetHistogramParameterfv_IIP(int target, int pname, IntPtr rfparams);
    public delegate void DglGetHistogramParameterfvEXT_IIaF(int target, int pname, float[] rfparams);
    public delegate void DglGetHistogramParameterfvEXT_IIP(int target, int pname, IntPtr rfparams);
    public delegate void DglGetHistogramParameteriv_IIaI(int target, int pname, int[] riparams);
    public delegate void DglGetHistogramParameteriv_IIP(int target, int pname, IntPtr riparams);
    public delegate void DglGetHistogramParameterivEXT_IIaI(int target, int pname, int[] riparams);
    public delegate void DglGetHistogramParameterivEXT_IIP(int target, int pname, IntPtr riparams);
    public delegate void DglGetImageTransformParameterfvHP_IIaF(int target, int pname, float[] rfparams);
    public delegate void DglGetImageTransformParameterfvHP_IIP(int target, int pname, IntPtr rfparams);
    public delegate void DglGetImageTransformParameterivHP_IIaI(int target, int pname, int[] riparams);
    public delegate void DglGetImageTransformParameterivHP_IIP(int target, int pname, IntPtr riparams);
    //public delegate void DglGetInfoLogARB_IIrIS(int obj, int maxLength, ref int length, String infoLog);
    public delegate int DglGetInstrumentsSGIX_V();
    public delegate void DglGetIntegerv_IaI(int pname, int[] riparams);
    public delegate void DglGetIntegerv_IP(int pname, IntPtr riparams);
    public delegate void DglGetInvariantBooleanvEXT_IIaB(int id, int value, byte[] data);
    public delegate void DglGetInvariantBooleanvEXT_IIP(int id, int value, IntPtr data);
    public delegate void DglGetInvariantFloatvEXT_IIaF(int id, int value, float[] data);
    public delegate void DglGetInvariantFloatvEXT_IIP(int id, int value, IntPtr data);
    public delegate void DglGetInvariantIntegervEXT_IIaI(int id, int value, int[] data);
    public delegate void DglGetInvariantIntegervEXT_IIP(int id, int value, IntPtr data);
    public delegate void DglGetLightfv_IIaF(int light, int pname, float[] rfparams);
    public delegate void DglGetLightfv_IIP(int light, int pname, IntPtr rfparams);
    public delegate void DglGetLightiv_IIaI(int light, int pname, int[] riparams);
    public delegate void DglGetLightiv_IIP(int light, int pname, IntPtr riparams);
    public delegate void DglGetListParameterfvSGIX_IIaF(int list, int pname, float[] rfparams);
    public delegate void DglGetListParameterfvSGIX_IIP(int list, int pname, IntPtr rfparams);
    public delegate void DglGetListParameterivSGIX_IIaI(int list, int pname, int[] riparams);
    public delegate void DglGetListParameterivSGIX_IIP(int list, int pname, IntPtr riparams);
    public delegate void DglGetLocalConstantBooleanvEXT_IIaB(int id, int value, byte[] data);
    public delegate void DglGetLocalConstantBooleanvEXT_IIP(int id, int value, IntPtr data);
    public delegate void DglGetLocalConstantFloatvEXT_IIaF(int id, int value, float[] data);
    public delegate void DglGetLocalConstantFloatvEXT_IIP(int id, int value, IntPtr data);
    public delegate void DglGetLocalConstantIntegervEXT_IIaI(int id, int value, int[] data);
    public delegate void DglGetLocalConstantIntegervEXT_IIP(int id, int value, IntPtr data);
    public delegate void DglGetMapAttribParameterfvNV_IIIaF(int target, int index, int pname, float[] rfparams);
    public delegate void DglGetMapAttribParameterfvNV_IIIP(int target, int index, int pname, IntPtr rfparams);
    public delegate void DglGetMapAttribParameterivNV_IIIaI(int target, int index, int pname, int[] riparams);
    public delegate void DglGetMapAttribParameterivNV_IIIP(int target, int index, int pname, IntPtr riparams);
    public delegate void DglGetMapControlPointsNV_IIIIIBaB(int target, int index, int itype, int ustride, int vstride, byte packed, byte[] points);
    public delegate void DglGetMapControlPointsNV_IIIIIBP(int target, int index, int itype, int ustride, int vstride, byte packed, IntPtr points);
    public delegate void DglGetMapdv_IIaD(int target, int query, double[] v);
    public delegate void DglGetMapdv_IIP(int target, int query, IntPtr v);
    public delegate void DglGetMapfv_IIaF(int target, int query, float[] v);
    public delegate void DglGetMapfv_IIP(int target, int query, IntPtr v);
    public delegate void DglGetMapiv_IIaI(int target, int query, int[] v);
    public delegate void DglGetMapiv_IIP(int target, int query, IntPtr v);
    public delegate void DglGetMapParameterfvNV_IIaF(int target, int pname, float[] rfparams);
    public delegate void DglGetMapParameterfvNV_IIP(int target, int pname, IntPtr rfparams);
    public delegate void DglGetMapParameterivNV_IIaI(int target, int pname, int[] riparams);
    public delegate void DglGetMapParameterivNV_IIP(int target, int pname, IntPtr riparams);
    public delegate void DglGetMaterialfv_IIaF(int face, int pname, float[] rfparams);
    public delegate void DglGetMaterialfv_IIP(int face, int pname, IntPtr rfparams);
    public delegate void DglGetMaterialiv_IIaI(int face, int pname, int[] riparams);
    public delegate void DglGetMaterialiv_IIP(int face, int pname, IntPtr riparams);
    public delegate void DglGetMinmax_IBIIaB(int target, byte reset, int format, int itype, byte[] values);
    public delegate void DglGetMinmax_IBIIaH(int target, byte reset, int format, int itype, short[] values);
    public delegate void DglGetMinmax_IBIIaI(int target, byte reset, int format, int itype, int[] values);
    public delegate void DglGetMinmax_IBIIaF(int target, byte reset, int format, int itype, float[] values);
    public delegate void DglGetMinmax_IBIIP(int target, byte reset, int format, int itype, IntPtr values);
    public delegate void DglGetMinmaxEXT_IBIIaB(int target, byte reset, int format, int itype, byte[] values);
    public delegate void DglGetMinmaxEXT_IBIIaH(int target, byte reset, int format, int itype, short[] values);
    public delegate void DglGetMinmaxEXT_IBIIaI(int target, byte reset, int format, int itype, int[] values);
    public delegate void DglGetMinmaxEXT_IBIIaF(int target, byte reset, int format, int itype, float[] values);
    public delegate void DglGetMinmaxEXT_IBIIP(int target, byte reset, int format, int itype, IntPtr values);
    public delegate void DglGetMinmaxParameterfv_IIaF(int target, int pname, float[] rfparams);
    public delegate void DglGetMinmaxParameterfv_IIP(int target, int pname, IntPtr rfparams);
    public delegate void DglGetMinmaxParameterfvEXT_IIaF(int target, int pname, float[] rfparams);
    public delegate void DglGetMinmaxParameterfvEXT_IIP(int target, int pname, IntPtr rfparams);
    public delegate void DglGetMinmaxParameteriv_IIaI(int target, int pname, int[] riparams);
    public delegate void DglGetMinmaxParameteriv_IIP(int target, int pname, IntPtr riparams);
    public delegate void DglGetMinmaxParameterivEXT_IIaI(int target, int pname, int[] riparams);
    public delegate void DglGetMinmaxParameterivEXT_IIP(int target, int pname, IntPtr riparams);
    public delegate void DglGetObjectBufferfvATI_IIaF(int buffer, int pname, float[] rfparams);
    public delegate void DglGetObjectBufferfvATI_IIP(int buffer, int pname, IntPtr rfparams);
    public delegate void DglGetObjectBufferivATI_IIaI(int buffer, int pname, int[] riparams);
    public delegate void DglGetObjectBufferivATI_IIP(int buffer, int pname, IntPtr riparams);
    //public delegate void DglGetObjectParameterfvARB_IIaF(int obj, int pname, float[] rfparams);
    //public delegate void DglGetObjectParameterfvARB_IIP(int obj, int pname, IntPtr rfparams);
    //public delegate void DglGetObjectParameterivARB_IIaI(int obj, int pname, int[] riparams);
    //public delegate void DglGetObjectParameterivARB_IIP(int obj, int pname, IntPtr riparams);
    public delegate void DglGetOcclusionQueryivNV_IIaI(int id, int pname, int[] riparams);
    public delegate void DglGetOcclusionQueryivNV_IIP(int id, int pname, IntPtr riparams);
    public delegate void DglGetOcclusionQueryuivNV_IIaI(int id, int pname, int[] riparams);
    public delegate void DglGetOcclusionQueryuivNV_IIP(int id, int pname, IntPtr riparams);
    public delegate void DglGetPixelMapfv_IaF(int map, float[] values);
    public delegate void DglGetPixelMapfv_IP(int map, IntPtr values);
    public delegate void DglGetPixelMapuiv_IaI(int map, int[] values);
    public delegate void DglGetPixelMapuiv_IP(int map, IntPtr values);
    public delegate void DglGetPixelMapusv_IaH(int map, short[] values);
    public delegate void DglGetPixelMapusv_IP(int map, IntPtr values);
    public delegate void DglGetPixelTexGenParameterfvSGIS_IaF(int pname, float[] rfparams);
    public delegate void DglGetPixelTexGenParameterfvSGIS_IP(int pname, IntPtr rfparams);
    public delegate void DglGetPixelTexGenParameterivSGIS_IaI(int pname, int[] riparams);
    public delegate void DglGetPixelTexGenParameterivSGIS_IP(int pname, IntPtr riparams);
    public delegate void DglGetPointerv_IrP(int pname, ref IntPtr rvparams);
    public delegate void DglGetPointervEXT_IrP(int pname, ref IntPtr rvparams);
    public delegate void DglGetPolygonStipple_aB(byte[] mask);
    public delegate void DglGetPolygonStipple_P(IntPtr mask);
    public delegate void DglGetProgramEnvParameterdvARB_IIaD(int target, int index, double[] rdparams);
    public delegate void DglGetProgramEnvParameterdvARB_IIP(int target, int index, IntPtr rdparams);
    public delegate void DglGetProgramEnvParameterfvARB_IIaF(int target, int index, float[] rfparams);
    public delegate void DglGetProgramEnvParameterfvARB_IIP(int target, int index, IntPtr rfparams);
    public delegate void DglGetProgramInfoLog_IIrIS(int program, int bufSize, ref int length, StringBuilder infoLog);
    public delegate void DglGetProgramiv_IIaI(int program, int pname, int[] riparams);
    public delegate void DglGetProgramiv_IIP(int program, int pname, IntPtr riparams);
    public delegate void DglGetProgramivARB_IIaI(int target, int pname, int[] riparams);
    public delegate void DglGetProgramivARB_IIP(int target, int pname, IntPtr riparams);
    public delegate void DglGetProgramivNV_IIaI(int id, int pname, int[] riparams);
    public delegate void DglGetProgramivNV_IIP(int id, int pname, IntPtr riparams);
    public delegate void DglGetProgramLocalParameterdvARB_IIaD(int target, int index, double[] rdparams);
    public delegate void DglGetProgramLocalParameterdvARB_IIP(int target, int index, IntPtr rdparams);
    public delegate void DglGetProgramLocalParameterfvARB_IIaF(int target, int index, float[] rfparams);
    public delegate void DglGetProgramLocalParameterfvARB_IIP(int target, int index, IntPtr rfparams);
    public delegate void DglGetProgramNamedParameterdvNV_IISaD(int id, int len, String name, double[] rdparams);
    public delegate void DglGetProgramNamedParameterdvNV_IISP(int id, int len, String name, IntPtr rdparams);
    public delegate void DglGetProgramNamedParameterfvNV_IISaF(int id, int len, String name, float[] rfparams);
    public delegate void DglGetProgramNamedParameterfvNV_IISP(int id, int len, String name, IntPtr rfparams);
    public delegate void DglGetProgramParameterdvNV_IIIaD(int target, int index, int pname, double[] rdparams);
    public delegate void DglGetProgramParameterdvNV_IIIP(int target, int index, int pname, IntPtr rdparams);
    public delegate void DglGetProgramParameterfvNV_IIIaF(int target, int index, int pname, float[] rfparams);
    public delegate void DglGetProgramParameterfvNV_IIIP(int target, int index, int pname, IntPtr rfparams);
    public delegate void DglGetProgramStringARB_IIaB(int target, int pname, byte[] rvstring);
    public delegate void DglGetProgramStringARB_IIP(int target, int pname, IntPtr rvstring);
    public delegate void DglGetProgramStringNV_IIaB(int id, int pname, byte[] program);
    public delegate void DglGetProgramStringNV_IIP(int id, int pname, IntPtr program);
    public delegate void DglGetQueryiv_IIaI(int target, int pname, int[] riparams);
    public delegate void DglGetQueryiv_IIP(int target, int pname, IntPtr riparams);
    public delegate void DglGetQueryivARB_IIaI(int target, int pname, int[] riparams);
    public delegate void DglGetQueryivARB_IIP(int target, int pname, IntPtr riparams);
    public delegate void DglGetQueryObjectiv_IIaI(int id, int pname, int[] riparams);
    public delegate void DglGetQueryObjectiv_IIP(int id, int pname, IntPtr riparams);
    //public delegate void DglGetQueryObjectivARB_IIaI(int id, int pname, int[] riparams);
    //public delegate void DglGetQueryObjectivARB_IIP(int id, int pname, IntPtr riparams);
    public delegate void DglGetQueryObjectuiv_IIaI(int id, int pname, int[] riparams);
    public delegate void DglGetQueryObjectuiv_IIP(int id, int pname, IntPtr riparams);
    //public delegate void DglGetQueryObjectuivARB_IIaI(int id, int pname, int[] riparams);
    //public delegate void DglGetQueryObjectuivARB_IIP(int id, int pname, IntPtr riparams);
    public delegate void DglGetRenderbufferParameterivEXT_IIaI(int target, int pname, int[] riparams);
    public delegate void DglGetRenderbufferParameterivEXT_IIP(int target, int pname, IntPtr riparams);
    public delegate void DglGetSeparableFilter_IIIaBaBaB(int target, int format, int itype, byte[] row, byte[] column, byte[] span);
    public delegate void DglGetSeparableFilter_IIIaHaHaH(int target, int format, int itype, short[] row, short[] column, short[] span);
    public delegate void DglGetSeparableFilter_IIIaIaIaI(int target, int format, int itype, int[] row, int[] column, int[] span);
    public delegate void DglGetSeparableFilter_IIIaFaFaF(int target, int format, int itype, float[] row, float[] column, float[] span);
    public delegate void DglGetSeparableFilter_IIIPPP(int target, int format, int itype, IntPtr row, IntPtr column, IntPtr span);
    public delegate void DglGetSeparableFilterEXT_IIIaBaBaB(int target, int format, int itype, byte[] row, byte[] column, byte[] span);
    public delegate void DglGetSeparableFilterEXT_IIIaHaHaH(int target, int format, int itype, short[] row, short[] column, short[] span);
    public delegate void DglGetSeparableFilterEXT_IIIaIaIaI(int target, int format, int itype, int[] row, int[] column, int[] span);
    public delegate void DglGetSeparableFilterEXT_IIIaFaFaF(int target, int format, int itype, float[] row, float[] column, float[] span);
    public delegate void DglGetSeparableFilterEXT_IIIPPP(int target, int format, int itype, IntPtr row, IntPtr column, IntPtr span);
    public delegate void DglGetShaderInfoLog_IIrIS(int shader, int bufSize, ref int length, StringBuilder infoLog);
    public delegate void DglGetShaderiv_IIaI(int shader, int pname, int[] riparams);
    public delegate void DglGetShaderiv_IIP(int shader, int pname, IntPtr riparams);
    public delegate void DglGetShaderSource_IIrIS(int shader, int bufSize, ref int length, StringBuilder source);
    //public delegate void DglGetShaderSourceARB_IIrIS(int obj, int maxLength, ref int length, StringBuilder source);
    public delegate void DglGetSharpenTexFuncSGIS_IaF(int target, float[] points);
    public delegate void DglGetSharpenTexFuncSGIS_IP(int target, IntPtr points);
    public delegate String DglGetString_I(int name);
    public delegate void DglGetTexBumpParameterfvATI_IaF(int pname, float[] rfparam);
    public delegate void DglGetTexBumpParameterfvATI_IP(int pname, IntPtr rfparam);
    public delegate void DglGetTexBumpParameterivATI_IaI(int pname, int[] riparam);
    public delegate void DglGetTexBumpParameterivATI_IP(int pname, IntPtr riparam);
    public delegate void DglGetTexEnvfv_IIaF(int target, int pname, float[] rfparams);
    public delegate void DglGetTexEnvfv_IIP(int target, int pname, IntPtr rfparams);
    public delegate void DglGetTexEnviv_IIaI(int target, int pname, int[] riparams);
    public delegate void DglGetTexEnviv_IIP(int target, int pname, IntPtr riparams);
    public delegate void DglGetTexFilterFuncSGIS_IIaF(int target, int filter, float[] weights);
    public delegate void DglGetTexFilterFuncSGIS_IIP(int target, int filter, IntPtr weights);
    public delegate void DglGetTexGendv_IIaD(int coord, int pname, double[] rdparams);
    public delegate void DglGetTexGendv_IIP(int coord, int pname, IntPtr rdparams);
    public delegate void DglGetTexGenfv_IIaF(int coord, int pname, float[] rfparams);
    public delegate void DglGetTexGenfv_IIP(int coord, int pname, IntPtr rfparams);
    public delegate void DglGetTexGeniv_IIaI(int coord, int pname, int[] riparams);
    public delegate void DglGetTexGeniv_IIP(int coord, int pname, IntPtr riparams);
    public delegate void DglGetTexImage_IIIIaB(int target, int level, int format, int itype, byte[] pixels);
    public delegate void DglGetTexImage_IIIIaH(int target, int level, int format, int itype, short[] pixels);
    public delegate void DglGetTexImage_IIIIaI(int target, int level, int format, int itype, int[] pixels);
    public delegate void DglGetTexImage_IIIIaF(int target, int level, int format, int itype, float[] pixels);
    public delegate void DglGetTexImage_IIIIP(int target, int level, int format, int itype, IntPtr pixels);
    public delegate void DglGetTexLevelParameterfv_IIIaF(int target, int level, int pname, float[] rfparams);
    public delegate void DglGetTexLevelParameterfv_IIIP(int target, int level, int pname, IntPtr rfparams);
    public delegate void DglGetTexLevelParameteriv_IIIaI(int target, int level, int pname, int[] riparams);
    public delegate void DglGetTexLevelParameteriv_IIIP(int target, int level, int pname, IntPtr riparams);
    public delegate void DglGetTexParameterfv_IIaF(int target, int pname, float[] rfparams);
    public delegate void DglGetTexParameterfv_IIP(int target, int pname, IntPtr rfparams);
    public delegate void DglGetTexParameteriv_IIaI(int target, int pname, int[] riparams);
    public delegate void DglGetTexParameteriv_IIP(int target, int pname, IntPtr riparams);
    public delegate void DglGetTrackMatrixivNV_IIIaI(int target, int address, int pname, int[] riparams);
    public delegate void DglGetTrackMatrixivNV_IIIP(int target, int address, int pname, IntPtr riparams);
    public delegate void DglGetUniformfv_IIaF(int program, int location, float[] rfparams);
    public delegate void DglGetUniformfv_IIP(int program, int location, IntPtr rfparams);
    //public delegate void DglGetUniformfvARB_IIaF(int programObj, int location, float[] rfparams);
    //public delegate void DglGetUniformfvARB_IIP(int programObj, int location, IntPtr rfparams);
    public delegate void DglGetUniformiv_IIaI(int program, int location, int[] riparams);
    public delegate void DglGetUniformiv_IIP(int program, int location, IntPtr riparams);
    //public delegate void DglGetUniformivARB_IIaI(int programObj, int location, int[] riparams);
    //public delegate void DglGetUniformivARB_IIP(int programObj, int location, IntPtr riparams);
    public delegate int DglGetUniformLocation_IS(int program, String name);
    //public delegate int DglGetUniformLocationARB_IS(int programObj, String name);
    public delegate void DglGetVariantArrayObjectfvATI_IIaF(int id, int pname, float[] rfparams);
    public delegate void DglGetVariantArrayObjectfvATI_IIP(int id, int pname, IntPtr rfparams);
    public delegate void DglGetVariantArrayObjectivATI_IIaI(int id, int pname, int[] riparams);
    public delegate void DglGetVariantArrayObjectivATI_IIP(int id, int pname, IntPtr riparams);
    public delegate void DglGetVariantBooleanvEXT_IIaB(int id, int value, byte[] data);
    public delegate void DglGetVariantBooleanvEXT_IIP(int id, int value, IntPtr data);
    public delegate void DglGetVariantFloatvEXT_IIaF(int id, int value, float[] data);
    public delegate void DglGetVariantFloatvEXT_IIP(int id, int value, IntPtr data);
    public delegate void DglGetVariantIntegervEXT_IIaI(int id, int value, int[] data);
    public delegate void DglGetVariantIntegervEXT_IIP(int id, int value, IntPtr data);
    public delegate void DglGetVariantPointervEXT_IIrP(int id, int value, ref IntPtr data);
    public delegate void DglGetVertexAttribArrayObjectfvATI_IIaF(int index, int pname, float[] rfparams);
    public delegate void DglGetVertexAttribArrayObjectfvATI_IIP(int index, int pname, IntPtr rfparams);
    public delegate void DglGetVertexAttribArrayObjectivATI_IIaI(int index, int pname, int[] riparams);
    public delegate void DglGetVertexAttribArrayObjectivATI_IIP(int index, int pname, IntPtr riparams);
    public delegate void DglGetVertexAttribdv_IIaD(int index, int pname, double[] rdparams);
    public delegate void DglGetVertexAttribdv_IIP(int index, int pname, IntPtr rdparams);
    //public delegate void DglGetVertexAttribdvARB_IIaD(int index, int pname, double[] rdparams);
    //public delegate void DglGetVertexAttribdvARB_IIP(int index, int pname, IntPtr rdparams);
    public delegate void DglGetVertexAttribdvNV_IIaD(int index, int pname, double[] rdparams);
    public delegate void DglGetVertexAttribdvNV_IIP(int index, int pname, IntPtr rdparams);
    public delegate void DglGetVertexAttribfv_IIaF(int index, int pname, float[] rfparams);
    public delegate void DglGetVertexAttribfv_IIP(int index, int pname, IntPtr rfparams);
    //public delegate void DglGetVertexAttribfvARB_IIaF(int index, int pname, float[] rfparams);
    //public delegate void DglGetVertexAttribfvARB_IIP(int index, int pname, IntPtr rfparams);
    //public delegate void DglGetVertexAttribfvNV_IIaF(int index, int pname, float[] rfparams);
    //public delegate void DglGetVertexAttribfvNV_IIP(int index, int pname, IntPtr rfparams);
    public delegate void DglGetVertexAttribiv_IIaI(int index, int pname, int[] riparams);
    public delegate void DglGetVertexAttribiv_IIP(int index, int pname, IntPtr riparams);
    //public delegate void DglGetVertexAttribivARB_IIaI(int index, int pname, int[] riparams);
    //public delegate void DglGetVertexAttribivARB_IIP(int index, int pname, IntPtr riparams);
    public delegate void DglGetVertexAttribivNV_IIaI(int index, int pname, int[] riparams);
    public delegate void DglGetVertexAttribivNV_IIP(int index, int pname, IntPtr riparams);
    public delegate void DglGetVertexAttribPointerv_IIrP(int index, int pname, ref IntPtr pointer);
    //public delegate void DglGetVertexAttribPointervARB_IIrP(int index, int pname, ref IntPtr pointer);
    public delegate void DglGetVertexAttribPointervNV_IIrP(int index, int pname, ref IntPtr pointer);
    //public delegate void DglGlobalAlphaFactorbSUN_B(byte factor);
    //public delegate void DglGlobalAlphaFactordSUN_D(double factor);
    //public delegate void DglGlobalAlphaFactorfSUN_F(float factor);
    //public delegate void DglGlobalAlphaFactoriSUN_I(int factor);
    //public delegate void DglGlobalAlphaFactorsSUN_H(short factor);
    //public delegate void DglGlobalAlphaFactorubSUN_B(byte factor);
    //public delegate void DglGlobalAlphaFactoruiSUN_I(int factor);
    //public delegate void DglGlobalAlphaFactorusSUN_H(short factor);
    public delegate void DglHint_II(int target, int mode);
    public delegate void DglHintPGI_II(int target, int mode);
    public delegate void DglHistogram_IIIB(int target, int width, int internalformat, byte sink);
    public delegate void DglHistogramEXT_IIIB(int target, int width, int internalformat, byte sink);
    //public delegate void DglIglooInterfaceSGIX_IaB(int pname, byte[] rvparams);
    //public delegate void DglIglooInterfaceSGIX_IP(int pname, IntPtr rvparams);
    //public delegate void DglImageTransformParameterfHP_IIF(int target, int pname, float fparam);
    //public delegate void DglImageTransformParameterfvHP_IIaF(int target, int pname, float[] rfparams);
    //public delegate void DglImageTransformParameterfvHP_IIP(int target, int pname, IntPtr rfparams);
    //public delegate void DglImageTransformParameteriHP_III(int target, int pname, int iparam);
    //public delegate void DglImageTransformParameterivHP_IIaI(int target, int pname, int[] riparams);
    //public delegate void DglImageTransformParameterivHP_IIP(int target, int pname, IntPtr riparams);
    public delegate void DglIndexd_D(double c);
    public delegate void DglIndexdv_aD(double[] c);
    public delegate void DglIndexdv_P(IntPtr c);
    public delegate void DglIndexf_F(float c);
    public delegate void DglIndexFuncEXT_IF(int func, float fref);
    public delegate void DglIndexfv_aF(float[] c);
    public delegate void DglIndexfv_P(IntPtr c);
    public delegate void DglIndexi_I(int c);
    public delegate void DglIndexiv_aI(int[] c);
    public delegate void DglIndexiv_P(IntPtr c);
    public delegate void DglIndexMask_I(int mask);
    public delegate void DglIndexMaterialEXT_II(int face, int mode);
    public delegate void DglIndexPointer_IIaB(int itype, int stride, byte[] pointer);
    public delegate void DglIndexPointer_IIaH(int itype, int stride, short[] pointer);
    public delegate void DglIndexPointer_IIaI(int itype, int stride, int[] pointer);
    public delegate void DglIndexPointer_IIaF(int itype, int stride, float[] pointer);
    public delegate void DglIndexPointer_IIaD(int itype, int stride, double[] pointer);
    public delegate void DglIndexPointer_IIP(int itype, int stride, IntPtr pointer);
    public delegate void DglIndexPointerEXT_IIIaB(int itype, int stride, int count, byte[] pointer);
    public delegate void DglIndexPointerEXT_IIIaH(int itype, int stride, int count, short[] pointer);
    public delegate void DglIndexPointerEXT_IIIaI(int itype, int stride, int count, int[] pointer);
    public delegate void DglIndexPointerEXT_IIIaF(int itype, int stride, int count, float[] pointer);
    public delegate void DglIndexPointerEXT_IIIaD(int itype, int stride, int count, double[] pointer);
    public delegate void DglIndexPointerEXT_IIIP(int itype, int stride, int count, IntPtr pointer);
    //public delegate void DglIndexPointerListIBM_IIrPaB(int itype, int stride, ref IntPtr pointer, byte[] ptrstride);
    //public delegate void DglIndexPointerListIBM_IIrPaH(int itype, int stride, ref IntPtr pointer, short[] ptrstride);
    //public delegate void DglIndexPointerListIBM_IIrPaI(int itype, int stride, ref IntPtr pointer, int[] ptrstride);
    //public delegate void DglIndexPointerListIBM_IIrPaF(int itype, int stride, ref IntPtr pointer, float[] ptrstride);
    //public delegate void DglIndexPointerListIBM_IIrPaD(int itype, int stride, ref IntPtr pointer, double[] ptrstride);
    //public delegate void DglIndexPointerListIBM_IIrPP(int itype, int stride, ref IntPtr pointer, IntPtr ptrstride);
    public delegate void DglIndexs_H(short c);
    public delegate void DglIndexsv_aH(short[] c);
    public delegate void DglIndexsv_P(IntPtr c);
    public delegate void DglIndexub_B(byte c);
    public delegate void DglIndexubv_aB(byte[] c);
    public delegate void DglIndexubv_P(IntPtr c);
    public delegate void DglInitNames_V();
    public delegate void DglInsertComponentEXT_III(int res, int src, int num);
    //public delegate void DglInstrumentsBufferSGIX_IaI(int size, int[] buffer);
    //public delegate void DglInstrumentsBufferSGIX_IP(int size, IntPtr buffer);
    public delegate void DglInterleavedArrays_IIaB(int format, int stride, byte[] pointer);
    public delegate void DglInterleavedArrays_IIaF(int format, int stride, float[] pointer);
    public delegate void DglInterleavedArrays_IIP(int format, int stride, IntPtr pointer);
    //public delegate byte DglIsAsyncMarkerSGIX_I(int marker);
    public delegate byte DglIsBuffer_I(int buffer);
    public delegate byte DglIsBufferARB_I(int buffer);
    public delegate byte DglIsEnabled_I(int cap);
    public delegate byte DglIsFenceAPPLE_I(int fence);
    public delegate byte DglIsFenceNV_I(int fence);
    public delegate byte DglIsFramebufferEXT_I(int framebuffer);
    public delegate byte DglIsList_I(int list);
    public delegate byte DglIsObjectBufferATI_I(int buffer);
    public delegate byte DglIsOcclusionQueryNV_I(int id);
    public delegate byte DglIsProgram_I(int program);
    public delegate byte DglIsProgramARB_I(int program);
    public delegate byte DglIsProgramNV_I(int id);
    public delegate byte DglIsQuery_I(int id);
    public delegate byte DglIsQueryARB_I(int id);
    public delegate byte DglIsRenderbufferEXT_I(int renderbuffer);
    public delegate byte DglIsShader_I(int shader);
    public delegate byte DglIsTexture_I(int texture);
    public delegate byte DglIsTextureEXT_I(int texture);
    public delegate byte DglIsVariantEnabledEXT_II(int id, int cap);
    public delegate byte DglIsVertexArrayAPPLE_I(int array);
    public delegate void DglLightEnviSGIX_II(int pname, int iparam);
    public delegate void DglLightf_IIF(int light, int pname, float fparam);
    public delegate void DglLightfv_IIaF(int light, int pname, float[] rfparams);
    public delegate void DglLightfv_IIP(int light, int pname, IntPtr rfparams);
    public delegate void DglLighti_III(int light, int pname, int iparam);
    public delegate void DglLightiv_IIaI(int light, int pname, int[] riparams);
    public delegate void DglLightiv_IIP(int light, int pname, IntPtr riparams);
    public delegate void DglLightModelf_IF(int pname, float fparam);
    public delegate void DglLightModelfv_IaF(int pname, float[] rfparams);
    public delegate void DglLightModelfv_IP(int pname, IntPtr rfparams);
    public delegate void DglLightModeli_II(int pname, int iparam);
    public delegate void DglLightModeliv_IaI(int pname, int[] riparams);
    public delegate void DglLightModeliv_IP(int pname, IntPtr riparams);
    public delegate void DglLineStipple_IH(int factor, short pattern);
    public delegate void DglLineWidth_F(float width);
    public delegate void DglLinkProgram_I(int program);
    public delegate void DglLinkProgramARB_I(int programObj);
    public delegate void DglListBase_I(int ibase);
    public delegate void DglListParameterfSGIX_IIF(int list, int pname, float fparam);
    public delegate void DglListParameterfvSGIX_IIaF(int list, int pname, float[] rfparams);
    public delegate void DglListParameterfvSGIX_IIP(int list, int pname, IntPtr rfparams);
    public delegate void DglListParameteriSGIX_III(int list, int pname, int iparam);
    public delegate void DglListParameterivSGIX_IIaI(int list, int pname, int[] riparams);
    public delegate void DglListParameterivSGIX_IIP(int list, int pname, IntPtr riparams);
    public delegate void DglLoadIdentity_V();
    public delegate void DglLoadIdentityDeformationMapSGIX_I(int mask);
    public delegate void DglLoadMatrixd_aD(double[] m);
    public delegate void DglLoadMatrixd_P(IntPtr m);
    public delegate void DglLoadMatrixf_aF(float[] m);
    public delegate void DglLoadMatrixf_P(IntPtr m);
    public delegate void DglLoadName_I(int name);
    public delegate void DglLoadProgramNV_IIIaB(int target, int id, int len, byte[] program);
    public delegate void DglLoadProgramNV_IIIP(int target, int id, int len, IntPtr program);
    public delegate void DglLoadTransposeMatrixd_aD(double[] m);
    public delegate void DglLoadTransposeMatrixd_P(IntPtr m);
    public delegate void DglLoadTransposeMatrixdARB_aD(double[] m);
    public delegate void DglLoadTransposeMatrixdARB_P(IntPtr m);
    public delegate void DglLoadTransposeMatrixf_aF(float[] m);
    public delegate void DglLoadTransposeMatrixf_P(IntPtr m);
    public delegate void DglLoadTransposeMatrixfARB_aF(float[] m);
    public delegate void DglLoadTransposeMatrixfARB_P(IntPtr m);
    public delegate void DglLockArraysEXT_II(int first, int count);
    public delegate void DglLogicOp_I(int opcode);
    public delegate void DglMap1d_IDDIIaD(int target, double u1, double u2, int stride, int order, double[] points);
    public delegate void DglMap1d_IDDIIP(int target, double u1, double u2, int stride, int order, IntPtr points);
    public delegate void DglMap1f_IFFIIaF(int target, float u1, float u2, int stride, int order, float[] points);
    public delegate void DglMap1f_IFFIIP(int target, float u1, float u2, int stride, int order, IntPtr points);
    public delegate void DglMap2d_IDDIIDDIIaD(int target, double u1, double u2, int ustride, int uorder, double v1, double v2, int vstride, int vorder, double[] points);
    public delegate void DglMap2d_IDDIIDDIIP(int target, double u1, double u2, int ustride, int uorder, double v1, double v2, int vstride, int vorder, IntPtr points);
    public delegate void DglMap2f_IFFIIFFIIaF(int target, float u1, float u2, int ustride, int uorder, float v1, float v2, int vstride, int vorder, float[] points);
    public delegate void DglMap2f_IFFIIFFIIP(int target, float u1, float u2, int ustride, int uorder, float v1, float v2, int vstride, int vorder, IntPtr points);
    public delegate IntPtr DglMapBuffer_II(int target, int access);
    public delegate IntPtr DglMapBufferARB_II(int target, int access);
    public delegate void DglMapControlPointsNV_IIIIIIIBaB(int target, int index, int itype, int ustride, int vstride, int uorder, int vorder, byte packed, byte[] points);
    public delegate void DglMapControlPointsNV_IIIIIIIBaF(int target, int index, int itype, int ustride, int vstride, int uorder, int vorder, byte packed, float[] points);
    public delegate void DglMapControlPointsNV_IIIIIIIBP(int target, int index, int itype, int ustride, int vstride, int uorder, int vorder, byte packed, IntPtr points);
    public delegate void DglMapGrid1d_IDD(int un, double u1, double u2);
    public delegate void DglMapGrid1f_IFF(int un, float u1, float u2);
    public delegate void DglMapGrid2d_IDDIDD(int un, double u1, double u2, int vn, double v1, double v2);
    public delegate void DglMapGrid2f_IFFIFF(int un, float u1, float u2, int vn, float v1, float v2);
    public delegate IntPtr DglMapObjectBufferATI_I(int buffer);
    public delegate void DglMapParameterfvNV_IIaF(int target, int pname, float[] rfparams);
    public delegate void DglMapParameterfvNV_IIP(int target, int pname, IntPtr rfparams);
    public delegate void DglMapParameterivNV_IIaI(int target, int pname, int[] riparams);
    public delegate void DglMapParameterivNV_IIP(int target, int pname, IntPtr riparams);
    public delegate void DglMaterialf_IIF(int face, int pname, float param);
    public delegate void DglMaterialfv_IIaF(int face, int pname, float[] rfparams);
    public delegate void DglMaterialfv_IIP(int face, int pname, IntPtr rfparams);
    public delegate void DglMateriali_III(int face, int pname, int iparam);
    public delegate void DglMaterialiv_IIaI(int face, int pname, int[] riparams);
    public delegate void DglMaterialiv_IIP(int face, int pname, IntPtr riparams);
    public delegate void DglMatrixIndexPointerARB_IIIaI(int size, int itype, int stride, int[] pointer);
    public delegate void DglMatrixIndexPointerARB_IIIP(int size, int itype, int stride, IntPtr pointer);
    public delegate void DglMatrixIndexubvARB_IaB(int size, byte[] indices);
    public delegate void DglMatrixIndexubvARB_IP(int size, IntPtr indices);
    public delegate void DglMatrixIndexuivARB_IaI(int size, int[] indices);
    public delegate void DglMatrixIndexuivARB_IP(int size, IntPtr indices);
    public delegate void DglMatrixIndexusvARB_IaH(int size, short[] indices);
    public delegate void DglMatrixIndexusvARB_IP(int size, IntPtr indices);
    public delegate void DglMatrixMode_I(int mode);
    public delegate void DglMinmax_IIB(int target, int internalformat, byte sink);
    public delegate void DglMinmaxEXT_IIB(int target, int internalformat, byte sink);
    public delegate void DglMultiDrawArrays_IrIrII(int mode, ref int first, ref int count, int primcount);
    public delegate void DglMultiDrawArraysEXT_IrIrII(int mode, ref int first, ref int count, int primcount);
    public delegate void DglMultiDrawElementArrayAPPLE_IrIrII(int mode, ref int first, ref int count, int primcount);
    public delegate void DglMultiDrawElements_IrIIrPI(int mode, ref int count, int itype, ref IntPtr indices, int primcount);
    public delegate void DglMultiDrawElementsEXT_IrIIrPI(int mode, ref int count, int itype, ref IntPtr indices, int primcount);
    public delegate void DglMultiDrawRangeElementArrayAPPLE_IIIrIrII(int mode, int start, int end, ref int first, ref int count, int primcount);
    public delegate void DglMultiModeDrawArraysIBM_rIrIrIII(ref int mode, ref int first, ref int count, int primcount, int modestride);
    public delegate void DglMultiModeDrawElementsIBM_rIrIIrPII(ref int mode, ref int count, int itype, ref IntPtr indices, int primcount, int modestride);
    public delegate void DglMultiTexCoord1d_ID(int target, double s);
    public delegate void DglMultiTexCoord1dARB_ID(int target, double s);
    public delegate void DglMultiTexCoord1dv_IaD(int target, double[] v);
    public delegate void DglMultiTexCoord1dv_IP(int target, IntPtr v);
    public delegate void DglMultiTexCoord1dvARB_IaD(int target, double[] v);
    public delegate void DglMultiTexCoord1dvARB_IP(int target, IntPtr v);
    public delegate void DglMultiTexCoord1f_IF(int target, float s);
    public delegate void DglMultiTexCoord1fARB_IF(int target, float s);
    public delegate void DglMultiTexCoord1fv_IaF(int target, float[] v);
    public delegate void DglMultiTexCoord1fv_IP(int target, IntPtr v);
    public delegate void DglMultiTexCoord1fvARB_IaF(int target, float[] v);
    public delegate void DglMultiTexCoord1fvARB_IP(int target, IntPtr v);
    public delegate void DglMultiTexCoord1hNV_IH(int target, short s);
    public delegate void DglMultiTexCoord1hvNV_IaH(int target, short[] v);
    public delegate void DglMultiTexCoord1hvNV_IP(int target, IntPtr v);
    public delegate void DglMultiTexCoord1i_II(int target, int s);
    public delegate void DglMultiTexCoord1iARB_II(int target, int s);
    public delegate void DglMultiTexCoord1iv_IaI(int target, int[] v);
    public delegate void DglMultiTexCoord1iv_IP(int target, IntPtr v);
    public delegate void DglMultiTexCoord1ivARB_IaI(int target, int[] v);
    public delegate void DglMultiTexCoord1ivARB_IP(int target, IntPtr v);
    public delegate void DglMultiTexCoord1s_IH(int target, short s);
    public delegate void DglMultiTexCoord1sARB_IH(int target, short s);
    public delegate void DglMultiTexCoord1sv_IaH(int target, short[] v);
    public delegate void DglMultiTexCoord1sv_IP(int target, IntPtr v);
    public delegate void DglMultiTexCoord1svARB_IaH(int target, short[] v);
    public delegate void DglMultiTexCoord1svARB_IP(int target, IntPtr v);
    public delegate void DglMultiTexCoord2d_IDD(int target, double s, double t);
    public delegate void DglMultiTexCoord2dARB_IDD(int target, double s, double t);
    public delegate void DglMultiTexCoord2dv_IaD(int target, double[] v);
    public delegate void DglMultiTexCoord2dv_IP(int target, IntPtr v);
    public delegate void DglMultiTexCoord2dvARB_IaD(int target, double[] v);
    public delegate void DglMultiTexCoord2dvARB_IP(int target, IntPtr v);
    public delegate void DglMultiTexCoord2f_IFF(int target, float s, float t);
    public delegate void DglMultiTexCoord2fARB_IFF(int target, float s, float t);
    public delegate void DglMultiTexCoord2fv_IaF(int target, float[] v);
    public delegate void DglMultiTexCoord2fv_IP(int target, IntPtr v);
    public delegate void DglMultiTexCoord2fvARB_IaF(int target, float[] v);
    public delegate void DglMultiTexCoord2fvARB_IP(int target, IntPtr v);
    public delegate void DglMultiTexCoord2hNV_IHH(int target, short s, short t);
    public delegate void DglMultiTexCoord2hvNV_IaH(int target, short[] v);
    public delegate void DglMultiTexCoord2hvNV_IP(int target, IntPtr v);
    public delegate void DglMultiTexCoord2i_III(int target, int s, int t);
    public delegate void DglMultiTexCoord2iARB_III(int target, int s, int t);
    public delegate void DglMultiTexCoord2iv_IaI(int target, int[] v);
    public delegate void DglMultiTexCoord2iv_IP(int target, IntPtr v);
    public delegate void DglMultiTexCoord2ivARB_IaI(int target, int[] v);
    public delegate void DglMultiTexCoord2ivARB_IP(int target, IntPtr v);
    public delegate void DglMultiTexCoord2s_IHH(int target, short s, short t);
    public delegate void DglMultiTexCoord2sARB_IHH(int target, short s, short t);
    public delegate void DglMultiTexCoord2sv_IaH(int target, short[] v);
    public delegate void DglMultiTexCoord2sv_IP(int target, IntPtr v);
    public delegate void DglMultiTexCoord2svARB_IaH(int target, short[] v);
    public delegate void DglMultiTexCoord2svARB_IP(int target, IntPtr v);
    public delegate void DglMultiTexCoord3d_IDDD(int target, double s, double t, double r);
    public delegate void DglMultiTexCoord3dARB_IDDD(int target, double s, double t, double r);
    public delegate void DglMultiTexCoord3dv_IaD(int target, double[] v);
    public delegate void DglMultiTexCoord3dv_IP(int target, IntPtr v);
    public delegate void DglMultiTexCoord3dvARB_IaD(int target, double[] v);
    public delegate void DglMultiTexCoord3dvARB_IP(int target, IntPtr v);
    public delegate void DglMultiTexCoord3f_IFFF(int target, float s, float t, float r);
    public delegate void DglMultiTexCoord3fARB_IFFF(int target, float s, float t, float r);
    public delegate void DglMultiTexCoord3fv_IaF(int target, float[] v);
    public delegate void DglMultiTexCoord3fv_IP(int target, IntPtr v);
    public delegate void DglMultiTexCoord3fvARB_IaF(int target, float[] v);
    public delegate void DglMultiTexCoord3fvARB_IP(int target, IntPtr v);
    public delegate void DglMultiTexCoord3hNV_IHHH(int target, short s, short t, short r);
    public delegate void DglMultiTexCoord3hvNV_IaH(int target, short[] v);
    public delegate void DglMultiTexCoord3hvNV_IP(int target, IntPtr v);
    public delegate void DglMultiTexCoord3i_IIII(int target, int s, int t, int r);
    public delegate void DglMultiTexCoord3iARB_IIII(int target, int s, int t, int r);
    public delegate void DglMultiTexCoord3iv_IaI(int target, int[] v);
    public delegate void DglMultiTexCoord3iv_IP(int target, IntPtr v);
    public delegate void DglMultiTexCoord3ivARB_IaI(int target, int[] v);
    public delegate void DglMultiTexCoord3ivARB_IP(int target, IntPtr v);
    public delegate void DglMultiTexCoord3s_IHHH(int target, short s, short t, short r);
    public delegate void DglMultiTexCoord3sARB_IHHH(int target, short s, short t, short r);
    public delegate void DglMultiTexCoord3sv_IaH(int target, short[] v);
    public delegate void DglMultiTexCoord3sv_IP(int target, IntPtr v);
    public delegate void DglMultiTexCoord3svARB_IaH(int target, short[] v);
    public delegate void DglMultiTexCoord3svARB_IP(int target, IntPtr v);
    public delegate void DglMultiTexCoord4d_IDDDD(int target, double s, double t, double r, double q);
    public delegate void DglMultiTexCoord4dARB_IDDDD(int target, double s, double t, double r, double q);
    public delegate void DglMultiTexCoord4dv_IaD(int target, double[] v);
    public delegate void DglMultiTexCoord4dv_IP(int target, IntPtr v);
    public delegate void DglMultiTexCoord4dvARB_IaD(int target, double[] v);
    public delegate void DglMultiTexCoord4dvARB_IP(int target, IntPtr v);
    public delegate void DglMultiTexCoord4f_IFFFF(int target, float s, float t, float r, float q);
    public delegate void DglMultiTexCoord4fARB_IFFFF(int target, float s, float t, float r, float q);
    public delegate void DglMultiTexCoord4fv_IaF(int target, float[] v);
    public delegate void DglMultiTexCoord4fv_IP(int target, IntPtr v);
    public delegate void DglMultiTexCoord4fvARB_IaF(int target, float[] v);
    public delegate void DglMultiTexCoord4fvARB_IP(int target, IntPtr v);
    public delegate void DglMultiTexCoord4hNV_IHHHH(int target, short s, short t, short r, short q);
    public delegate void DglMultiTexCoord4hvNV_IaH(int target, short[] v);
    public delegate void DglMultiTexCoord4hvNV_IP(int target, IntPtr v);
    public delegate void DglMultiTexCoord4i_IIIII(int target, int s, int t, int r, int q);
    public delegate void DglMultiTexCoord4iARB_IIIII(int target, int s, int t, int r, int q);
    public delegate void DglMultiTexCoord4iv_IaI(int target, int[] v);
    public delegate void DglMultiTexCoord4iv_IP(int target, IntPtr v);
    public delegate void DglMultiTexCoord4ivARB_IaI(int target, int[] v);
    public delegate void DglMultiTexCoord4ivARB_IP(int target, IntPtr v);
    public delegate void DglMultiTexCoord4s_IHHHH(int target, short s, short t, short r, short q);
    public delegate void DglMultiTexCoord4sARB_IHHHH(int target, short s, short t, short r, short q);
    public delegate void DglMultiTexCoord4sv_IaH(int target, short[] v);
    public delegate void DglMultiTexCoord4sv_IP(int target, IntPtr v);
    public delegate void DglMultiTexCoord4svARB_IaH(int target, short[] v);
    public delegate void DglMultiTexCoord4svARB_IP(int target, IntPtr v);
    public delegate void DglMultMatrixd_aD(double[] m);
    public delegate void DglMultMatrixd_P(IntPtr m);
    public delegate void DglMultMatrixf_aF(float[] m);
    public delegate void DglMultMatrixf_P(IntPtr m);
    public delegate void DglMultTransposeMatrixd_aD(double[] m);
    public delegate void DglMultTransposeMatrixd_P(IntPtr m);
    public delegate void DglMultTransposeMatrixdARB_aD(double[] m);
    public delegate void DglMultTransposeMatrixdARB_P(IntPtr m);
    public delegate void DglMultTransposeMatrixf_aF(float[] m);
    public delegate void DglMultTransposeMatrixf_P(IntPtr m);
    public delegate void DglMultTransposeMatrixfARB_aF(float[] m);
    public delegate void DglMultTransposeMatrixfARB_P(IntPtr m);
    public delegate void DglNewList_II(int list, int mode);
    public delegate int DglNewObjectBufferATI_IaBI(int size, byte[] pointer, int usage);
    public delegate int DglNewObjectBufferATI_IPI(int size, IntPtr pointer, int usage);
    public delegate void DglNormal3b_BBB(byte nx, byte ny, byte nz);
    public delegate void DglNormal3bv_aB(byte[] v);
    public delegate void DglNormal3bv_P(IntPtr v);
    public delegate void DglNormal3d_DDD(double nx, double ny, double nz);
    public delegate void DglNormal3dv_aD(double[] v);
    public delegate void DglNormal3dv_P(IntPtr v);
    public delegate void DglNormal3f_FFF(float nx, float ny, float nz);
    public delegate void DglNormal3fv_aF(float[] v);
    public delegate void DglNormal3fv_P(IntPtr v);
    public delegate void DglNormal3fVertex3fSUN_FFFFFF(float nx, float ny, float nz, float x, float y, float z);
    public delegate void DglNormal3fVertex3fvSUN_aFaF(float[] n, float[] v);
    public delegate void DglNormal3fVertex3fvSUN_PP(IntPtr n, IntPtr v);
    public delegate void DglNormal3hNV_HHH(short nx, short ny, short nz);
    public delegate void DglNormal3hvNV_aH(short[] v);
    public delegate void DglNormal3hvNV_P(IntPtr v);
    public delegate void DglNormal3i_III(int nx, int ny, int nz);
    public delegate void DglNormal3iv_aI(int[] v);
    public delegate void DglNormal3iv_P(IntPtr v);
    public delegate void DglNormal3s_HHH(short nx, short ny, short nz);
    public delegate void DglNormal3sv_aH(short[] v);
    public delegate void DglNormal3sv_P(IntPtr v);
    public delegate void DglNormalPointer_IIaB(int itype, int stride, byte[] pointer);
    public delegate void DglNormalPointer_IIaH(int itype, int stride, short[] pointer);
    public delegate void DglNormalPointer_IIaI(int itype, int stride, int[] pointer);
    public delegate void DglNormalPointer_IIaF(int itype, int stride, float[] pointer);
    public delegate void DglNormalPointer_IIaD(int itype, int stride, double[] pointer);
    public delegate void DglNormalPointer_IIP(int itype, int stride, IntPtr pointer);
    public delegate void DglNormalPointerEXT_IIIaB(int itype, int stride, int count, byte[] pointer);
    public delegate void DglNormalPointerEXT_IIIaH(int itype, int stride, int count, short[] pointer);
    public delegate void DglNormalPointerEXT_IIIaI(int itype, int stride, int count, int[] pointer);
    public delegate void DglNormalPointerEXT_IIIaF(int itype, int stride, int count, float[] pointer);
    public delegate void DglNormalPointerEXT_IIIaD(int itype, int stride, int count, double[] pointer);
    public delegate void DglNormalPointerEXT_IIIP(int itype, int stride, int count, IntPtr pointer);
    public delegate void DglNormalPointerListIBM_IIrPI(int itype, int stride, ref IntPtr pointer, int ptrstride);
    public delegate void DglNormalPointervINTEL_IrP(int itype, ref IntPtr pointer);
    public delegate void DglNormalStream3bATI_IBBB(int stream, byte nx, byte ny, byte nz);
    public delegate void DglNormalStream3bvATI_IaB(int stream, byte[] coords);
    public delegate void DglNormalStream3bvATI_IP(int stream, IntPtr coords);
    public delegate void DglNormalStream3dATI_IDDD(int stream, double nx, double ny, double nz);
    public delegate void DglNormalStream3dvATI_IaD(int stream, double[] coords);
    public delegate void DglNormalStream3dvATI_IP(int stream, IntPtr coords);
    public delegate void DglNormalStream3fATI_IFFF(int stream, float nx, float ny, float nz);
    public delegate void DglNormalStream3fvATI_IaF(int stream, float[] coords);
    public delegate void DglNormalStream3fvATI_IP(int stream, IntPtr coords);
    public delegate void DglNormalStream3iATI_IIII(int stream, int nx, int ny, int nz);
    public delegate void DglNormalStream3ivATI_IaI(int stream, int[] coords);
    public delegate void DglNormalStream3ivATI_IP(int stream, IntPtr coords);
    public delegate void DglNormalStream3sATI_IHHH(int stream, short nx, short ny, short nz);
    public delegate void DglNormalStream3svATI_IaH(int stream, short[] coords);
    public delegate void DglNormalStream3svATI_IP(int stream, IntPtr coords);
    public delegate void DglOrtho_DDDDDD(double left, double right, double bottom, double top, double zNear, double zFar);
    public delegate void DglPassTexCoordATI_III(int dst, int coord, int swizzle);
    public delegate void DglPassThrough_F(float token);
    public delegate void DglPixelDataRangeNV_IIaB(int target, int length, byte[] pointer);
    public delegate void DglPixelDataRangeNV_IIP(int target, int length, IntPtr pointer);
    public delegate void DglPixelMapfv_IIaF(int map, int mapsize, float[] values);
    public delegate void DglPixelMapfv_IIP(int map, int mapsize, IntPtr values);
    public delegate void DglPixelMapuiv_IIaI(int map, int mapsize, int[] values);
    public delegate void DglPixelMapuiv_IIP(int map, int mapsize, IntPtr values);
    public delegate void DglPixelMapusv_IIaH(int map, int mapsize, short[] values);
    public delegate void DglPixelMapusv_IIP(int map, int mapsize, IntPtr values);
    public delegate void DglPixelStoref_IF(int pname, float param);
    public delegate void DglPixelStorei_II(int pname, int param);
    public delegate void DglPixelTexGenParameterfSGIS_IF(int pname, float fparam);
    public delegate void DglPixelTexGenParameterfvSGIS_IaF(int pname, float[] rfparams);
    public delegate void DglPixelTexGenParameterfvSGIS_IP(int pname, IntPtr rfparams);
    public delegate void DglPixelTexGenParameteriSGIS_II(int pname, int iparam);
    public delegate void DglPixelTexGenParameterivSGIS_IaI(int pname, int[] riparams);
    public delegate void DglPixelTexGenParameterivSGIS_IP(int pname, IntPtr riparams);
    public delegate void DglPixelTexGenSGIX_I(int mode);
    public delegate void DglPixelTransferf_IF(int pname, float param);
    public delegate void DglPixelTransferi_II(int pname, int param);
    public delegate void DglPixelTransformParameterfEXT_IIF(int target, int pname, float fparam);
    public delegate void DglPixelTransformParameterfvEXT_IIaF(int target, int pname, float[] rfparams);
    public delegate void DglPixelTransformParameterfvEXT_IIP(int target, int pname, IntPtr rfparams);
    public delegate void DglPixelTransformParameteriEXT_III(int target, int pname, int iparam);
    public delegate void DglPixelTransformParameterivEXT_IIaI(int target, int pname, int[] riparams);
    public delegate void DglPixelTransformParameterivEXT_IIP(int target, int pname, IntPtr riparams);
    public delegate void DglPixelZoom_FF(float xfactor, float yfactor);
    public delegate void DglPNTrianglesfATI_IF(int pname, float fparam);
    public delegate void DglPNTrianglesiATI_II(int pname, int iparam);
    public delegate void DglPointParameterf_IF(int pname, float fparam);
    public delegate void DglPointParameterfARB_IF(int pname, float fparam);
    public delegate void DglPointParameterfEXT_IF(int pname, float fparam);
    public delegate void DglPointParameterfSGIS_IF(int pname, float fparam);
    public delegate void DglPointParameterfv_IaF(int pname, float[] rfparams);
    public delegate void DglPointParameterfv_IP(int pname, IntPtr rfparams);
    public delegate void DglPointParameterfvARB_IaF(int pname, float[] rfparams);
    public delegate void DglPointParameterfvARB_IP(int pname, IntPtr rfparams);
    public delegate void DglPointParameterfvEXT_IaF(int pname, float[] rfparams);
    public delegate void DglPointParameterfvEXT_IP(int pname, IntPtr rfparams);
    public delegate void DglPointParameterfvSGIS_IaF(int pname, float[] rfparams);
    public delegate void DglPointParameterfvSGIS_IP(int pname, IntPtr rfparams);
    public delegate void DglPointParameteri_II(int pname, int iparam);
    public delegate void DglPointParameteriNV_II(int pname, int iparam);
    public delegate void DglPointParameteriv_IaI(int pname, int[] riparams);
    public delegate void DglPointParameteriv_IP(int pname, IntPtr riparams);
    public delegate void DglPointParameterivNV_IaI(int pname, int[] riparams);
    public delegate void DglPointParameterivNV_IP(int pname, IntPtr riparams);
    public delegate void DglPointSize_F(float size);
    public delegate int DglPollAsyncSGIX_rI(ref int markerp);
    public delegate int DglPollInstrumentsSGIX_rI(ref int marker_p);
    public delegate void DglPolygonMode_II(int face, int mode);
    public delegate void DglPolygonOffset_FF(float factor, float units);
    public delegate void DglPolygonOffsetEXT_FF(float factor, float bias);
    public delegate void DglPolygonStipple_aB(byte[] mask);
    public delegate void DglPolygonStipple_P(IntPtr mask);
    public delegate void DglPopAttrib_V();
    public delegate void DglPopClientAttrib_V();
    public delegate void DglPopMatrix_V();
    public delegate void DglPopName_V();
    public delegate void DglPrimitiveRestartIndexNV_I(int index);
    public delegate void DglPrimitiveRestartNV_V();
    public delegate void DglPrioritizeTextures_IaIaF(int n, int[] textures, float[] priorities);
    public delegate void DglPrioritizeTextures_IPP(int n, IntPtr textures, IntPtr priorities);
    public delegate void DglPrioritizeTexturesEXT_IaIaF(int n, int[] textures, float[] priorities);
    public delegate void DglPrioritizeTexturesEXT_IPP(int n, IntPtr textures, IntPtr priorities);
    public delegate void DglProgramEnvParameter4dARB_IIDDDD(int target, int index, double x, double y, double z, double w);
    public delegate void DglProgramEnvParameter4dvARB_IIaD(int target, int index, double[] rdparams);
    public delegate void DglProgramEnvParameter4dvARB_IIP(int target, int index, IntPtr rdparams);
    public delegate void DglProgramEnvParameter4fARB_IIFFFF(int target, int index, float x, float y, float z, float w);
    public delegate void DglProgramEnvParameter4fvARB_IIaF(int target, int index, float[] rfparams);
    public delegate void DglProgramEnvParameter4fvARB_IIP(int target, int index, IntPtr rfparams);
    public delegate void DglProgramLocalParameter4dARB_IIDDDD(int target, int index, double x, double y, double z, double w);
    public delegate void DglProgramLocalParameter4dvARB_IIaD(int target, int index, double[] rdparams);
    public delegate void DglProgramLocalParameter4dvARB_IIP(int target, int index, IntPtr rdparams);
    public delegate void DglProgramLocalParameter4fARB_IIFFFF(int target, int index, float x, float y, float z, float w);
    public delegate void DglProgramLocalParameter4fvARB_IIaF(int target, int index, float[] rfparams);
    public delegate void DglProgramLocalParameter4fvARB_IIP(int target, int index, IntPtr rfparams);
    public delegate void DglProgramNamedParameter4dNV_IIaBDDDD(int id, int len, byte[] name, double x, double y, double z, double w);
    public delegate void DglProgramNamedParameter4dNV_IIPDDDD(int id, int len, IntPtr name, double x, double y, double z, double w);
    public delegate void DglProgramNamedParameter4dvNV_IIaBaD(int id, int len, byte[] name, double[] v);
    public delegate void DglProgramNamedParameter4dvNV_IIPP(int id, int len, IntPtr name, IntPtr v);
    public delegate void DglProgramNamedParameter4fNV_IIaBFFFF(int id, int len, byte[] name, float x, float y, float z, float w);
    public delegate void DglProgramNamedParameter4fNV_IIPFFFF(int id, int len, IntPtr name, float x, float y, float z, float w);
    public delegate void DglProgramNamedParameter4fvNV_IIaBaF(int id, int len, byte[] name, float[] v);
    public delegate void DglProgramNamedParameter4fvNV_IIPP(int id, int len, IntPtr name, IntPtr v);
    public delegate void DglProgramParameter4dNV_IIDDDD(int target, int index, double x, double y, double z, double w);
    public delegate void DglProgramParameter4dvNV_IIaD(int target, int index, double[] v);
    public delegate void DglProgramParameter4dvNV_IIP(int target, int index, IntPtr v);
    public delegate void DglProgramParameter4fNV_IIFFFF(int target, int index, float x, float y, float z, float w);
    public delegate void DglProgramParameter4fvNV_IIaF(int target, int index, float[] v);
    public delegate void DglProgramParameter4fvNV_IIP(int target, int index, IntPtr v);
    public delegate void DglProgramParameters4dvNV_IIIaD(int target, int index, int count, double[] v);
    public delegate void DglProgramParameters4dvNV_IIIP(int target, int index, int count, IntPtr v);
    public delegate void DglProgramParameters4fvNV_IIIaF(int target, int index, int count, float[] v);
    public delegate void DglProgramParameters4fvNV_IIIP(int target, int index, int count, IntPtr v);
    
    public delegate void DglProgramParameteriARB(int program, int pname, int pvalue);
    public delegate void DglFramebuffeTextureARB(int target, int attachment, int texture, int level);
    public delegate void FramebufferTextureLayerARB(int target, int attachment, 
                                    uint texture, int level, int layer);
    public delegate void FramebufferTextureFaceARB(int target, int attachment,
                                   int texture, int level, int face);

    public delegate void DglProgramStringARB_IIIS(int target, int format, int len, String rvstring);
    public delegate void DglPushAttrib_I(int mask);
    public delegate void DglPushClientAttrib_I(int mask);
    public delegate void DglPushMatrix_V();
    public delegate void DglPushName_I(int name);
    public delegate void DglRasterPos2d_DD(double x, double y);
    public delegate void DglRasterPos2dv_aD(double[] v);
    public delegate void DglRasterPos2dv_P(IntPtr v);
    public delegate void DglRasterPos2f_FF(float x, float y);
    public delegate void DglRasterPos2fv_aF(float[] v);
    public delegate void DglRasterPos2fv_P(IntPtr v);
    public delegate void DglRasterPos2i_II(int x, int y);
    public delegate void DglRasterPos2iv_aI(int[] v);
    public delegate void DglRasterPos2iv_P(IntPtr v);
    public delegate void DglRasterPos2s_HH(short x, short y);
    public delegate void DglRasterPos2sv_aH(short[] v);
    public delegate void DglRasterPos2sv_P(IntPtr v);
    public delegate void DglRasterPos3d_DDD(double x, double y, double z);
    public delegate void DglRasterPos3dv_aD(double[] v);
    public delegate void DglRasterPos3dv_P(IntPtr v);
    public delegate void DglRasterPos3f_FFF(float x, float y, float z);
    public delegate void DglRasterPos3fv_aF(float[] v);
    public delegate void DglRasterPos3fv_P(IntPtr v);
    public delegate void DglRasterPos3i_III(int x, int y, int z);
    public delegate void DglRasterPos3iv_aI(int[] v);
    public delegate void DglRasterPos3iv_P(IntPtr v);
    public delegate void DglRasterPos3s_HHH(short x, short y, short z);
    public delegate void DglRasterPos3sv_aH(short[] v);
    public delegate void DglRasterPos3sv_P(IntPtr v);
    public delegate void DglRasterPos4d_DDDD(double x, double y, double z, double w);
    public delegate void DglRasterPos4dv_aD(double[] v);
    public delegate void DglRasterPos4dv_P(IntPtr v);
    public delegate void DglRasterPos4f_FFFF(float x, float y, float z, float w);
    public delegate void DglRasterPos4fv_aF(float[] v);
    public delegate void DglRasterPos4fv_P(IntPtr v);
    public delegate void DglRasterPos4i_IIII(int x, int y, int z, int w);
    public delegate void DglRasterPos4iv_aI(int[] v);
    public delegate void DglRasterPos4iv_P(IntPtr v);
    public delegate void DglRasterPos4s_HHHH(short x, short y, short z, short w);
    public delegate void DglRasterPos4sv_aH(short[] v);
    public delegate void DglRasterPos4sv_P(IntPtr v);
    public delegate void DglReadBuffer_I(int mode);
    public delegate void DglReadInstrumentsSGIX_I(int marker);
    public delegate void DglReadPixels_IIIIIIaB(int x, int y, int width, int height, int format, int itype, byte[] pixels);
    public delegate void DglReadPixels_IIIIIIaH(int x, int y, int width, int height, int format, int itype, short[] pixels);
    public delegate void DglReadPixels_IIIIIIaI(int x, int y, int width, int height, int format, int itype, int[] pixels);
    public delegate void DglReadPixels_IIIIIIaF(int x, int y, int width, int height, int format, int itype, float[] pixels);
    public delegate void DglReadPixels_IIIIIIP(int x, int y, int width, int height, int format, int itype, IntPtr pixels);
    public delegate void DglRectd_DDDD(double x1, double y1, double x2, double y2);
    public delegate void DglRectdv_aDaD(double[] v1, double[] v2);
    public delegate void DglRectdv_PP(IntPtr v1, IntPtr v2);
    public delegate void DglRectf_FFFF(float x1, float y1, float x2, float y2);
    public delegate void DglRectfv_aFaF(float[] v1, float[] v2);
    public delegate void DglRectfv_PP(IntPtr v1, IntPtr v2);
    public delegate void DglRecti_IIII(int x1, int y1, int x2, int y2);
    public delegate void DglRectiv_aIaI(int[] v1, int[] v2);
    public delegate void DglRectiv_PP(IntPtr v1, IntPtr v2);
    public delegate void DglRects_HHHH(short x1, short y1, short x2, short y2);
    public delegate void DglRectsv_aHaH(short[] v1, short[] v2);
    public delegate void DglRectsv_PP(IntPtr v1, IntPtr v2);
    public delegate void DglReferencePlaneSGIX_aD(double[] equation);
    public delegate void DglReferencePlaneSGIX_P(IntPtr equation);
    public delegate void DglRenderbufferStorageEXT_IIII(int target, int internalformat, int width, int height);
    public delegate int DglRenderMode_I(int mode);
    public delegate void DglReplacementCodePointerSUN_IIrP(int itype, int stride, ref IntPtr pointer);
    public delegate void DglReplacementCodeubSUN_B(byte code);
    public delegate void DglReplacementCodeubvSUN_aB(byte[] code);
    public delegate void DglReplacementCodeubvSUN_P(IntPtr code);
    public delegate void DglReplacementCodeuiColor3fVertex3fSUN_IFFFFFF(int rc, float r, float g, float b, float x, float y, float z);
    public delegate void DglReplacementCodeuiColor3fVertex3fvSUN_rIaFaF(ref int rc, float[] c, float[] v);
    public delegate void DglReplacementCodeuiColor3fVertex3fvSUN_rIPP(ref int rc, IntPtr c, IntPtr v);
    public delegate void DglReplacementCodeuiColor4fNormal3fVertex3fSUN_IFFFFFFFFFF(int rc, float r, float g, float b, float a, float nx, float ny, float nz, float x, float y, float z);
    public delegate void DglReplacementCodeuiColor4fNormal3fVertex3fvSUN_rIaFaFaF(ref int rc, float[] c, float[] n, float[] v);
    public delegate void DglReplacementCodeuiColor4fNormal3fVertex3fvSUN_rIPPP(ref int rc, IntPtr c, IntPtr n, IntPtr v);
    public delegate void DglReplacementCodeuiColor4ubVertex3fSUN_IBBBBFFF(int rc, byte r, byte g, byte b, byte a, float x, float y, float z);
    public delegate void DglReplacementCodeuiColor4ubVertex3fvSUN_rIaBaF(ref int rc, byte[] c, float[] v);
    public delegate void DglReplacementCodeuiColor4ubVertex3fvSUN_rIPP(ref int rc, IntPtr c, IntPtr v);
    public delegate void DglReplacementCodeuiNormal3fVertex3fSUN_IFFFFFF(int rc, float nx, float ny, float nz, float x, float y, float z);
    public delegate void DglReplacementCodeuiNormal3fVertex3fvSUN_rIaFaF(ref int rc, float[] n, float[] v);
    public delegate void DglReplacementCodeuiNormal3fVertex3fvSUN_rIPP(ref int rc, IntPtr n, IntPtr v);
    public delegate void DglReplacementCodeuiSUN_I(int code);
    public delegate void DglReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN_IFFFFFFFFFFFF(int rc, float s, float t, float r, float g, float b, float a, float nx, float ny, float nz, float x, float y, float z);
    public delegate void DglReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN_rIaFaFaFaF(ref int rc, float[] tc, float[] c, float[] n, float[] v);
    public delegate void DglReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN_rIPPPP(ref int rc, IntPtr tc, IntPtr c, IntPtr n, IntPtr v);
    public delegate void DglReplacementCodeuiTexCoord2fNormal3fVertex3fSUN_IFFFFFFFF(int rc, float s, float t, float nx, float ny, float nz, float x, float y, float z);
    public delegate void DglReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN_rIaFaFaF(ref int rc, float[] tc, float[] n, float[] v);
    public delegate void DglReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN_rIPPP(ref int rc, IntPtr tc, IntPtr n, IntPtr v);
    public delegate void DglReplacementCodeuiTexCoord2fVertex3fSUN_IFFFFF(int rc, float s, float t, float x, float y, float z);
    public delegate void DglReplacementCodeuiTexCoord2fVertex3fvSUN_rIaFaF(ref int rc, float[] tc, float[] v);
    public delegate void DglReplacementCodeuiTexCoord2fVertex3fvSUN_rIPP(ref int rc, IntPtr tc, IntPtr v);
    public delegate void DglReplacementCodeuiVertex3fSUN_IFFF(int rc, float x, float y, float z);
    public delegate void DglReplacementCodeuiVertex3fvSUN_rIaF(ref int rc, float[] v);
    public delegate void DglReplacementCodeuiVertex3fvSUN_rIP(ref int rc, IntPtr v);
    public delegate void DglReplacementCodeuivSUN_rI(ref int code);
    public delegate void DglReplacementCodeusSUN_H(short code);
    public delegate void DglReplacementCodeusvSUN_rH(ref short code);
    public delegate void DglRequestResidentProgramsNV_IaI(int n, int[] programs);
    public delegate void DglRequestResidentProgramsNV_IP(int n, IntPtr programs);
    public delegate void DglResetHistogram_I(int target);
    public delegate void DglResetHistogramEXT_I(int target);
    public delegate void DglResetMinmax_I(int target);
    public delegate void DglResetMinmaxEXT_I(int target);
    public delegate void DglResizeBuffersMESA_V();
    public delegate void DglRotated_DDDD(double angle, double x, double y, double z);
    public delegate void DglRotatef_FFFF(float angle, float x, float y, float z);
    public delegate void DglSampleCoverage_FB(float value, byte invert);
    public delegate void DglSampleCoverageARB_FB(float value, byte invert);
    public delegate void DglSampleMapATI_III(int dst, int interp, int swizzle);
    public delegate void DglSampleMaskEXT_FB(float value, byte invert);
    public delegate void DglSampleMaskSGIS_FB(float value, byte invert);
    public delegate void DglSamplePatternEXT_I(int pattern);
    public delegate void DglSamplePatternSGIS_I(int pattern);
    public delegate void DglScaled_DDD(double x, double y, double z);
    public delegate void DglScalef_FFF(float x, float y, float z);
    public delegate void DglScissor_IIII(int x, int y, int width, int height);
    public delegate void DglSecondaryColor3b_BBB(byte red, byte green, byte blue);
    public delegate void DglSecondaryColor3bEXT_BBB(byte red, byte green, byte blue);
    public delegate void DglSecondaryColor3bv_aB(byte[] v);
    public delegate void DglSecondaryColor3bv_P(IntPtr v);
    public delegate void DglSecondaryColor3bvEXT_aB(byte[] v);
    public delegate void DglSecondaryColor3bvEXT_P(IntPtr v);
    public delegate void DglSecondaryColor3d_DDD(double red, double green, double blue);
    public delegate void DglSecondaryColor3dEXT_DDD(double red, double green, double blue);
    public delegate void DglSecondaryColor3dv_aD(double[] v);
    public delegate void DglSecondaryColor3dv_P(IntPtr v);
    public delegate void DglSecondaryColor3dvEXT_aD(double[] v);
    public delegate void DglSecondaryColor3dvEXT_P(IntPtr v);
    public delegate void DglSecondaryColor3f_FFF(float red, float green, float blue);
    public delegate void DglSecondaryColor3fEXT_FFF(float red, float green, float blue);
    public delegate void DglSecondaryColor3fv_aF(float[] v);
    public delegate void DglSecondaryColor3fv_P(IntPtr v);
    public delegate void DglSecondaryColor3fvEXT_aF(float[] v);
    public delegate void DglSecondaryColor3fvEXT_P(IntPtr v);
    public delegate void DglSecondaryColor3hNV_HHH(short red, short green, short blue);
    public delegate void DglSecondaryColor3hvNV_aH(short[] v);
    public delegate void DglSecondaryColor3hvNV_P(IntPtr v);
    public delegate void DglSecondaryColor3i_III(int red, int green, int blue);
    public delegate void DglSecondaryColor3iEXT_III(int red, int green, int blue);
    public delegate void DglSecondaryColor3iv_aI(int[] v);
    public delegate void DglSecondaryColor3iv_P(IntPtr v);
    public delegate void DglSecondaryColor3ivEXT_aI(int[] v);
    public delegate void DglSecondaryColor3ivEXT_P(IntPtr v);
    public delegate void DglSecondaryColor3s_HHH(short red, short green, short blue);
    public delegate void DglSecondaryColor3sEXT_HHH(short red, short green, short blue);
    public delegate void DglSecondaryColor3sv_aH(short[] v);
    public delegate void DglSecondaryColor3sv_P(IntPtr v);
    public delegate void DglSecondaryColor3svEXT_aH(short[] v);
    public delegate void DglSecondaryColor3svEXT_P(IntPtr v);
    public delegate void DglSecondaryColor3ub_BBB(byte red, byte green, byte blue);
    public delegate void DglSecondaryColor3ubEXT_BBB(byte red, byte green, byte blue);
    public delegate void DglSecondaryColor3ubv_aB(byte[] v);
    public delegate void DglSecondaryColor3ubv_P(IntPtr v);
    public delegate void DglSecondaryColor3ubvEXT_aB(byte[] v);
    public delegate void DglSecondaryColor3ubvEXT_P(IntPtr v);
    public delegate void DglSecondaryColor3ui_III(int red, int green, int blue);
    public delegate void DglSecondaryColor3uiEXT_III(int red, int green, int blue);
    public delegate void DglSecondaryColor3uiv_aI(int[] v);
    public delegate void DglSecondaryColor3uiv_P(IntPtr v);
    public delegate void DglSecondaryColor3uivEXT_aI(int[] v);
    public delegate void DglSecondaryColor3uivEXT_P(IntPtr v);
    public delegate void DglSecondaryColor3us_HHH(short red, short green, short blue);
    public delegate void DglSecondaryColor3usEXT_HHH(short red, short green, short blue);
    public delegate void DglSecondaryColor3usv_aH(short[] v);
    public delegate void DglSecondaryColor3usv_P(IntPtr v);
    public delegate void DglSecondaryColor3usvEXT_aH(short[] v);
    public delegate void DglSecondaryColor3usvEXT_P(IntPtr v);
    public delegate void DglSecondaryColorPointer_IIIaB(int size, int itype, int stride, byte[] pointer);
    public delegate void DglSecondaryColorPointer_IIIaH(int size, int itype, int stride, short[] pointer);
    public delegate void DglSecondaryColorPointer_IIIaI(int size, int itype, int stride, int[] pointer);
    public delegate void DglSecondaryColorPointer_IIIaF(int size, int itype, int stride, float[] pointer);
    public delegate void DglSecondaryColorPointer_IIIaD(int size, int itype, int stride, double[] pointer);
    public delegate void DglSecondaryColorPointer_IIIP(int size, int itype, int stride, IntPtr pointer);
    public delegate void DglSecondaryColorPointerEXT_IIIaB(int size, int itype, int stride, byte[] pointer);
    public delegate void DglSecondaryColorPointerEXT_IIIaH(int size, int itype, int stride, short[] pointer);
    public delegate void DglSecondaryColorPointerEXT_IIIaI(int size, int itype, int stride, int[] pointer);
    public delegate void DglSecondaryColorPointerEXT_IIIaF(int size, int itype, int stride, float[] pointer);
    public delegate void DglSecondaryColorPointerEXT_IIIaD(int size, int itype, int stride, double[] pointer);
    public delegate void DglSecondaryColorPointerEXT_IIIP(int size, int itype, int stride, IntPtr pointer);
    public delegate void DglSecondaryColorPointerListIBM_IIIrPI(int size, int itype, int stride, ref IntPtr pointer, int ptrstride);
    public delegate void DglSelectBuffer_IaI(int size, int[] buffer);
    public delegate void DglSelectBuffer_IP(int size, IntPtr buffer);
    public delegate void DglSeparableFilter2D_IIIIIIaBaB(int target, int internalformat, int width, int height, int format, int itype, byte[] row, byte[] column);
    public delegate void DglSeparableFilter2D_IIIIIIaHaH(int target, int internalformat, int width, int height, int format, int itype, short[] row, short[] column);
    public delegate void DglSeparableFilter2D_IIIIIIaIaI(int target, int internalformat, int width, int height, int format, int itype, int[] row, int[] column);
    public delegate void DglSeparableFilter2D_IIIIIIaFaF(int target, int internalformat, int width, int height, int format, int itype, float[] row, float[] column);
    public delegate void DglSeparableFilter2D_IIIIIIPP(int target, int internalformat, int width, int height, int format, int itype, IntPtr row, IntPtr column);
    public delegate void DglSeparableFilter2DEXT_IIIIIIaBaB(int target, int internalformat, int width, int height, int format, int itype, byte[] row, byte[] column);
    public delegate void DglSeparableFilter2DEXT_IIIIIIaHaH(int target, int internalformat, int width, int height, int format, int itype, short[] row, short[] column);
    public delegate void DglSeparableFilter2DEXT_IIIIIIaIaI(int target, int internalformat, int width, int height, int format, int itype, int[] row, int[] column);
    public delegate void DglSeparableFilter2DEXT_IIIIIIaFaF(int target, int internalformat, int width, int height, int format, int itype, float[] row, float[] column);
    public delegate void DglSeparableFilter2DEXT_IIIIIIPP(int target, int internalformat, int width, int height, int format, int itype, IntPtr row, IntPtr column);
    public delegate void DglSetFenceAPPLE_I(int fence);
    public delegate void DglSetFenceNV_II(int fence, int condition);
    public delegate void DglSetFragmentShaderConstantATI_IaF(int dst, float[] value);
    public delegate void DglSetFragmentShaderConstantATI_IP(int dst, IntPtr value);
    public delegate void DglSetInvariantEXT_IIaB(int id, int itype, byte[] addr);
    public delegate void DglSetInvariantEXT_IIaH(int id, int itype, short[] addr);
    public delegate void DglSetInvariantEXT_IIaI(int id, int itype, int[] addr);
    public delegate void DglSetInvariantEXT_IIaF(int id, int itype, float[] addr);
    public delegate void DglSetInvariantEXT_IIaD(int id, int itype, double[] addr);
    public delegate void DglSetInvariantEXT_IIP(int id, int itype, IntPtr addr);
    public delegate void DglSetLocalConstantEXT_IIaB(int id, int itype, byte[] addr);
    public delegate void DglSetLocalConstantEXT_IIaH(int id, int itype, short[] addr);
    public delegate void DglSetLocalConstantEXT_IIaI(int id, int itype, int[] addr);
    public delegate void DglSetLocalConstantEXT_IIaF(int id, int itype, float[] addr);
    public delegate void DglSetLocalConstantEXT_IIaD(int id, int itype, double[] addr);
    public delegate void DglSetLocalConstantEXT_IIP(int id, int itype, IntPtr addr);
    public delegate void DglShadeModel_I(int mode);
    public delegate void DglShaderOp1EXT_III(int op, int res, int arg1);
    public delegate void DglShaderOp2EXT_IIII(int op, int res, int arg1, int arg2);
    public delegate void DglShaderOp3EXT_IIIII(int op, int res, int arg1, int arg2, int arg3);
    public delegate void DglShaderSource_IIaSaI(int shader, int count, String[] textLines, int[] lengths);
    public delegate void DglShaderSource_IIaSP(int shader, int count, String[] textLines, IntPtr lengths);
    public delegate void DglShaderSource_IIPaI(int shader, int count, IntPtr textLines, int[] lengths);
    public delegate void DglShaderSource_IIPP(int shader, int count, IntPtr textLines, IntPtr lengths);
    public delegate void DglShaderSourceARB_IIaSaI(int shaderObj, int count, String[] textLines, int[] lengths);
    public delegate void DglShaderSourceARB_IIaSP(int shaderObj, int count, String[] textLines, IntPtr lengths);
    public delegate void DglShaderSourceARB_IIPaI(int shaderObj, int count, IntPtr textLines, int[] lengths);
    public delegate void DglShaderSourceARB_IIPP(int shaderObj, int count, IntPtr textLines, IntPtr lengths);
    public delegate void DglSharpenTexFuncSGIS_IIaF(int target, int n, float[] points);
    public delegate void DglSharpenTexFuncSGIS_IIP(int target, int n, IntPtr points);
    public delegate void DglSpriteParameterfSGIX_IF(int pname, float fparam);
    public delegate void DglSpriteParameterfvSGIX_IaF(int pname, float[] rfparams);
    public delegate void DglSpriteParameterfvSGIX_IP(int pname, IntPtr rfparams);
    public delegate void DglSpriteParameteriSGIX_II(int pname, int iparam);
    public delegate void DglSpriteParameterivSGIX_IaI(int pname, int[] riparams);
    public delegate void DglSpriteParameterivSGIX_IP(int pname, IntPtr riparams);
    public delegate void DglStartInstrumentsSGIX_V();
    public delegate void DglStencilFunc_III(int func, int iref, int mask);
    public delegate void DglStencilFuncSeparate_IIII(int frontfunc, int backfunc, int iref, int mask);
    public delegate void DglStencilFuncSeparateATI_IIII(int frontfunc, int backfunc, int iref, int mask);
    public delegate void DglStencilMask_I(int mask);
    public delegate void DglStencilMaskSeparate_II(int face, int mask);
    public delegate void DglStencilOp_III(int fail, int zfail, int zpass);
    public delegate void DglStencilOpSeparate_IIII(int face, int sfail, int dpfail, int dppass);
    public delegate void DglStencilOpSeparateATI_IIII(int face, int sfail, int dpfail, int dppass);
    public delegate void DglStopInstrumentsSGIX_I(int marker);
    public delegate void DglStringMarkerGREMEDY_IaB(int len, byte[] rvstring);
    public delegate void DglStringMarkerGREMEDY_IP(int len, IntPtr rvstring);
    public delegate void DglSwizzleEXT_IIIIII(int res, int iin, int outX, int outY, int outZ, int outW);
    public delegate void DglTagSampleBufferSGIX_V();
    public delegate void DglTangent3bEXT_BBB(byte tx, byte ty, byte tz);
    public delegate void DglTangent3bvEXT_aB(byte[] v);
    public delegate void DglTangent3bvEXT_P(IntPtr v);
    public delegate void DglTangent3dEXT_DDD(double tx, double ty, double tz);
    public delegate void DglTangent3dvEXT_aD(double[] v);
    public delegate void DglTangent3dvEXT_P(IntPtr v);
    public delegate void DglTangent3fEXT_FFF(float tx, float ty, float tz);
    public delegate void DglTangent3fvEXT_aF(float[] v);
    public delegate void DglTangent3fvEXT_P(IntPtr v);
    public delegate void DglTangent3iEXT_III(int tx, int ty, int tz);
    public delegate void DglTangent3ivEXT_aI(int[] v);
    public delegate void DglTangent3ivEXT_P(IntPtr v);
    public delegate void DglTangent3sEXT_HHH(short tx, short ty, short tz);
    public delegate void DglTangent3svEXT_aH(short[] v);
    public delegate void DglTangent3svEXT_P(IntPtr v);
    public delegate void DglTangentPointerEXT_IIaB(int itype, int stride, byte[] pointer);
    public delegate void DglTangentPointerEXT_IIaH(int itype, int stride, short[] pointer);
    public delegate void DglTangentPointerEXT_IIaI(int itype, int stride, int[] pointer);
    public delegate void DglTangentPointerEXT_IIaF(int itype, int stride, float[] pointer);
    public delegate void DglTangentPointerEXT_IIaD(int itype, int stride, double[] pointer);
    public delegate void DglTangentPointerEXT_IIP(int itype, int stride, IntPtr pointer);
    public delegate void DglTbufferMask3DFX_I(int mask);
    public delegate byte DglTestFenceAPPLE_I(int fence);
    public delegate byte DglTestFenceNV_I(int fence);
    public delegate byte DglTestObjectAPPLE_II(int iobject, int name);
    public delegate void DglTexBumpParameterfvATI_IaF(int pname, float[] rfparam);
    public delegate void DglTexBumpParameterfvATI_IP(int pname, IntPtr rfparam);
    public delegate void DglTexBumpParameterivATI_IaI(int pname, int[] riparam);
    public delegate void DglTexBumpParameterivATI_IP(int pname, IntPtr riparam);
    public delegate void DglTexCoord1d_D(double s);
    public delegate void DglTexCoord1dv_aD(double[] v);
    public delegate void DglTexCoord1dv_P(IntPtr v);
    public delegate void DglTexCoord1f_F(float s);
    public delegate void DglTexCoord1fv_aF(float[] v);
    public delegate void DglTexCoord1fv_P(IntPtr v);
    public delegate void DglTexCoord1hNV_H(short s);
    public delegate void DglTexCoord1hvNV_aH(short[] v);
    public delegate void DglTexCoord1hvNV_P(IntPtr v);
    public delegate void DglTexCoord1i_I(int s);
    public delegate void DglTexCoord1iv_aI(int[] v);
    public delegate void DglTexCoord1iv_P(IntPtr v);
    public delegate void DglTexCoord1s_H(short s);
    public delegate void DglTexCoord1sv_aH(short[] v);
    public delegate void DglTexCoord1sv_P(IntPtr v);
    public delegate void DglTexCoord2d_DD(double s, double t);
    public delegate void DglTexCoord2dv_aD(double[] v);
    public delegate void DglTexCoord2dv_P(IntPtr v);
    public delegate void DglTexCoord2f_FF(float s, float t);
    public delegate void DglTexCoord2fColor3fVertex3fSUN_FFFFFFFF(float s, float t, float r, float g, float b, float x, float y, float z);
    public delegate void DglTexCoord2fColor3fVertex3fvSUN_aFaFaF(float[] tc, float[] c, float[] v);
    public delegate void DglTexCoord2fColor3fVertex3fvSUN_PPP(IntPtr tc, IntPtr c, IntPtr v);
    public delegate void DglTexCoord2fColor4fNormal3fVertex3fSUN_FFFFFFFFFFFF(float s, float t, float r, float g, float b, float a, float nx, float ny, float nz, float x, float y, float z);
    public delegate void DglTexCoord2fColor4fNormal3fVertex3fvSUN_aFaFaFaF(float[] tc, float[] c, float[] n, float[] v);
    public delegate void DglTexCoord2fColor4fNormal3fVertex3fvSUN_aFaFaFP(float[] tc, float[] c, float[] n, IntPtr v);
    public delegate void DglTexCoord2fColor4fNormal3fVertex3fvSUN_aFaFPaF(float[] tc, float[] c, IntPtr n, float[] v);
    public delegate void DglTexCoord2fColor4fNormal3fVertex3fvSUN_aFaFPP(float[] tc, float[] c, IntPtr n, IntPtr v);
    public delegate void DglTexCoord2fColor4fNormal3fVertex3fvSUN_aFPaFaF(float[] tc, IntPtr c, float[] n, float[] v);
    public delegate void DglTexCoord2fColor4fNormal3fVertex3fvSUN_aFPaFP(float[] tc, IntPtr c, float[] n, IntPtr v);
    public delegate void DglTexCoord2fColor4fNormal3fVertex3fvSUN_aFPPaF(float[] tc, IntPtr c, IntPtr n, float[] v);
    public delegate void DglTexCoord2fColor4fNormal3fVertex3fvSUN_aFPPP(float[] tc, IntPtr c, IntPtr n, IntPtr v);
    public delegate void DglTexCoord2fColor4fNormal3fVertex3fvSUN_PaFaFaF(IntPtr tc, float[] c, float[] n, float[] v);
    public delegate void DglTexCoord2fColor4fNormal3fVertex3fvSUN_PaFaFP(IntPtr tc, float[] c, float[] n, IntPtr v);
    public delegate void DglTexCoord2fColor4fNormal3fVertex3fvSUN_PaFPaF(IntPtr tc, float[] c, IntPtr n, float[] v);
    public delegate void DglTexCoord2fColor4fNormal3fVertex3fvSUN_PaFPP(IntPtr tc, float[] c, IntPtr n, IntPtr v);
    public delegate void DglTexCoord2fColor4fNormal3fVertex3fvSUN_PPaFaF(IntPtr tc, IntPtr c, float[] n, float[] v);
    public delegate void DglTexCoord2fColor4fNormal3fVertex3fvSUN_PPaFP(IntPtr tc, IntPtr c, float[] n, IntPtr v);
    public delegate void DglTexCoord2fColor4fNormal3fVertex3fvSUN_PPPaF(IntPtr tc, IntPtr c, IntPtr n, float[] v);
    public delegate void DglTexCoord2fColor4fNormal3fVertex3fvSUN_PPPP(IntPtr tc, IntPtr c, IntPtr n, IntPtr v);
    public delegate void DglTexCoord2fColor4ubVertex3fSUN_FFBBBBFFF(float s, float t, byte r, byte g, byte b, byte a, float x, float y, float z);
    public delegate void DglTexCoord2fColor4ubVertex3fvSUN_aFaBaF(float[] tc, byte[] c, float[] v);
    public delegate void DglTexCoord2fColor4ubVertex3fvSUN_aFaBP(float[] tc, byte[] c, IntPtr v);
    public delegate void DglTexCoord2fColor4ubVertex3fvSUN_aFPaF(float[] tc, IntPtr c, float[] v);
    public delegate void DglTexCoord2fColor4ubVertex3fvSUN_aFPP(float[] tc, IntPtr c, IntPtr v);
    public delegate void DglTexCoord2fColor4ubVertex3fvSUN_PaBaF(IntPtr tc, byte[] c, float[] v);
    public delegate void DglTexCoord2fColor4ubVertex3fvSUN_PaBP(IntPtr tc, byte[] c, IntPtr v);
    public delegate void DglTexCoord2fColor4ubVertex3fvSUN_PPaF(IntPtr tc, IntPtr c, float[] v);
    public delegate void DglTexCoord2fColor4ubVertex3fvSUN_PPP(IntPtr tc, IntPtr c, IntPtr v);
    public delegate void DglTexCoord2fNormal3fVertex3fSUN_FFFFFFFF(float s, float t, float nx, float ny, float nz, float x, float y, float z);
    public delegate void DglTexCoord2fNormal3fVertex3fvSUN_aFaFaF(float[] tc, float[] n, float[] v);
    public delegate void DglTexCoord2fNormal3fVertex3fvSUN_aFaFP(float[] tc, float[] n, IntPtr v);
    public delegate void DglTexCoord2fNormal3fVertex3fvSUN_aFPaF(float[] tc, IntPtr n, float[] v);
    public delegate void DglTexCoord2fNormal3fVertex3fvSUN_aFPP(float[] tc, IntPtr n, IntPtr v);
    public delegate void DglTexCoord2fNormal3fVertex3fvSUN_PaFaF(IntPtr tc, float[] n, float[] v);
    public delegate void DglTexCoord2fNormal3fVertex3fvSUN_PaFP(IntPtr tc, float[] n, IntPtr v);
    public delegate void DglTexCoord2fNormal3fVertex3fvSUN_PPaF(IntPtr tc, IntPtr n, float[] v);
    public delegate void DglTexCoord2fNormal3fVertex3fvSUN_PPP(IntPtr tc, IntPtr n, IntPtr v);
    public delegate void DglTexCoord2fv_aF(float[] v);
    public delegate void DglTexCoord2fv_P(IntPtr v);
    public delegate void DglTexCoord2fVertex3fSUN_FFFFF(float s, float t, float x, float y, float z);
    public delegate void DglTexCoord2fVertex3fvSUN_aFaF(float[] tc, float[] v);
    public delegate void DglTexCoord2fVertex3fvSUN_aFP(float[] tc, IntPtr v);
    public delegate void DglTexCoord2fVertex3fvSUN_PaF(IntPtr tc, float[] v);
    public delegate void DglTexCoord2fVertex3fvSUN_PP(IntPtr tc, IntPtr v);
    public delegate void DglTexCoord2hNV_HH(short s, short t);
    public delegate void DglTexCoord2hvNV_aH(short[] v);
    public delegate void DglTexCoord2hvNV_P(IntPtr v);
    public delegate void DglTexCoord2i_II(int s, int t);
    public delegate void DglTexCoord2iv_aI(int[] v);
    public delegate void DglTexCoord2iv_P(IntPtr v);
    public delegate void DglTexCoord2s_HH(short s, short t);
    public delegate void DglTexCoord2sv_aH(short[] v);
    public delegate void DglTexCoord2sv_P(IntPtr v);
    public delegate void DglTexCoord3d_DDD(double s, double t, double r);
    public delegate void DglTexCoord3dv_aD(double[] v);
    public delegate void DglTexCoord3dv_P(IntPtr v);
    public delegate void DglTexCoord3f_FFF(float s, float t, float r);
    public delegate void DglTexCoord3fv_aF(float[] v);
    public delegate void DglTexCoord3fv_P(IntPtr v);
    public delegate void DglTexCoord3hNV_HHH(short s, short t, short r);
    public delegate void DglTexCoord3hvNV_aH(short[] v);
    public delegate void DglTexCoord3hvNV_P(IntPtr v);
    public delegate void DglTexCoord3i_III(int s, int t, int r);
    public delegate void DglTexCoord3iv_aI(int[] v);
    public delegate void DglTexCoord3iv_P(IntPtr v);
    public delegate void DglTexCoord3s_HHH(short s, short t, short r);
    public delegate void DglTexCoord3sv_aH(short[] v);
    public delegate void DglTexCoord3sv_P(IntPtr v);
    public delegate void DglTexCoord4d_DDDD(double s, double t, double r, double q);
    public delegate void DglTexCoord4dv_aD(double[] v);
    public delegate void DglTexCoord4dv_P(IntPtr v);
    public delegate void DglTexCoord4f_FFFF(float s, float t, float r, float q);
    public delegate void DglTexCoord4fColor4fNormal3fVertex4fSUN_FFFFFFFFFFFFFFF(float s, float t, float p, float q, float r, float g, float b, float a, float nx, float ny, float nz, float x, float y, float z, float w);
    public delegate void DglTexCoord4fColor4fNormal3fVertex4fvSUN_aFaFaFaF(float[] tc, float[] c, float[] n, float[] v);
    public delegate void DglTexCoord4fColor4fNormal3fVertex4fvSUN_aFaFaFP(float[] tc, float[] c, float[] n, IntPtr v);
    public delegate void DglTexCoord4fColor4fNormal3fVertex4fvSUN_aFaFPaF(float[] tc, float[] c, IntPtr n, float[] v);
    public delegate void DglTexCoord4fColor4fNormal3fVertex4fvSUN_aFaFPP(float[] tc, float[] c, IntPtr n, IntPtr v);
    public delegate void DglTexCoord4fColor4fNormal3fVertex4fvSUN_aFPaFaF(float[] tc, IntPtr c, float[] n, float[] v);
    public delegate void DglTexCoord4fColor4fNormal3fVertex4fvSUN_aFPaFP(float[] tc, IntPtr c, float[] n, IntPtr v);
    public delegate void DglTexCoord4fColor4fNormal3fVertex4fvSUN_aFPPaF(float[] tc, IntPtr c, IntPtr n, float[] v);
    public delegate void DglTexCoord4fColor4fNormal3fVertex4fvSUN_aFPPP(float[] tc, IntPtr c, IntPtr n, IntPtr v);
    public delegate void DglTexCoord4fColor4fNormal3fVertex4fvSUN_PaFaFaF(IntPtr tc, float[] c, float[] n, float[] v);
    public delegate void DglTexCoord4fColor4fNormal3fVertex4fvSUN_PaFaFP(IntPtr tc, float[] c, float[] n, IntPtr v);
    public delegate void DglTexCoord4fColor4fNormal3fVertex4fvSUN_PaFPaF(IntPtr tc, float[] c, IntPtr n, float[] v);
    public delegate void DglTexCoord4fColor4fNormal3fVertex4fvSUN_PaFPP(IntPtr tc, float[] c, IntPtr n, IntPtr v);
    public delegate void DglTexCoord4fColor4fNormal3fVertex4fvSUN_PPaFaF(IntPtr tc, IntPtr c, float[] n, float[] v);
    public delegate void DglTexCoord4fColor4fNormal3fVertex4fvSUN_PPaFP(IntPtr tc, IntPtr c, float[] n, IntPtr v);
    public delegate void DglTexCoord4fColor4fNormal3fVertex4fvSUN_PPPaF(IntPtr tc, IntPtr c, IntPtr n, float[] v);
    public delegate void DglTexCoord4fColor4fNormal3fVertex4fvSUN_PPPP(IntPtr tc, IntPtr c, IntPtr n, IntPtr v);
    public delegate void DglTexCoord4fv_aF(float[] v);
    public delegate void DglTexCoord4fv_P(IntPtr v);
    public delegate void DglTexCoord4fVertex4fSUN_FFFFFFFF(float s, float t, float p, float q, float x, float y, float z, float w);
    public delegate void DglTexCoord4fVertex4fvSUN_aFaF(float[] tc, float[] v);
    public delegate void DglTexCoord4fVertex4fvSUN_aFP(float[] tc, IntPtr v);
    public delegate void DglTexCoord4fVertex4fvSUN_PaF(IntPtr tc, float[] v);
    public delegate void DglTexCoord4fVertex4fvSUN_PP(IntPtr tc, IntPtr v);
    public delegate void DglTexCoord4hNV_HHHH(short s, short t, short r, short q);
    public delegate void DglTexCoord4hvNV_aH(short[] v);
    public delegate void DglTexCoord4hvNV_P(IntPtr v);
    public delegate void DglTexCoord4i_IIII(int s, int t, int r, int q);
    public delegate void DglTexCoord4iv_aI(int[] v);
    public delegate void DglTexCoord4iv_P(IntPtr v);
    public delegate void DglTexCoord4s_HHHH(short s, short t, short r, short q);
    public delegate void DglTexCoord4sv_aH(short[] v);
    public delegate void DglTexCoord4sv_P(IntPtr v);
    public delegate void DglTexCoordPointer_IIIaB(int size, int itype, int stride, byte[] pointer);
    public delegate void DglTexCoordPointer_IIIaH(int size, int itype, int stride, short[] pointer);
    public delegate void DglTexCoordPointer_IIIaI(int size, int itype, int stride, int[] pointer);
    public delegate void DglTexCoordPointer_IIIaF(int size, int itype, int stride, float[] pointer);
    public delegate void DglTexCoordPointer_IIIaD(int size, int itype, int stride, double[] pointer);
    public delegate void DglTexCoordPointer_IIIP(int size, int itype, int stride, IntPtr pointer);
    public delegate void DglTexCoordPointerEXT_IIIIaB(int size, int itype, int stride, int count, byte[] pointer);
    public delegate void DglTexCoordPointerEXT_IIIIaH(int size, int itype, int stride, int count, short[] pointer);
    public delegate void DglTexCoordPointerEXT_IIIIaI(int size, int itype, int stride, int count, int[] pointer);
    public delegate void DglTexCoordPointerEXT_IIIIaF(int size, int itype, int stride, int count, float[] pointer);
    public delegate void DglTexCoordPointerEXT_IIIIaD(int size, int itype, int stride, int count, double[] pointer);
    public delegate void DglTexCoordPointerEXT_IIIIP(int size, int itype, int stride, int count, IntPtr pointer);
    public delegate void DglTexCoordPointerListIBM_IIIrPI(int size, int itype, int stride, ref IntPtr pointer, int ptrstride);
    public delegate void DglTexCoordPointervINTEL_IIrP(int size, int itype, ref IntPtr pointer);
    public delegate void DglTexEnvf_IIF(int target, int pname, float param);
    public delegate void DglTexEnvfv_IIaF(int target, int pname, float[] rfparams);
    public delegate void DglTexEnvfv_IIP(int target, int pname, IntPtr rfparams);
    public delegate void DglTexEnvi_III(int target, int pname, int iparam);
    public delegate void DglTexEnviv_IIaI(int target, int pname, int[] riparams);
    public delegate void DglTexEnviv_IIP(int target, int pname, IntPtr riparams);
    public delegate void DglTexFilterFuncSGIS_IIIaF(int target, int filter, int n, float[] weights);
    public delegate void DglTexFilterFuncSGIS_IIIP(int target, int filter, int n, IntPtr weights);
    public delegate void DglTexGend_IID(int coord, int pname, double dparam);
    public delegate void DglTexGendv_IIaD(int coord, int pname, double[] rdparams);
    public delegate void DglTexGendv_IIP(int coord, int pname, IntPtr rdparams);
    public delegate void DglTexGenf_IIF(int coord, int pname, float fparam);
    public delegate void DglTexGenfv_IIaF(int coord, int pname, float[] rfparams);
    public delegate void DglTexGenfv_IIP(int coord, int pname, IntPtr rfparams);
    public delegate void DglTexGeni_III(int coord, int pname, int iparam);
    public delegate void DglTexGeniv_IIaI(int coord, int pname, int[] riparams);
    public delegate void DglTexGeniv_IIP(int coord, int pname, IntPtr riparams);
    public delegate void DglTexImage1D_IIIIIIIaB(int target, int level, int internalformat, int width, int border, int format, int itype, byte[] pixels);
    public delegate void DglTexImage1D_IIIIIIIaH(int target, int level, int internalformat, int width, int border, int format, int itype, short[] pixels);
    public delegate void DglTexImage1D_IIIIIIIaI(int target, int level, int internalformat, int width, int border, int format, int itype, int[] pixels);
    public delegate void DglTexImage1D_IIIIIIIaF(int target, int level, int internalformat, int width, int border, int format, int itype, float[] pixels);
    public delegate void DglTexImage1D_IIIIIIIP(int target, int level, int internalformat, int width, int border, int format, int itype, IntPtr pixels);
    public delegate void DglTexImage2D_IIIIIIIIaB(int target, int level, int internalformat, int width, int height, int border, int format, int itype, byte[] pixels);
    public delegate void DglTexImage2D_IIIIIIIIaH(int target, int level, int internalformat, int width, int height, int border, int format, int itype, short[] pixels);
    public delegate void DglTexImage2D_IIIIIIIIaI(int target, int level, int internalformat, int width, int height, int border, int format, int itype, int[] pixels);
    public delegate void DglTexImage2D_IIIIIIIIaF(int target, int level, int internalformat, int width, int height, int border, int format, int itype, float[] pixels);
    public delegate void DglTexImage2D_IIIIIIIIP(int target, int level, int internalformat, int width, int height, int border, int format, int itype, IntPtr pixels);
    public delegate void DglTexImage3D_IIIIIIIIIaB(int target, int level, int internalformat, int width, int height, int depth, int border, int format, int itype, byte[] pixels);
    public delegate void DglTexImage3D_IIIIIIIIIaH(int target, int level, int internalformat, int width, int height, int depth, int border, int format, int itype, short[] pixels);
    public delegate void DglTexImage3D_IIIIIIIIIaI(int target, int level, int internalformat, int width, int height, int depth, int border, int format, int itype, int[] pixels);
    public delegate void DglTexImage3D_IIIIIIIIIaF(int target, int level, int internalformat, int width, int height, int depth, int border, int format, int itype, float[] pixels);
    public delegate void DglTexImage3D_IIIIIIIIIP(int target, int level, int internalformat, int width, int height, int depth, int border, int format, int itype, IntPtr pixels);
    public delegate void DglTexImage3DEXT_IIIIIIIIIaB(int target, int level, int internalformat, int width, int height, int depth, int border, int format, int itype, byte[] pixels);
    public delegate void DglTexImage3DEXT_IIIIIIIIIaH(int target, int level, int internalformat, int width, int height, int depth, int border, int format, int itype, short[] pixels);
    public delegate void DglTexImage3DEXT_IIIIIIIIIaI(int target, int level, int internalformat, int width, int height, int depth, int border, int format, int itype, int[] pixels);
    public delegate void DglTexImage3DEXT_IIIIIIIIIaF(int target, int level, int internalformat, int width, int height, int depth, int border, int format, int itype, float[] pixels);
    public delegate void DglTexImage3DEXT_IIIIIIIIIP(int target, int level, int internalformat, int width, int height, int depth, int border, int format, int itype, IntPtr pixels);
    public delegate void DglTexImage4DSGIS_IIIIIIIIIIaB(int target, int level, int internalformat, int width, int height, int depth, int size4d, int border, int format, int itype, byte[] pixels);
    public delegate void DglTexImage4DSGIS_IIIIIIIIIIaH(int target, int level, int internalformat, int width, int height, int depth, int size4d, int border, int format, int itype, short[] pixels);
    public delegate void DglTexImage4DSGIS_IIIIIIIIIIaI(int target, int level, int internalformat, int width, int height, int depth, int size4d, int border, int format, int itype, int[] pixels);
    public delegate void DglTexImage4DSGIS_IIIIIIIIIIaF(int target, int level, int internalformat, int width, int height, int depth, int size4d, int border, int format, int itype, float[] pixels);
    public delegate void DglTexImage4DSGIS_IIIIIIIIIIP(int target, int level, int internalformat, int width, int height, int depth, int size4d, int border, int format, int itype, IntPtr pixels);
    public delegate void DglTexParameterf_IIF(int target, int pname, float param);
    public delegate void DglTexParameterfv_IIaF(int target, int pname, float[] rfparams);
    public delegate void DglTexParameterfv_IIP(int target, int pname, IntPtr rfparams);
    public delegate void DglTexParameteri_III(int target, int pname, int iparam);
    public delegate void DglTexParameteriv_IIaI(int target, int pname, int[] riparams);
    public delegate void DglTexParameteriv_IIP(int target, int pname, IntPtr riparams);
    public delegate void DglTexSubImage1D_IIIIIIaB(int target, int level, int xoffset, int width, int format, int itype, byte[] pixels);
    public delegate void DglTexSubImage1D_IIIIIIaH(int target, int level, int xoffset, int width, int format, int itype, short[] pixels);
    public delegate void DglTexSubImage1D_IIIIIIaI(int target, int level, int xoffset, int width, int format, int itype, int[] pixels);
    public delegate void DglTexSubImage1D_IIIIIIaF(int target, int level, int xoffset, int width, int format, int itype, float[] pixels);
    public delegate void DglTexSubImage1D_IIIIIIP(int target, int level, int xoffset, int width, int format, int itype, IntPtr pixels);
    public delegate void DglTexSubImage1DEXT_IIIIIIaB(int target, int level, int xoffset, int width, int format, int itype, byte[] pixels);
    public delegate void DglTexSubImage1DEXT_IIIIIIaH(int target, int level, int xoffset, int width, int format, int itype, short[] pixels);
    public delegate void DglTexSubImage1DEXT_IIIIIIaI(int target, int level, int xoffset, int width, int format, int itype, int[] pixels);
    public delegate void DglTexSubImage1DEXT_IIIIIIaF(int target, int level, int xoffset, int width, int format, int itype, float[] pixels);
    public delegate void DglTexSubImage1DEXT_IIIIIIP(int target, int level, int xoffset, int width, int format, int itype, IntPtr pixels);
    public delegate void DglTexSubImage2D_IIIIIIIIaB(int target, int level, int xoffset, int yoffset, int width, int height, int format, int itype, byte[] pixels);
    public delegate void DglTexSubImage2D_IIIIIIIIaH(int target, int level, int xoffset, int yoffset, int width, int height, int format, int itype, short[] pixels);
    public delegate void DglTexSubImage2D_IIIIIIIIaI(int target, int level, int xoffset, int yoffset, int width, int height, int format, int itype, int[] pixels);
    public delegate void DglTexSubImage2D_IIIIIIIIaF(int target, int level, int xoffset, int yoffset, int width, int height, int format, int itype, float[] pixels);
    public delegate void DglTexSubImage2D_IIIIIIIIP(int target, int level, int xoffset, int yoffset, int width, int height, int format, int itype, IntPtr pixels);
    public delegate void DglTexSubImage2DEXT_IIIIIIIIaB(int target, int level, int xoffset, int yoffset, int width, int height, int format, int itype, byte[] pixels);
    public delegate void DglTexSubImage2DEXT_IIIIIIIIaH(int target, int level, int xoffset, int yoffset, int width, int height, int format, int itype, short[] pixels);
    public delegate void DglTexSubImage2DEXT_IIIIIIIIaI(int target, int level, int xoffset, int yoffset, int width, int height, int format, int itype, int[] pixels);
    public delegate void DglTexSubImage2DEXT_IIIIIIIIaF(int target, int level, int xoffset, int yoffset, int width, int height, int format, int itype, float[] pixels);
    public delegate void DglTexSubImage2DEXT_IIIIIIIIP(int target, int level, int xoffset, int yoffset, int width, int height, int format, int itype, IntPtr pixels);
    public delegate void DglTexSubImage3D_IIIIIIIIIIaB(int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int itype, byte[] pixels);
    public delegate void DglTexSubImage3D_IIIIIIIIIIaH(int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int itype, short[] pixels);
    public delegate void DglTexSubImage3D_IIIIIIIIIIaI(int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int itype, int[] pixels);
    public delegate void DglTexSubImage3D_IIIIIIIIIIaF(int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int itype, float[] pixels);
    public delegate void DglTexSubImage3D_IIIIIIIIIIP(int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int itype, IntPtr pixels);
    public delegate void DglTexSubImage3DEXT_IIIIIIIIIIaB(int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int itype, byte[] pixels);
    public delegate void DglTexSubImage3DEXT_IIIIIIIIIIaH(int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int itype, short[] pixels);
    public delegate void DglTexSubImage3DEXT_IIIIIIIIIIaI(int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int itype, int[] pixels);
    public delegate void DglTexSubImage3DEXT_IIIIIIIIIIaF(int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int itype, float[] pixels);
    public delegate void DglTexSubImage3DEXT_IIIIIIIIIIP(int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int itype, IntPtr pixels);
    public delegate void DglTexSubImage4DSGIS_IIIIIIIIIIIIaB(int target, int level, int xoffset, int yoffset, int zoffset, int woffset, int width, int height, int depth, int size4d, int format, int itype, byte[] pixels);
    public delegate void DglTexSubImage4DSGIS_IIIIIIIIIIIIaH(int target, int level, int xoffset, int yoffset, int zoffset, int woffset, int width, int height, int depth, int size4d, int format, int itype, short[] pixels);
    public delegate void DglTexSubImage4DSGIS_IIIIIIIIIIIIaI(int target, int level, int xoffset, int yoffset, int zoffset, int woffset, int width, int height, int depth, int size4d, int format, int itype, int[] pixels);
    public delegate void DglTexSubImage4DSGIS_IIIIIIIIIIIIaF(int target, int level, int xoffset, int yoffset, int zoffset, int woffset, int width, int height, int depth, int size4d, int format, int itype, float[] pixels);
    public delegate void DglTexSubImage4DSGIS_IIIIIIIIIIIIP(int target, int level, int xoffset, int yoffset, int zoffset, int woffset, int width, int height, int depth, int size4d, int format, int itype, IntPtr pixels);
    public delegate void DglTextureColorMaskSGIS_BBBB(byte red, byte green, byte blue, byte alpha);
    public delegate void DglTextureLightEXT_I(int pname);
    public delegate void DglTextureMaterialEXT_II(int face, int mode);
    public delegate void DglTextureNormalEXT_I(int mode);
    public delegate void DglTrackMatrixNV_IIII(int target, int address, int matrix, int transform);
    public delegate void DglTranslated_DDD(double x, double y, double z);
    public delegate void DglTranslatef_FFF(float x, float y, float z);
    public delegate void DgluBeginCurve_P(IntPtr nobj);
    public delegate void DgluBeginPolygon_P(IntPtr tess);
    public delegate void DgluBeginSurface_P(IntPtr nobj);
    public delegate void DgluBeginTrim_P(IntPtr nobj);
    public delegate int DgluBuild1DMipmaps_IIIIIaB(int target, int components, int width, int format, int itype, byte[] data);
    public delegate int DgluBuild1DMipmaps_IIIIIaH(int target, int components, int width, int format, int itype, short[] data);
    public delegate int DgluBuild1DMipmaps_IIIIIaI(int target, int components, int width, int format, int itype, int[] data);
    public delegate int DgluBuild1DMipmaps_IIIIIaF(int target, int components, int width, int format, int itype, float[] data);
    public delegate int DgluBuild1DMipmaps_IIIIIP(int target, int components, int width, int format, int itype, IntPtr data);
    public delegate int DgluBuild2DMipmaps_IIIIIIaB(int target, int components, int width, int height, int format, int itype, byte[] data);
    public delegate int DgluBuild2DMipmaps_IIIIIIaH(int target, int components, int width, int height, int format, int itype, short[] data);
    public delegate int DgluBuild2DMipmaps_IIIIIIaI(int target, int components, int width, int height, int format, int itype, int[] data);
    public delegate int DgluBuild2DMipmaps_IIIIIIaF(int target, int components, int width, int height, int format, int itype, float[] data);
    public delegate int DgluBuild2DMipmaps_IIIIIIP(int target, int components, int width, int height, int format, int itype, IntPtr data);
    public delegate void DgluCylinder_PDDDII(IntPtr qobj, double baseRadius, double topRadius, double height, int slices, int stacks);
    public delegate void DgluDeleteNurbsRenderer_P(IntPtr nobj);
    public delegate void DgluDeleteQuadric_P(IntPtr state);
    public delegate void DgluDeleteTess_P(IntPtr tess);
    public delegate void DgluDisk_PDDII(IntPtr qobj, double innerRadius, double outerRadius, int slices, int loops);
    public delegate void DgluEndCurve_P(IntPtr nobj);
    public delegate void DgluEndPolygon_P(IntPtr tess);
    public delegate void DgluEndSurface_P(IntPtr nobj);
    public delegate void DgluEndTrim_P(IntPtr nobj);
    public delegate String DgluErrorString_I(int errCode);
    public delegate String DgluErrorUnicodeStringEXT_I(int errCode);
    public delegate void DgluGetNurbsProperty_PIrF(IntPtr nobj, int property, ref float value);
    public delegate String DgluGetString_I(int name);
    public delegate void DgluGetTessProperty_PIrD(IntPtr tess, int which, ref double value);
    public delegate void DgluLoadSamplingMatrices_PaFaFaI(IntPtr nobj, float[] modelMatrix, float[] projMatrix, int[] viewport);
    public delegate void DgluLoadSamplingMatrices_PaFaFP(IntPtr nobj, float[] modelMatrix, float[] projMatrix, IntPtr viewport);
    public delegate void DgluLoadSamplingMatrices_PaFPaI(IntPtr nobj, float[] modelMatrix, IntPtr projMatrix, int[] viewport);
    public delegate void DgluLoadSamplingMatrices_PaFPP(IntPtr nobj, float[] modelMatrix, IntPtr projMatrix, IntPtr viewport);
    public delegate void DgluLoadSamplingMatrices_PPaFaI(IntPtr nobj, IntPtr modelMatrix, float[] projMatrix, int[] viewport);
    public delegate void DgluLoadSamplingMatrices_PPaFP(IntPtr nobj, IntPtr modelMatrix, float[] projMatrix, IntPtr viewport);
    public delegate void DgluLoadSamplingMatrices_PPPaI(IntPtr nobj, IntPtr modelMatrix, IntPtr projMatrix, int[] viewport);
    public delegate void DgluLoadSamplingMatrices_PPPP(IntPtr nobj, IntPtr modelMatrix, IntPtr projMatrix, IntPtr viewport);
    public delegate void DgluLookAt_DDDDDDDDD(double eyex, double eyey, double eyez, double centerx, double centery, double centerz, double upx, double upy, double upz);
    public delegate IntPtr DgluNewNurbsRenderer_V();
    public delegate IntPtr DgluNewQuadric_V();
    public delegate IntPtr DgluNewTess_V();
    public delegate void DgluNextContour_PI(IntPtr tess, int itype);
    public delegate void DglUniform1f_IF(int location, float v0);
    //public delegate void DglUniform1fARB_IF(int location, float v0);
    public delegate void DglUniform1fv_IIaF(int location, int count, float[] value);
    public delegate void DglUniform1fv_IIP(int location, int count, IntPtr value);
    //public delegate void DglUniform1fvARB_IIaF(int location, int count, float[] value);
    //public delegate void DglUniform1fvARB_IIP(int location, int count, IntPtr value);
    public delegate void DglUniform1i_II(int location, int v0);
    //public delegate void DglUniform1iARB_II(int location, int v0);
    public delegate void DglUniform1iv_IIaI(int location, int count, int[] value);
    public delegate void DglUniform1iv_IIP(int location, int count, IntPtr value);
    //public delegate void DglUniform1ivARB_IIaI(int location, int count, int[] value);
    //public delegate void DglUniform1ivARB_IIP(int location, int count, IntPtr value);
    public delegate void DglUniform2f_IFF(int location, float v0, float v1);
    //public delegate void DglUniform2fARB_IFF(int location, float v0, float v1);
    public delegate void DglUniform2fv_IIaF(int location, int count, float[] value);
    public delegate void DglUniform2fv_IIP(int location, int count, IntPtr value);
    //public delegate void DglUniform2fvARB_IIaF(int location, int count, float[] value);
    //public delegate void DglUniform2fvARB_IIP(int location, int count, IntPtr value);
    public delegate void DglUniform2i_III(int location, int v0, int v1);
    //public delegate void DglUniform2iARB_III(int location, int v0, int v1);
    public delegate void DglUniform2iv_IIaI(int location, int count, int[] value);
    public delegate void DglUniform2iv_IIP(int location, int count, IntPtr value);
    //public delegate void DglUniform2ivARB_IIaI(int location, int count, int[] value);
    //public delegate void DglUniform2ivARB_IIP(int location, int count, IntPtr value);
    public delegate void DglUniform3f_IFFF(int location, float v0, float v1, float v2);
    //public delegate void DglUniform3fARB_IFFF(int location, float v0, float v1, float v2);
    public delegate void DglUniform3fv_IIaF(int location, int count, float[] value);
    public delegate void DglUniform3fv_IIP(int location, int count, IntPtr value);
    //public delegate void DglUniform3fvARB_IIaF(int location, int count, float[] value);
    //public delegate void DglUniform3fvARB_IIP(int location, int count, IntPtr value);
    public delegate void DglUniform3i_IIII(int location, int v0, int v1, int v2);
    //public delegate void DglUniform3iARB_IIII(int location, int v0, int v1, int v2);
    public delegate void DglUniform3iv_IIaI(int location, int count, int[] value);
    public delegate void DglUniform3iv_IIP(int location, int count, IntPtr value);
    //public delegate void DglUniform3ivARB_IIaI(int location, int count, int[] value);
    //public delegate void DglUniform3ivARB_IIP(int location, int count, IntPtr value);
    public delegate void DglUniform4f_IFFFF(int location, float v0, float v1, float v2, float v3);
    //public delegate void DglUniform4fARB_IFFFF(int location, float v0, float v1, float v2, float v3);
    public delegate void DglUniform4fv_IIaF(int location, int count, float[] value);
    public delegate void DglUniform4fv_IIP(int location, int count, IntPtr value);
    //public delegate void DglUniform4fvARB_IIaF(int location, int count, float[] value);
    //public delegate void DglUniform4fvARB_IIP(int location, int count, IntPtr value);
    public delegate void DglUniform4i_IIIII(int location, int v0, int v1, int v2, int v3);
    //public delegate void DglUniform4iARB_IIIII(int location, int v0, int v1, int v2, int v3);
    public delegate void DglUniform4iv_IIaI(int location, int count, int[] value);
    public delegate void DglUniform4iv_IIP(int location, int count, IntPtr value);
    //public delegate void DglUniform4ivARB_IIaI(int location, int count, int[] value);
    //public delegate void DglUniform4ivARB_IIP(int location, int count, IntPtr value);
    public delegate void DglUniformMatrix2fv_IIBaF(int location, int count, byte transpose, float[] value);
    public delegate void DglUniformMatrix2fv_IIBP(int location, int count, byte transpose, IntPtr value);
    //public delegate void DglUniformMatrix2fvARB_IIBaF(int location, int count, byte transpose, float[] value);
    //public delegate void DglUniformMatrix2fvARB_IIBP(int location, int count, byte transpose, IntPtr value);
    public delegate void DglUniformMatrix3fv_IIBaF(int location, int count, byte transpose, float[] value);
    public delegate void DglUniformMatrix3fv_IIBP(int location, int count, byte transpose, IntPtr value);
    //public delegate void DglUniformMatrix3fvARB_IIBaF(int location, int count, byte transpose, float[] value);
    //public delegate void DglUniformMatrix3fvARB_IIBP(int location, int count, byte transpose, IntPtr value);
    public delegate void DglUniformMatrix4fv_IIBaF(int location, int count, byte transpose, float[] value);
    public delegate void DglUniformMatrix4fv_IIBP(int location, int count, byte transpose, IntPtr value);
    //public delegate void DglUniformMatrix4fvARB_IIBaF(int location, int count, byte transpose, float[] value);
    //public delegate void DglUniformMatrix4fvARB_IIBP(int location, int count, byte transpose, IntPtr value);
    public delegate void DglUnlockArraysEXT_V();
    public delegate byte DglUnmapBuffer_I(int target);
    //public delegate byte DglUnmapBufferARB_I(int target);
    public delegate void DglUnmapObjectBufferATI_I(int buffer);
    public delegate void DgluNurbsCallback_PIP(IntPtr nobj, int which, IntPtr fn);
    public delegate void DgluNurbsCurve_PIaFIaFII(IntPtr nobj, int nknots, float[] knot, int stride, float[] ctlarray, int order, int itype);
    public delegate void DgluNurbsCurve_PIaFIPII(IntPtr nobj, int nknots, float[] knot, int stride, IntPtr ctlarray, int order, int itype);
    public delegate void DgluNurbsCurve_PIPIaFII(IntPtr nobj, int nknots, IntPtr knot, int stride, float[] ctlarray, int order, int itype);
    public delegate void DgluNurbsCurve_PIPIPII(IntPtr nobj, int nknots, IntPtr knot, int stride, IntPtr ctlarray, int order, int itype);
    public delegate void DgluNurbsProperty_PIF(IntPtr nobj, int property, float value);
    public delegate void DgluNurbsSurface_PIaFIaFIIaFIII(IntPtr nobj, int sknot_count, float[] sknot, int tknot_count, float[] tknot, int s_stride, int t_stride, float[] ctlarray, int sorder, int torder, int itype);
    public delegate void DgluNurbsSurface_PIaFIaFIIPIII(IntPtr nobj, int sknot_count, float[] sknot, int tknot_count, float[] tknot, int s_stride, int t_stride, IntPtr ctlarray, int sorder, int torder, int itype);
    public delegate void DgluNurbsSurface_PIaFIPIIaFIII(IntPtr nobj, int sknot_count, float[] sknot, int tknot_count, IntPtr tknot, int s_stride, int t_stride, float[] ctlarray, int sorder, int torder, int itype);
    public delegate void DgluNurbsSurface_PIaFIPIIPIII(IntPtr nobj, int sknot_count, float[] sknot, int tknot_count, IntPtr tknot, int s_stride, int t_stride, IntPtr ctlarray, int sorder, int torder, int itype);
    public delegate void DgluNurbsSurface_PIPIaFIIaFIII(IntPtr nobj, int sknot_count, IntPtr sknot, int tknot_count, float[] tknot, int s_stride, int t_stride, float[] ctlarray, int sorder, int torder, int itype);
    public delegate void DgluNurbsSurface_PIPIaFIIPIII(IntPtr nobj, int sknot_count, IntPtr sknot, int tknot_count, float[] tknot, int s_stride, int t_stride, IntPtr ctlarray, int sorder, int torder, int itype);
    public delegate void DgluNurbsSurface_PIPIPIIaFIII(IntPtr nobj, int sknot_count, IntPtr sknot, int tknot_count, IntPtr tknot, int s_stride, int t_stride, float[] ctlarray, int sorder, int torder, int itype);
    public delegate void DgluNurbsSurface_PIPIPIIPIII(IntPtr nobj, int sknot_count, IntPtr sknot, int tknot_count, IntPtr tknot, int s_stride, int t_stride, IntPtr ctlarray, int sorder, int torder, int itype);
    public delegate void DgluOrtho2D_DDDD(double left, double right, double bottom, double top);
    public delegate void DgluPartialDisk_PDDIIDD(IntPtr qobj, double innerRadius, double outerRadius, int slices, int loops, double startAngle, double sweepAngle);
    public delegate void DglUpdateObjectBufferATI_IIIaBI(int buffer, int offset, int size, byte[] pointer, int preserve);
    public delegate void DglUpdateObjectBufferATI_IIIPI(int buffer, int offset, int size, IntPtr pointer, int preserve);
    public delegate void DgluPerspective_DDDD(double fovy, double aspect, double zNear, double zFar);
    public delegate void DgluPickMatrix_DDDDaI(double x, double y, double width, double height, int[] viewport);
    public delegate void DgluPickMatrix_DDDDP(double x, double y, double width, double height, IntPtr viewport);
    public delegate int DgluProject_DDDaDaDaIrDrDrD(double objx, double objy, double objz, double[] modelMatrix, double[] projMatrix, int[] viewport, ref double winx, ref double winy, ref double winz);
    public delegate int DgluProject_DDDPPPPPP(double objx, double objy, double objz, IntPtr modelMatrix, IntPtr projMatrix, IntPtr viewport, IntPtr winx, IntPtr winy, IntPtr winz);
    public delegate void DgluPwlCurve_PIaFII(IntPtr nobj, int count, float[] array, int stride, int itype);
    public delegate void DgluPwlCurve_PIPII(IntPtr nobj, int count, IntPtr array, int stride, int itype);
    public delegate void DgluQuadricCallback_PIP(IntPtr qobj, int which, IntPtr fn);
    public delegate void DgluQuadricDrawStyle_PI(IntPtr quadObject, int drawStyle);
    public delegate void DgluQuadricNormals_PI(IntPtr quadObject, int normals);
    public delegate void DgluQuadricOrientation_PI(IntPtr quadObject, int orientation);
    public delegate void DgluQuadricTexture_PB(IntPtr quadObject, byte textureCoords);
    public delegate int DgluScaleImage_IIIIaBIIIaB(int format, int widthin, int heightin, int typein, byte[] datain, int widthout, int heightout, int typeout, byte[] dataout);
    public delegate int DgluScaleImage_IIIIaBIIIP(int format, int widthin, int heightin, int typein, byte[] datain, int widthout, int heightout, int typeout, IntPtr dataout);
    public delegate int DgluScaleImage_IIIIPIIIaB(int format, int widthin, int heightin, int typein, IntPtr datain, int widthout, int heightout, int typeout, byte[] dataout);
    public delegate int DgluScaleImage_IIIIPIIIP(int format, int widthin, int heightin, int typein, IntPtr datain, int widthout, int heightout, int typeout, IntPtr dataout);
    public delegate void DglUseProgram_I(int program);
    //public delegate void DglUseProgramObjectARB_I(int programObj);
    public delegate void DgluSphere_PDII(IntPtr qobj, double radius, int slices, int stacks);
    public delegate void DgluTessBeginContour_P(IntPtr tess);
    public delegate void DgluTessBeginPolygon_PaB(IntPtr tess, byte[] polygon_data);
    public delegate void DgluTessBeginPolygon_PP(IntPtr tess, IntPtr polygon_data);
    public delegate void DgluTessCallback_PIP(IntPtr tess, int which, IntPtr fn);
    public delegate void DgluTessEndContour_P(IntPtr tess);
    public delegate void DgluTessEndPolygon_P(IntPtr tess);
    public delegate void DgluTessNormal_PDDD(IntPtr tess, double x, double y, double z);
    public delegate void DgluTessProperty_PID(IntPtr tess, int which, double value);
    public delegate void DgluTessVertex_PaDaB(IntPtr tess, double[] coords, byte[] data);
    public delegate void DgluTessVertex_PaDP(IntPtr tess, double[] coords, IntPtr data);
    public delegate void DgluTessVertex_PPaB(IntPtr tess, IntPtr coords, byte[] data);
    public delegate void DgluTessVertex_PPP(IntPtr tess, IntPtr coords, IntPtr data);
    public delegate int DgluUnProject_DDDaDaDaIrDrDrD(double winx, double winy, double winz, double[] modelMatrix, double[] projMatrix, int[] viewport, ref double objx, ref double objy, ref double objz);
    public delegate int DgluUnProject_DDDPPPPPP(double winx, double winy, double winz, IntPtr modelMatrix, IntPtr projMatrix, IntPtr viewport, IntPtr objx, IntPtr objy, IntPtr objz);
    public delegate void DglValidateProgram_I(int program);
    //public delegate void DglValidateProgramARB_I(int programObj);
    public delegate void DglVariantArrayObjectATI_IIIII(int id, int itype, int stride, int buffer, int offset);
    public delegate void DglVariantbvEXT_IaB(int id, byte[] addr);
    public delegate void DglVariantbvEXT_IP(int id, IntPtr addr);
    public delegate void DglVariantdvEXT_IaD(int id, double[] addr);
    public delegate void DglVariantdvEXT_IP(int id, IntPtr addr);
    public delegate void DglVariantfvEXT_IaF(int id, float[] addr);
    public delegate void DglVariantfvEXT_IP(int id, IntPtr addr);
    public delegate void DglVariantivEXT_IaI(int id, int[] addr);
    public delegate void DglVariantivEXT_IP(int id, IntPtr addr);
    public delegate void DglVariantPointerEXT_IIIaB(int id, int itype, int stride, byte[] addr);
    public delegate void DglVariantPointerEXT_IIIaH(int id, int itype, int stride, short[] addr);
    public delegate void DglVariantPointerEXT_IIIaI(int id, int itype, int stride, int[] addr);
    public delegate void DglVariantPointerEXT_IIIaF(int id, int itype, int stride, float[] addr);
    public delegate void DglVariantPointerEXT_IIIaD(int id, int itype, int stride, double[] addr);
    public delegate void DglVariantPointerEXT_IIIP(int id, int itype, int stride, IntPtr addr);
    public delegate void DglVariantsvEXT_IaH(int id, short[] addr);
    public delegate void DglVariantsvEXT_IP(int id, IntPtr addr);
    public delegate void DglVariantubvEXT_IaB(int id, byte[] addr);
    public delegate void DglVariantubvEXT_IP(int id, IntPtr addr);
    public delegate void DglVariantuivEXT_IaI(int id, int[] addr);
    public delegate void DglVariantuivEXT_IP(int id, IntPtr addr);
    public delegate void DglVariantusvEXT_IaH(int id, short[] addr);
    public delegate void DglVariantusvEXT_IP(int id, IntPtr addr);
    public delegate void DglVertex2d_DD(double x, double y);
    public delegate void DglVertex2dv_aD(double[] v);
    public delegate void DglVertex2dv_P(IntPtr v);
    public delegate void DglVertex2f_FF(float x, float y);
    public delegate void DglVertex2fv_aF(float[] v);
    public delegate void DglVertex2fv_P(IntPtr v);
    public delegate void DglVertex2hNV_HH(short x, short y);
    public delegate void DglVertex2hvNV_aH(short[] v);
    public delegate void DglVertex2hvNV_P(IntPtr v);
    public delegate void DglVertex2i_II(int x, int y);
    public delegate void DglVertex2iv_aI(int[] v);
    public delegate void DglVertex2iv_P(IntPtr v);
    public delegate void DglVertex2s_HH(short x, short y);
    public delegate void DglVertex2sv_aH(short[] v);
    public delegate void DglVertex2sv_P(IntPtr v);
    public delegate void DglVertex3d_DDD(double x, double y, double z);
    public delegate void DglVertex3dv_aD(double[] v);
    public delegate void DglVertex3dv_P(IntPtr v);
    public delegate void DglVertex3f_FFF(float x, float y, float z);
    public delegate void DglVertex3fv_aF(float[] v);
    public delegate void DglVertex3fv_P(IntPtr v);
    public delegate void DglVertex3hNV_HHH(short x, short y, short z);
    public delegate void DglVertex3hvNV_aH(short[] v);
    public delegate void DglVertex3hvNV_P(IntPtr v);
    public delegate void DglVertex3i_III(int x, int y, int z);
    public delegate void DglVertex3iv_aI(int[] v);
    public delegate void DglVertex3iv_P(IntPtr v);
    public delegate void DglVertex3s_HHH(short x, short y, short z);
    public delegate void DglVertex3sv_aH(short[] v);
    public delegate void DglVertex3sv_P(IntPtr v);
    public delegate void DglVertex4d_DDDD(double x, double y, double z, double w);
    public delegate void DglVertex4dv_aD(double[] v);
    public delegate void DglVertex4dv_P(IntPtr v);
    public delegate void DglVertex4f_FFFF(float x, float y, float z, float w);
    public delegate void DglVertex4fv_aF(float[] v);
    public delegate void DglVertex4fv_P(IntPtr v);
    public delegate void DglVertex4hNV_HHHH(short x, short y, short z, short w);
    public delegate void DglVertex4hvNV_aH(short[] v);
    public delegate void DglVertex4hvNV_P(IntPtr v);
    public delegate void DglVertex4i_IIII(int x, int y, int z, int w);
    public delegate void DglVertex4iv_aI(int[] v);
    public delegate void DglVertex4iv_P(IntPtr v);
    public delegate void DglVertex4s_HHHH(short x, short y, short z, short w);
    public delegate void DglVertex4sv_aH(short[] v);
    public delegate void DglVertex4sv_P(IntPtr v);
    public delegate void DglVertexArrayParameteriAPPLE_II(int pname, int iparam);
    public delegate void DglVertexArrayRangeAPPLE_IaB(int length, byte[] pointer);
    public delegate void DglVertexArrayRangeAPPLE_IP(int length, IntPtr pointer);
    public delegate void DglVertexArrayRangeNV_IaB(int length, byte[] pointer);
    public delegate void DglVertexArrayRangeNV_IP(int length, IntPtr pointer);
    public delegate void DglVertexAttrib1d_ID(int index, double x);
    //public delegate void DglVertexAttrib1dARB_ID(int index, double x);
    public delegate void DglVertexAttrib1dNV_ID(int index, double x);
    public delegate void DglVertexAttrib1dv_IaD(int index, double[] v);
    public delegate void DglVertexAttrib1dv_IP(int index, IntPtr v);
    //public delegate void DglVertexAttrib1dvARB_IaD(int index, double[] v);
    //public delegate void DglVertexAttrib1dvARB_IP(int index, IntPtr v);
    public delegate void DglVertexAttrib1dvNV_IaD(int index, double[] v);
    public delegate void DglVertexAttrib1dvNV_IP(int index, IntPtr v);
    public delegate void DglVertexAttrib1f_IF(int index, float x);
    //public delegate void DglVertexAttrib1fARB_IF(int index, float x);
    public delegate void DglVertexAttrib1fNV_IF(int index, float x);
    public delegate void DglVertexAttrib1fv_IaF(int index, float[] v);
    public delegate void DglVertexAttrib1fv_IP(int index, IntPtr v);
    //public delegate void DglVertexAttrib1fvARB_IaF(int index, float[] v);
    //public delegate void DglVertexAttrib1fvARB_IP(int index, IntPtr v);
    public delegate void DglVertexAttrib1fvNV_IaF(int index, float[] v);
    public delegate void DglVertexAttrib1fvNV_IP(int index, IntPtr v);
    public delegate void DglVertexAttrib1hNV_IH(int index, short x);
    public delegate void DglVertexAttrib1hvNV_IaH(int index, short[] v);
    public delegate void DglVertexAttrib1hvNV_IP(int index, IntPtr v);
    public delegate void DglVertexAttrib1s_IH(int index, short x);
    //public delegate void DglVertexAttrib1sARB_IH(int index, short x);
    public delegate void DglVertexAttrib1sNV_IH(int index, short x);
    public delegate void DglVertexAttrib1sv_IaH(int index, short[] v);
    public delegate void DglVertexAttrib1sv_IP(int index, IntPtr v);
    //public delegate void DglVertexAttrib1svARB_IaH(int index, short[] v);
    //public delegate void DglVertexAttrib1svARB_IP(int index, IntPtr v);
    public delegate void DglVertexAttrib1svNV_IaH(int index, short[] v);
    public delegate void DglVertexAttrib1svNV_IP(int index, IntPtr v);
    public delegate void DglVertexAttrib2d_IDD(int index, double x, double y);
    //public delegate void DglVertexAttrib2dARB_IDD(int index, double x, double y);
    public delegate void DglVertexAttrib2dNV_IDD(int index, double x, double y);
    public delegate void DglVertexAttrib2dv_IaD(int index, double[] v);
    public delegate void DglVertexAttrib2dv_IP(int index, IntPtr v);
    //public delegate void DglVertexAttrib2dvARB_IaD(int index, double[] v);
    //public delegate void DglVertexAttrib2dvARB_IP(int index, IntPtr v);
    public delegate void DglVertexAttrib2dvNV_IaD(int index, double[] v);
    public delegate void DglVertexAttrib2dvNV_IP(int index, IntPtr v);
    public delegate void DglVertexAttrib2f_IFF(int index, float x, float y);
    //public delegate void DglVertexAttrib2fARB_IFF(int index, float x, float y);
    public delegate void DglVertexAttrib2fNV_IFF(int index, float x, float y);
    public delegate void DglVertexAttrib2fv_IaF(int index, float[] v);
    public delegate void DglVertexAttrib2fv_IP(int index, IntPtr v);
    //public delegate void DglVertexAttrib2fvARB_IaF(int index, float[] v);
    //public delegate void DglVertexAttrib2fvARB_IP(int index, IntPtr v);
    public delegate void DglVertexAttrib2fvNV_IaF(int index, float[] v);
    public delegate void DglVertexAttrib2fvNV_IP(int index, IntPtr v);
    public delegate void DglVertexAttrib2hNV_IHH(int index, short x, short y);
    public delegate void DglVertexAttrib2hvNV_IaH(int index, short[] v);
    public delegate void DglVertexAttrib2hvNV_IP(int index, IntPtr v);
    public delegate void DglVertexAttrib2s_IHH(int index, short x, short y);
    //public delegate void DglVertexAttrib2sARB_IHH(int index, short x, short y);
    public delegate void DglVertexAttrib2sNV_IHH(int index, short x, short y);
    public delegate void DglVertexAttrib2sv_IaH(int index, short[] v);
    public delegate void DglVertexAttrib2sv_IP(int index, IntPtr v);
    //public delegate void DglVertexAttrib2svARB_IaH(int index, short[] v);
    //public delegate void DglVertexAttrib2svARB_IP(int index, IntPtr v);
    public delegate void DglVertexAttrib2svNV_IaH(int index, short[] v);
    public delegate void DglVertexAttrib2svNV_IP(int index, IntPtr v);
    public delegate void DglVertexAttrib3d_IDDD(int index, double x, double y, double z);
    //public delegate void DglVertexAttrib3dARB_IDDD(int index, double x, double y, double z);
    public delegate void DglVertexAttrib3dNV_IDDD(int index, double x, double y, double z);
    public delegate void DglVertexAttrib3dv_IaD(int index, double[] v);
    public delegate void DglVertexAttrib3dv_IP(int index, IntPtr v);
    //public delegate void DglVertexAttrib3dvARB_IaD(int index, double[] v);
    //public delegate void DglVertexAttrib3dvARB_IP(int index, IntPtr v);
    public delegate void DglVertexAttrib3dvNV_IaD(int index, double[] v);
    public delegate void DglVertexAttrib3dvNV_IP(int index, IntPtr v);
    public delegate void DglVertexAttrib3f_IFFF(int index, float x, float y, float z);
    //public delegate void DglVertexAttrib3fARB_IFFF(int index, float x, float y, float z);
    public delegate void DglVertexAttrib3fNV_IFFF(int index, float x, float y, float z);
    public delegate void DglVertexAttrib3fv_IaF(int index, float[] v);
    public delegate void DglVertexAttrib3fv_IP(int index, IntPtr v);
    //public delegate void DglVertexAttrib3fvARB_IaF(int index, float[] v);
    //public delegate void DglVertexAttrib3fvARB_IP(int index, IntPtr v);
    public delegate void DglVertexAttrib3fvNV_IaF(int index, float[] v);
    public delegate void DglVertexAttrib3fvNV_IP(int index, IntPtr v);
    public delegate void DglVertexAttrib3hNV_IHHH(int index, short x, short y, short z);
    public delegate void DglVertexAttrib3hvNV_IaH(int index, short[] v);
    public delegate void DglVertexAttrib3hvNV_IP(int index, IntPtr v);
    public delegate void DglVertexAttrib3s_IHHH(int index, short x, short y, short z);
    //public delegate void DglVertexAttrib3sARB_IHHH(int index, short x, short y, short z);
    public delegate void DglVertexAttrib3sNV_IHHH(int index, short x, short y, short z);
    public delegate void DglVertexAttrib3sv_IaH(int index, short[] v);
    public delegate void DglVertexAttrib3sv_IP(int index, IntPtr v);
    //public delegate void DglVertexAttrib3svARB_IaH(int index, short[] v);
    //public delegate void DglVertexAttrib3svARB_IP(int index, IntPtr v);
    public delegate void DglVertexAttrib3svNV_IaH(int index, short[] v);
    public delegate void DglVertexAttrib3svNV_IP(int index, IntPtr v);
    public delegate void DglVertexAttrib4bv_IaB(int index, byte[] v);
    public delegate void DglVertexAttrib4bv_IP(int index, IntPtr v);
    //public delegate void DglVertexAttrib4bvARB_IaB(int index, byte[] v);
    //public delegate void DglVertexAttrib4bvARB_IP(int index, IntPtr v);
    public delegate void DglVertexAttrib4d_IDDDD(int index, double x, double y, double z, double w);
    //public delegate void DglVertexAttrib4dARB_IDDDD(int index, double x, double y, double z, double w);
    public delegate void DglVertexAttrib4dNV_IDDDD(int index, double x, double y, double z, double w);
    public delegate void DglVertexAttrib4dv_IaD(int index, double[] v);
    public delegate void DglVertexAttrib4dv_IP(int index, IntPtr v);
    //public delegate void DglVertexAttrib4dvARB_IaD(int index, double[] v);
    //public delegate void DglVertexAttrib4dvARB_IP(int index, IntPtr v);
    public delegate void DglVertexAttrib4dvNV_IaD(int index, double[] v);
    public delegate void DglVertexAttrib4dvNV_IP(int index, IntPtr v);
    public delegate void DglVertexAttrib4f_IFFFF(int index, float x, float y, float z, float w);
    //public delegate void DglVertexAttrib4fARB_IFFFF(int index, float x, float y, float z, float w);
    public delegate void DglVertexAttrib4fNV_IFFFF(int index, float x, float y, float z, float w);
    public delegate void DglVertexAttrib4fv_IaF(int index, float[] v);
    public delegate void DglVertexAttrib4fv_IP(int index, IntPtr v);
    //public delegate void DglVertexAttrib4fvARB_IaF(int index, float[] v);
    //public delegate void DglVertexAttrib4fvARB_IP(int index, IntPtr v);
    public delegate void DglVertexAttrib4fvNV_IaF(int index, float[] v);
    public delegate void DglVertexAttrib4fvNV_IP(int index, IntPtr v);
    public delegate void DglVertexAttrib4hNV_IHHHH(int index, short x, short y, short z, short w);
    public delegate void DglVertexAttrib4hvNV_IaH(int index, short[] v);
    public delegate void DglVertexAttrib4hvNV_IP(int index, IntPtr v);
    public delegate void DglVertexAttrib4iv_IaI(int index, int[] v);
    public delegate void DglVertexAttrib4iv_IP(int index, IntPtr v);
    //public delegate void DglVertexAttrib4ivARB_IaI(int index, int[] v);
    //public delegate void DglVertexAttrib4ivARB_IP(int index, IntPtr v);
    public delegate void DglVertexAttrib4Nbv_IaB(int index, byte[] v);
    public delegate void DglVertexAttrib4Nbv_IP(int index, IntPtr v);
    //public delegate void DglVertexAttrib4NbvARB_IaB(int index, byte[] v);
    //public delegate void DglVertexAttrib4NbvARB_IP(int index, IntPtr v);
    public delegate void DglVertexAttrib4Niv_IaI(int index, int[] v);
    public delegate void DglVertexAttrib4Niv_IP(int index, IntPtr v);
    //public delegate void DglVertexAttrib4NivARB_IaI(int index, int[] v);
    //public delegate void DglVertexAttrib4NivARB_IP(int index, IntPtr v);
    public delegate void DglVertexAttrib4Nsv_IaH(int index, short[] v);
    public delegate void DglVertexAttrib4Nsv_IP(int index, IntPtr v);
    //public delegate void DglVertexAttrib4NsvARB_IaH(int index, short[] v);
    //public delegate void DglVertexAttrib4NsvARB_IP(int index, IntPtr v);
    public delegate void DglVertexAttrib4Nub_IBBBB(int index, byte x, byte y, byte z, byte w);
    //public delegate void DglVertexAttrib4NubARB_IBBBB(int index, byte x, byte y, byte z, byte w);
    public delegate void DglVertexAttrib4Nubv_IaB(int index, byte[] v);
    public delegate void DglVertexAttrib4Nubv_IP(int index, IntPtr v);
    //public delegate void DglVertexAttrib4NubvARB_IaB(int index, byte[] v);
    //public delegate void DglVertexAttrib4NubvARB_IP(int index, IntPtr v);
    public delegate void DglVertexAttrib4Nuiv_IaI(int index, int[] v);
    public delegate void DglVertexAttrib4Nuiv_IP(int index, IntPtr v);
    //public delegate void DglVertexAttrib4NuivARB_IaI(int index, int[] v);
    //public delegate void DglVertexAttrib4NuivARB_IP(int index, IntPtr v);
    public delegate void DglVertexAttrib4Nusv_IaH(int index, short[] v);
    public delegate void DglVertexAttrib4Nusv_IP(int index, IntPtr v);
    //public delegate void DglVertexAttrib4NusvARB_IaH(int index, short[] v);
    //public delegate void DglVertexAttrib4NusvARB_IP(int index, IntPtr v);
    public delegate void DglVertexAttrib4s_IHHHH(int index, short x, short y, short z, short w);
    //public delegate void DglVertexAttrib4sARB_IHHHH(int index, short x, short y, short z, short w);
    public delegate void DglVertexAttrib4sNV_IHHHH(int index, short x, short y, short z, short w);
    public delegate void DglVertexAttrib4sv_IaH(int index, short[] v);
    public delegate void DglVertexAttrib4sv_IP(int index, IntPtr v);
    //public delegate void DglVertexAttrib4svARB_IaH(int index, short[] v);
    //public delegate void DglVertexAttrib4svARB_IP(int index, IntPtr v);
    public delegate void DglVertexAttrib4svNV_IaH(int index, short[] v);
    public delegate void DglVertexAttrib4svNV_IP(int index, IntPtr v);
    public delegate void DglVertexAttrib4ubNV_IBBBB(int index, byte x, byte y, byte z, byte w);
    public delegate void DglVertexAttrib4ubv_IaB(int index, byte[] v);
    public delegate void DglVertexAttrib4ubv_IP(int index, IntPtr v);
    //public delegate void DglVertexAttrib4ubvARB_IaB(int index, byte[] v);
    //public delegate void DglVertexAttrib4ubvARB_IP(int index, IntPtr v);
    public delegate void DglVertexAttrib4ubvNV_IaB(int index, byte[] v);
    public delegate void DglVertexAttrib4ubvNV_IP(int index, IntPtr v);
    public delegate void DglVertexAttrib4uiv_IaI(int index, int[] v);
    public delegate void DglVertexAttrib4uiv_IP(int index, IntPtr v);
    //public delegate void DglVertexAttrib4uivARB_IaI(int index, int[] v);
    //public delegate void DglVertexAttrib4uivARB_IP(int index, IntPtr v);
    public delegate void DglVertexAttrib4usv_IaH(int index, short[] v);
    public delegate void DglVertexAttrib4usv_IP(int index, IntPtr v);
    //public delegate void DglVertexAttrib4usvARB_IaH(int index, short[] v);
    //public delegate void DglVertexAttrib4usvARB_IP(int index, IntPtr v);
    public delegate void DglVertexAttribArrayObjectATI_IIIBIII(int index, int size, int itype, byte normalized, int stride, int buffer, int offset);
    public delegate void DglVertexAttribPointer_IIIBIaB(int index, int size, int itype, byte normalized, int stride, byte[] pointer);
    public delegate void DglVertexAttribPointer_IIIBIaH(int index, int size, int itype, byte normalized, int stride, short[] pointer);
    public delegate void DglVertexAttribPointer_IIIBIaI(int index, int size, int itype, byte normalized, int stride, int[] pointer);
    public delegate void DglVertexAttribPointer_IIIBIaF(int index, int size, int itype, byte normalized, int stride, float[] pointer);
    public delegate void DglVertexAttribPointer_IIIBIaD(int index, int size, int itype, byte normalized, int stride, double[] pointer);
    public delegate void DglVertexAttribPointer_IIIBIP(int index, int size, int itype, byte normalized, int stride, IntPtr pointer);
    //public delegate void DglVertexAttribPointerARB_IIIBIaB(int index, int size, int itype, byte normalized, int stride, byte[] pointer);
    //public delegate void DglVertexAttribPointerARB_IIIBIaH(int index, int size, int itype, byte normalized, int stride, short[] pointer);
    //public delegate void DglVertexAttribPointerARB_IIIBIaI(int index, int size, int itype, byte normalized, int stride, int[] pointer);
    //public delegate void DglVertexAttribPointerARB_IIIBIaF(int index, int size, int itype, byte normalized, int stride, float[] pointer);
    //public delegate void DglVertexAttribPointerARB_IIIBIaD(int index, int size, int itype, byte normalized, int stride, double[] pointer);
    //public delegate void DglVertexAttribPointerARB_IIIBIP(int index, int size, int itype, byte normalized, int stride, IntPtr pointer);
    public delegate void DglVertexAttribPointerNV_IIIIaB(int index, int fsize, int itype, int stride, byte[] pointer);
    public delegate void DglVertexAttribPointerNV_IIIIaH(int index, int fsize, int itype, int stride, short[] pointer);
    public delegate void DglVertexAttribPointerNV_IIIIaI(int index, int fsize, int itype, int stride, int[] pointer);
    public delegate void DglVertexAttribPointerNV_IIIIaF(int index, int fsize, int itype, int stride, float[] pointer);
    public delegate void DglVertexAttribPointerNV_IIIIaD(int index, int fsize, int itype, int stride, double[] pointer);
    public delegate void DglVertexAttribPointerNV_IIIIP(int index, int fsize, int itype, int stride, IntPtr pointer);
    public delegate void DglVertexAttribs1dvNV_IIaD(int index, int count, double[] v);
    public delegate void DglVertexAttribs1dvNV_IIP(int index, int count, IntPtr v);
    public delegate void DglVertexAttribs1fvNV_IIaF(int index, int count, float[] v);
    public delegate void DglVertexAttribs1fvNV_IIP(int index, int count, IntPtr v);
    public delegate void DglVertexAttribs1hvNV_IIaH(int index, int n, short[] v);
    public delegate void DglVertexAttribs1hvNV_IIP(int index, int n, IntPtr v);
    public delegate void DglVertexAttribs1svNV_IIaH(int index, int count, short[] v);
    public delegate void DglVertexAttribs1svNV_IIP(int index, int count, IntPtr v);
    public delegate void DglVertexAttribs2dvNV_IIaD(int index, int count, double[] v);
    public delegate void DglVertexAttribs2dvNV_IIP(int index, int count, IntPtr v);
    public delegate void DglVertexAttribs2fvNV_IIaF(int index, int count, float[] v);
    public delegate void DglVertexAttribs2fvNV_IIP(int index, int count, IntPtr v);
    public delegate void DglVertexAttribs2hvNV_IIaH(int index, int n, short[] v);
    public delegate void DglVertexAttribs2hvNV_IIP(int index, int n, IntPtr v);
    public delegate void DglVertexAttribs2svNV_IIaH(int index, int count, short[] v);
    public delegate void DglVertexAttribs2svNV_IIP(int index, int count, IntPtr v);
    public delegate void DglVertexAttribs3dvNV_IIaD(int index, int count, double[] v);
    public delegate void DglVertexAttribs3dvNV_IIP(int index, int count, IntPtr v);
    public delegate void DglVertexAttribs3fvNV_IIaF(int index, int count, float[] v);
    public delegate void DglVertexAttribs3fvNV_IIP(int index, int count, IntPtr v);
    public delegate void DglVertexAttribs3hvNV_IIaH(int index, int n, short[] v);
    public delegate void DglVertexAttribs3hvNV_IIP(int index, int n, IntPtr v);
    public delegate void DglVertexAttribs3svNV_IIaH(int index, int count, short[] v);
    public delegate void DglVertexAttribs3svNV_IIP(int index, int count, IntPtr v);
    public delegate void DglVertexAttribs4dvNV_IIaD(int index, int count, double[] v);
    public delegate void DglVertexAttribs4dvNV_IIP(int index, int count, IntPtr v);
    public delegate void DglVertexAttribs4fvNV_IIaF(int index, int count, float[] v);
    public delegate void DglVertexAttribs4fvNV_IIP(int index, int count, IntPtr v);
    public delegate void DglVertexAttribs4hvNV_IIaH(int index, int n, short[] v);
    public delegate void DglVertexAttribs4hvNV_IIP(int index, int n, IntPtr v);
    public delegate void DglVertexAttribs4svNV_IIaH(int index, int count, short[] v);
    public delegate void DglVertexAttribs4svNV_IIP(int index, int count, IntPtr v);
    public delegate void DglVertexAttribs4ubvNV_IIaB(int index, int count, byte[] v);
    public delegate void DglVertexAttribs4ubvNV_IIP(int index, int count, IntPtr v);
    //public delegate void DglVertexBlendARB_I(int count);
    public delegate void DglVertexBlendEnvfATI_IF(int pname, float fparam);
    public delegate void DglVertexBlendEnviATI_II(int pname, int iparam);
    public delegate void DglVertexPointer_IIIaH(int size, int itype, int stride, short[] pointer);
    public delegate void DglVertexPointer_IIIaI(int size, int itype, int stride, int[] pointer);
    public delegate void DglVertexPointer_IIIaF(int size, int itype, int stride, float[] pointer);
    public delegate void DglVertexPointer_IIIaD(int size, int itype, int stride, double[] pointer);
    public delegate void DglVertexPointer_IIIP(int size, int itype, int stride, IntPtr pointer);
    public delegate void DglVertexPointerEXT_IIIIaH(int size, int itype, int stride, int count, short[] pointer);
    public delegate void DglVertexPointerEXT_IIIIaI(int size, int itype, int stride, int count, int[] pointer);
    public delegate void DglVertexPointerEXT_IIIIaF(int size, int itype, int stride, int count, float[] pointer);
    public delegate void DglVertexPointerEXT_IIIIaD(int size, int itype, int stride, int count, double[] pointer);
    public delegate void DglVertexPointerEXT_IIIIP(int size, int itype, int stride, int count, IntPtr pointer);
    public delegate void DglVertexPointerListIBM_IIIrPI(int size, int itype, int stride, ref IntPtr pointer, int ptrstride);
    public delegate void DglVertexPointervINTEL_IIrP(int size, int itype, ref IntPtr pointer);
    public delegate void DglVertexStream1dATI_ID(int stream, double x);
    public delegate void DglVertexStream1dvATI_IaD(int stream, double[] coords);
    public delegate void DglVertexStream1dvATI_IP(int stream, IntPtr coords);
    public delegate void DglVertexStream1fATI_IF(int stream, float x);
    public delegate void DglVertexStream1fvATI_IaF(int stream, float[] coords);
    public delegate void DglVertexStream1fvATI_IP(int stream, IntPtr coords);
    public delegate void DglVertexStream1iATI_II(int stream, int x);
    public delegate void DglVertexStream1ivATI_IaI(int stream, int[] coords);
    public delegate void DglVertexStream1ivATI_IP(int stream, IntPtr coords);
    public delegate void DglVertexStream1sATI_IH(int stream, short x);
    public delegate void DglVertexStream1svATI_IaH(int stream, short[] coords);
    public delegate void DglVertexStream1svATI_IP(int stream, IntPtr coords);
    public delegate void DglVertexStream2dATI_IDD(int stream, double x, double y);
    public delegate void DglVertexStream2dvATI_IaD(int stream, double[] coords);
    public delegate void DglVertexStream2dvATI_IP(int stream, IntPtr coords);
    public delegate void DglVertexStream2fATI_IFF(int stream, float x, float y);
    public delegate void DglVertexStream2fvATI_IaF(int stream, float[] coords);
    public delegate void DglVertexStream2fvATI_IP(int stream, IntPtr coords);
    public delegate void DglVertexStream2iATI_III(int stream, int x, int y);
    public delegate void DglVertexStream2ivATI_IaI(int stream, int[] coords);
    public delegate void DglVertexStream2ivATI_IP(int stream, IntPtr coords);
    public delegate void DglVertexStream2sATI_IHH(int stream, short x, short y);
    public delegate void DglVertexStream2svATI_IaH(int stream, short[] coords);
    public delegate void DglVertexStream2svATI_IP(int stream, IntPtr coords);
    public delegate void DglVertexStream3dATI_IDDD(int stream, double x, double y, double z);
    public delegate void DglVertexStream3dvATI_IaD(int stream, double[] coords);
    public delegate void DglVertexStream3dvATI_IP(int stream, IntPtr coords);
    public delegate void DglVertexStream3fATI_IFFF(int stream, float x, float y, float z);
    public delegate void DglVertexStream3fvATI_IaF(int stream, float[] coords);
    public delegate void DglVertexStream3fvATI_IP(int stream, IntPtr coords);
    public delegate void DglVertexStream3iATI_IIII(int stream, int x, int y, int z);
    public delegate void DglVertexStream3ivATI_IaI(int stream, int[] coords);
    public delegate void DglVertexStream3ivATI_IP(int stream, IntPtr coords);
    public delegate void DglVertexStream3sATI_IHHH(int stream, short x, short y, short z);
    public delegate void DglVertexStream3svATI_IaH(int stream, short[] coords);
    public delegate void DglVertexStream3svATI_IP(int stream, IntPtr coords);
    public delegate void DglVertexStream4dATI_IDDDD(int stream, double x, double y, double z, double w);
    public delegate void DglVertexStream4dvATI_IaD(int stream, double[] coords);
    public delegate void DglVertexStream4dvATI_IP(int stream, IntPtr coords);
    public delegate void DglVertexStream4fATI_IFFFF(int stream, float x, float y, float z, float w);
    public delegate void DglVertexStream4fvATI_IaF(int stream, float[] coords);
    public delegate void DglVertexStream4fvATI_IP(int stream, IntPtr coords);
    public delegate void DglVertexStream4iATI_IIIII(int stream, int x, int y, int z, int w);
    public delegate void DglVertexStream4ivATI_IaI(int stream, int[] coords);
    public delegate void DglVertexStream4ivATI_IP(int stream, IntPtr coords);
    public delegate void DglVertexStream4sATI_IHHHH(int stream, short x, short y, short z, short w);
    public delegate void DglVertexStream4svATI_IaH(int stream, short[] coords);
    public delegate void DglVertexStream4svATI_IP(int stream, IntPtr coords);
    public delegate void DglVertexWeightfEXT_F(float weight);
    public delegate void DglVertexWeightfvEXT_aF(float[] weight);
    public delegate void DglVertexWeightfvEXT_P(IntPtr weight);
    public delegate void DglVertexWeighthNV_H(short weight);
    public delegate void DglVertexWeighthvNV_aH(short[] weight);
    public delegate void DglVertexWeighthvNV_P(IntPtr weight);
    public delegate void DglVertexWeightPointerEXT_IIIaB(int size, int itype, int stride, byte[] pointer);
    public delegate void DglVertexWeightPointerEXT_IIIaH(int size, int itype, int stride, short[] pointer);
    public delegate void DglVertexWeightPointerEXT_IIIaI(int size, int itype, int stride, int[] pointer);
    public delegate void DglVertexWeightPointerEXT_IIIaF(int size, int itype, int stride, float[] pointer);
    public delegate void DglVertexWeightPointerEXT_IIIaD(int size, int itype, int stride, double[] pointer);
    public delegate void DglVertexWeightPointerEXT_IIIP(int size, int itype, int stride, IntPtr pointer);
    public delegate void DglViewport_IIII(int x, int y, int width, int height);
    public delegate void DglWeightbvARB_IaB(int size, byte[] weights);
    public delegate void DglWeightbvARB_IP(int size, IntPtr weights);
    public delegate void DglWeightdvARB_IaD(int size, double[] weights);
    public delegate void DglWeightdvARB_IP(int size, IntPtr weights);
    public delegate void DglWeightfvARB_IaF(int size, float[] weights);
    public delegate void DglWeightfvARB_IP(int size, IntPtr weights);
    public delegate void DglWeightivARB_IaI(int size, int[] weights);
    public delegate void DglWeightivARB_IP(int size, IntPtr weights);
    public delegate void DglWeightPointerARB_IIIaB(int size, int itype, int stride, byte[] pointer);
    public delegate void DglWeightPointerARB_IIIaH(int size, int itype, int stride, short[] pointer);
    public delegate void DglWeightPointerARB_IIIaI(int size, int itype, int stride, int[] pointer);
    public delegate void DglWeightPointerARB_IIIaF(int size, int itype, int stride, float[] pointer);
    public delegate void DglWeightPointerARB_IIIaD(int size, int itype, int stride, double[] pointer);
    public delegate void DglWeightPointerARB_IIIP(int size, int itype, int stride, IntPtr pointer);
    public delegate void DglWeightsvARB_IaH(int size, short[] weights);
    public delegate void DglWeightsvARB_IP(int size, IntPtr weights);
    public delegate void DglWeightubvARB_IaB(int size, byte[] weights);
    public delegate void DglWeightubvARB_IP(int size, IntPtr weights);
    public delegate void DglWeightuivARB_IaI(int size, int[] weights);
    public delegate void DglWeightuivARB_IP(int size, IntPtr weights);
    public delegate void DglWeightusvARB_IaH(int size, short[] weights);
    public delegate void DglWeightusvARB_IP(int size, IntPtr weights);
    public delegate void DglWindowPos2d_DD(double x, double y);
    public delegate void DglWindowPos2dARB_DD(double x, double y);
    public delegate void DglWindowPos2dMESA_DD(double x, double y);
    public delegate void DglWindowPos2dv_aD(double[] v);
    public delegate void DglWindowPos2dv_P(IntPtr v);
    public delegate void DglWindowPos2dvARB_aD(double[] v);
    public delegate void DglWindowPos2dvARB_P(IntPtr v);
    public delegate void DglWindowPos2dvMESA_aD(double[] v);
    public delegate void DglWindowPos2dvMESA_P(IntPtr v);
    public delegate void DglWindowPos2f_FF(float x, float y);
    public delegate void DglWindowPos2fARB_FF(float x, float y);
    public delegate void DglWindowPos2fMESA_FF(float x, float y);
    public delegate void DglWindowPos2fv_aF(float[] v);
    public delegate void DglWindowPos2fv_P(IntPtr v);
    public delegate void DglWindowPos2fvARB_aF(float[] v);
    public delegate void DglWindowPos2fvARB_P(IntPtr v);
    public delegate void DglWindowPos2fvMESA_aF(float[] v);
    public delegate void DglWindowPos2fvMESA_P(IntPtr v);
    public delegate void DglWindowPos2i_II(int x, int y);
    public delegate void DglWindowPos2iARB_II(int x, int y);
    public delegate void DglWindowPos2iMESA_II(int x, int y);
    public delegate void DglWindowPos2iv_aI(int[] v);
    public delegate void DglWindowPos2iv_P(IntPtr v);
    public delegate void DglWindowPos2ivARB_aI(int[] v);
    public delegate void DglWindowPos2ivARB_P(IntPtr v);
    public delegate void DglWindowPos2ivMESA_aI(int[] v);
    public delegate void DglWindowPos2ivMESA_P(IntPtr v);
    public delegate void DglWindowPos2s_HH(short x, short y);
    public delegate void DglWindowPos2sARB_HH(short x, short y);
    public delegate void DglWindowPos2sMESA_HH(short x, short y);
    public delegate void DglWindowPos2sv_aH(short[] v);
    public delegate void DglWindowPos2sv_P(IntPtr v);
    public delegate void DglWindowPos2svARB_aH(short[] v);
    public delegate void DglWindowPos2svARB_P(IntPtr v);
    public delegate void DglWindowPos2svMESA_aH(short[] v);
    public delegate void DglWindowPos2svMESA_P(IntPtr v);
    public delegate void DglWindowPos3d_DDD(double x, double y, double z);
    public delegate void DglWindowPos3dARB_DDD(double x, double y, double z);
    public delegate void DglWindowPos3dMESA_DDD(double x, double y, double z);
    public delegate void DglWindowPos3dv_aD(double[] v);
    public delegate void DglWindowPos3dv_P(IntPtr v);
    public delegate void DglWindowPos3dvARB_aD(double[] v);
    public delegate void DglWindowPos3dvARB_P(IntPtr v);
    public delegate void DglWindowPos3dvMESA_aD(double[] v);
    public delegate void DglWindowPos3dvMESA_P(IntPtr v);
    public delegate void DglWindowPos3f_FFF(float x, float y, float z);
    public delegate void DglWindowPos3fARB_FFF(float x, float y, float z);
    public delegate void DglWindowPos3fMESA_FFF(float x, float y, float z);
    public delegate void DglWindowPos3fv_aF(float[] v);
    public delegate void DglWindowPos3fv_P(IntPtr v);
    public delegate void DglWindowPos3fvARB_aF(float[] v);
    public delegate void DglWindowPos3fvARB_P(IntPtr v);
    public delegate void DglWindowPos3fvMESA_aF(float[] v);
    public delegate void DglWindowPos3fvMESA_P(IntPtr v);
    public delegate void DglWindowPos3i_III(int x, int y, int z);
    public delegate void DglWindowPos3iARB_III(int x, int y, int z);
    public delegate void DglWindowPos3iMESA_III(int x, int y, int z);
    public delegate void DglWindowPos3iv_aI(int[] v);
    public delegate void DglWindowPos3iv_P(IntPtr v);
    public delegate void DglWindowPos3ivARB_aI(int[] v);
    public delegate void DglWindowPos3ivARB_P(IntPtr v);
    public delegate void DglWindowPos3ivMESA_aI(int[] v);
    public delegate void DglWindowPos3ivMESA_P(IntPtr v);
    public delegate void DglWindowPos3s_HHH(short x, short y, short z);
    public delegate void DglWindowPos3sARB_HHH(short x, short y, short z);
    public delegate void DglWindowPos3sMESA_HHH(short x, short y, short z);
    public delegate void DglWindowPos3sv_aH(short[] v);
    public delegate void DglWindowPos3sv_P(IntPtr v);
    public delegate void DglWindowPos3svARB_aH(short[] v);
    public delegate void DglWindowPos3svARB_P(IntPtr v);
    public delegate void DglWindowPos3svMESA_aH(short[] v);
    public delegate void DglWindowPos3svMESA_P(IntPtr v);
    public delegate void DglWindowPos4dMESA_DDDD(double x, double y, double z, double w);
    public delegate void DglWindowPos4dvMESA_aD(double[] v);
    public delegate void DglWindowPos4dvMESA_P(IntPtr v);
    public delegate void DglWindowPos4fMESA_FFFF(float x, float y, float z, float w);
    public delegate void DglWindowPos4fvMESA_aF(float[] v);
    public delegate void DglWindowPos4fvMESA_P(IntPtr v);
    public delegate void DglWindowPos4iMESA_IIII(int x, int y, int z, int w);
    public delegate void DglWindowPos4ivMESA_aI(int[] v);
    public delegate void DglWindowPos4ivMESA_P(IntPtr v);
    public delegate void DglWindowPos4sMESA_HHHH(short x, short y, short z, short w);
    public delegate void DglWindowPos4svMESA_aH(short[] v);
    public delegate void DglWindowPos4svMESA_P(IntPtr v);
    public delegate void DglWriteMaskEXT_IIIIII(int res, int iin, int outX, int outY, int outZ, int outW);
    public delegate int DSwapBuffers_P(IntPtr hdc);

}

